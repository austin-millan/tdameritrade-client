/*
 * TD Ameritrade API
 *
 * TD Ameritrade API
 *
 * API version: 3.0.1
 * Contact: austin.millan@protonmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MarginAccountCurrentBalances struct for MarginAccountCurrentBalances
type MarginAccountCurrentBalances struct {
	AccruedInterest *float32 `json:"accruedInterest,omitempty"`
	AvailableFunds *float32 `json:"availableFunds,omitempty"`
	AvailableFundsNonMarginableTrade *float32 `json:"availableFundsNonMarginableTrade,omitempty"`
	BondValue *float32 `json:"bondValue,omitempty"`
	BuyingPower *float32 `json:"buyingPower,omitempty"`
	BuyingPowerNonMarginableTrade *float32 `json:"buyingPowerNonMarginableTrade,omitempty"`
	CashBalance *float32 `json:"cashBalance,omitempty"`
	CashReceipts *float32 `json:"cashReceipts,omitempty"`
	DayTradingBuyingPower *float32 `json:"dayTradingBuyingPower,omitempty"`
	DayTradingBuyingPowerCall *float32 `json:"dayTradingBuyingPowerCall,omitempty"`
	Equity *float32 `json:"equity,omitempty"`
	EquityPercentage *float32 `json:"equityPercentage,omitempty"`
	IsInCall *bool `json:"isInCall,omitempty"`
	LiquidationValue *float32 `json:"liquidationValue,omitempty"`
	LongMarginValue *float32 `json:"longMarginValue,omitempty"`
	LongMarketValue *float32 `json:"longMarketValue,omitempty"`
	LongOptionMarketValue *float32 `json:"longOptionMarketValue,omitempty"`
	MaintenanceCall *float32 `json:"maintenanceCall,omitempty"`
	MaintenanceRequirement *float32 `json:"maintenanceRequirement,omitempty"`
	MarginBalance *float32 `json:"marginBalance,omitempty"`
	MoneyMarketFund *float32 `json:"moneyMarketFund,omitempty"`
	MutualFundValue *float32 `json:"mutualFundValue,omitempty"`
	OptionBuyingPower *float32 `json:"optionBuyingPower,omitempty"`
	PendingDeposits *float32 `json:"pendingDeposits,omitempty"`
	RegTCall *float32 `json:"regTCall,omitempty"`
	Savings *float32 `json:"savings,omitempty"`
	ShortBalance *float32 `json:"shortBalance,omitempty"`
	ShortMarginValue *float32 `json:"shortMarginValue,omitempty"`
	ShortMarketValue *float32 `json:"shortMarketValue,omitempty"`
	ShortOptionMarketValue *float32 `json:"shortOptionMarketValue,omitempty"`
	Sma *float32 `json:"sma,omitempty"`
	StockBuyingPower *float32 `json:"stockBuyingPower,omitempty"`
}

// NewMarginAccountCurrentBalances instantiates a new MarginAccountCurrentBalances object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarginAccountCurrentBalances() *MarginAccountCurrentBalances {
	this := MarginAccountCurrentBalances{}
	return &this
}

// NewMarginAccountCurrentBalancesWithDefaults instantiates a new MarginAccountCurrentBalances object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarginAccountCurrentBalancesWithDefaults() *MarginAccountCurrentBalances {
	this := MarginAccountCurrentBalances{}
	return &this
}

// GetAccruedInterest returns the AccruedInterest field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetAccruedInterest() float32 {
	if o == nil || o.AccruedInterest == nil {
		var ret float32
		return ret
	}
	return *o.AccruedInterest
}

// GetAccruedInterestOk returns a tuple with the AccruedInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetAccruedInterestOk() (*float32, bool) {
	if o == nil || o.AccruedInterest == nil {
		return nil, false
	}
	return o.AccruedInterest, true
}

// HasAccruedInterest returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasAccruedInterest() bool {
	if o != nil && o.AccruedInterest != nil {
		return true
	}

	return false
}

// SetAccruedInterest gets a reference to the given float32 and assigns it to the AccruedInterest field.
func (o *MarginAccountCurrentBalances) SetAccruedInterest(v float32) {
	o.AccruedInterest = &v
}

// GetAvailableFunds returns the AvailableFunds field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetAvailableFunds() float32 {
	if o == nil || o.AvailableFunds == nil {
		var ret float32
		return ret
	}
	return *o.AvailableFunds
}

// GetAvailableFundsOk returns a tuple with the AvailableFunds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetAvailableFundsOk() (*float32, bool) {
	if o == nil || o.AvailableFunds == nil {
		return nil, false
	}
	return o.AvailableFunds, true
}

// HasAvailableFunds returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasAvailableFunds() bool {
	if o != nil && o.AvailableFunds != nil {
		return true
	}

	return false
}

// SetAvailableFunds gets a reference to the given float32 and assigns it to the AvailableFunds field.
func (o *MarginAccountCurrentBalances) SetAvailableFunds(v float32) {
	o.AvailableFunds = &v
}

// GetAvailableFundsNonMarginableTrade returns the AvailableFundsNonMarginableTrade field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetAvailableFundsNonMarginableTrade() float32 {
	if o == nil || o.AvailableFundsNonMarginableTrade == nil {
		var ret float32
		return ret
	}
	return *o.AvailableFundsNonMarginableTrade
}

// GetAvailableFundsNonMarginableTradeOk returns a tuple with the AvailableFundsNonMarginableTrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetAvailableFundsNonMarginableTradeOk() (*float32, bool) {
	if o == nil || o.AvailableFundsNonMarginableTrade == nil {
		return nil, false
	}
	return o.AvailableFundsNonMarginableTrade, true
}

// HasAvailableFundsNonMarginableTrade returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasAvailableFundsNonMarginableTrade() bool {
	if o != nil && o.AvailableFundsNonMarginableTrade != nil {
		return true
	}

	return false
}

// SetAvailableFundsNonMarginableTrade gets a reference to the given float32 and assigns it to the AvailableFundsNonMarginableTrade field.
func (o *MarginAccountCurrentBalances) SetAvailableFundsNonMarginableTrade(v float32) {
	o.AvailableFundsNonMarginableTrade = &v
}

// GetBondValue returns the BondValue field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetBondValue() float32 {
	if o == nil || o.BondValue == nil {
		var ret float32
		return ret
	}
	return *o.BondValue
}

// GetBondValueOk returns a tuple with the BondValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetBondValueOk() (*float32, bool) {
	if o == nil || o.BondValue == nil {
		return nil, false
	}
	return o.BondValue, true
}

// HasBondValue returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasBondValue() bool {
	if o != nil && o.BondValue != nil {
		return true
	}

	return false
}

// SetBondValue gets a reference to the given float32 and assigns it to the BondValue field.
func (o *MarginAccountCurrentBalances) SetBondValue(v float32) {
	o.BondValue = &v
}

// GetBuyingPower returns the BuyingPower field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetBuyingPower() float32 {
	if o == nil || o.BuyingPower == nil {
		var ret float32
		return ret
	}
	return *o.BuyingPower
}

// GetBuyingPowerOk returns a tuple with the BuyingPower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetBuyingPowerOk() (*float32, bool) {
	if o == nil || o.BuyingPower == nil {
		return nil, false
	}
	return o.BuyingPower, true
}

// HasBuyingPower returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasBuyingPower() bool {
	if o != nil && o.BuyingPower != nil {
		return true
	}

	return false
}

// SetBuyingPower gets a reference to the given float32 and assigns it to the BuyingPower field.
func (o *MarginAccountCurrentBalances) SetBuyingPower(v float32) {
	o.BuyingPower = &v
}

// GetBuyingPowerNonMarginableTrade returns the BuyingPowerNonMarginableTrade field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetBuyingPowerNonMarginableTrade() float32 {
	if o == nil || o.BuyingPowerNonMarginableTrade == nil {
		var ret float32
		return ret
	}
	return *o.BuyingPowerNonMarginableTrade
}

// GetBuyingPowerNonMarginableTradeOk returns a tuple with the BuyingPowerNonMarginableTrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetBuyingPowerNonMarginableTradeOk() (*float32, bool) {
	if o == nil || o.BuyingPowerNonMarginableTrade == nil {
		return nil, false
	}
	return o.BuyingPowerNonMarginableTrade, true
}

// HasBuyingPowerNonMarginableTrade returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasBuyingPowerNonMarginableTrade() bool {
	if o != nil && o.BuyingPowerNonMarginableTrade != nil {
		return true
	}

	return false
}

// SetBuyingPowerNonMarginableTrade gets a reference to the given float32 and assigns it to the BuyingPowerNonMarginableTrade field.
func (o *MarginAccountCurrentBalances) SetBuyingPowerNonMarginableTrade(v float32) {
	o.BuyingPowerNonMarginableTrade = &v
}

// GetCashBalance returns the CashBalance field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetCashBalance() float32 {
	if o == nil || o.CashBalance == nil {
		var ret float32
		return ret
	}
	return *o.CashBalance
}

// GetCashBalanceOk returns a tuple with the CashBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetCashBalanceOk() (*float32, bool) {
	if o == nil || o.CashBalance == nil {
		return nil, false
	}
	return o.CashBalance, true
}

// HasCashBalance returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasCashBalance() bool {
	if o != nil && o.CashBalance != nil {
		return true
	}

	return false
}

// SetCashBalance gets a reference to the given float32 and assigns it to the CashBalance field.
func (o *MarginAccountCurrentBalances) SetCashBalance(v float32) {
	o.CashBalance = &v
}

// GetCashReceipts returns the CashReceipts field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetCashReceipts() float32 {
	if o == nil || o.CashReceipts == nil {
		var ret float32
		return ret
	}
	return *o.CashReceipts
}

// GetCashReceiptsOk returns a tuple with the CashReceipts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetCashReceiptsOk() (*float32, bool) {
	if o == nil || o.CashReceipts == nil {
		return nil, false
	}
	return o.CashReceipts, true
}

// HasCashReceipts returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasCashReceipts() bool {
	if o != nil && o.CashReceipts != nil {
		return true
	}

	return false
}

// SetCashReceipts gets a reference to the given float32 and assigns it to the CashReceipts field.
func (o *MarginAccountCurrentBalances) SetCashReceipts(v float32) {
	o.CashReceipts = &v
}

// GetDayTradingBuyingPower returns the DayTradingBuyingPower field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetDayTradingBuyingPower() float32 {
	if o == nil || o.DayTradingBuyingPower == nil {
		var ret float32
		return ret
	}
	return *o.DayTradingBuyingPower
}

// GetDayTradingBuyingPowerOk returns a tuple with the DayTradingBuyingPower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetDayTradingBuyingPowerOk() (*float32, bool) {
	if o == nil || o.DayTradingBuyingPower == nil {
		return nil, false
	}
	return o.DayTradingBuyingPower, true
}

// HasDayTradingBuyingPower returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasDayTradingBuyingPower() bool {
	if o != nil && o.DayTradingBuyingPower != nil {
		return true
	}

	return false
}

// SetDayTradingBuyingPower gets a reference to the given float32 and assigns it to the DayTradingBuyingPower field.
func (o *MarginAccountCurrentBalances) SetDayTradingBuyingPower(v float32) {
	o.DayTradingBuyingPower = &v
}

// GetDayTradingBuyingPowerCall returns the DayTradingBuyingPowerCall field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetDayTradingBuyingPowerCall() float32 {
	if o == nil || o.DayTradingBuyingPowerCall == nil {
		var ret float32
		return ret
	}
	return *o.DayTradingBuyingPowerCall
}

// GetDayTradingBuyingPowerCallOk returns a tuple with the DayTradingBuyingPowerCall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetDayTradingBuyingPowerCallOk() (*float32, bool) {
	if o == nil || o.DayTradingBuyingPowerCall == nil {
		return nil, false
	}
	return o.DayTradingBuyingPowerCall, true
}

// HasDayTradingBuyingPowerCall returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasDayTradingBuyingPowerCall() bool {
	if o != nil && o.DayTradingBuyingPowerCall != nil {
		return true
	}

	return false
}

// SetDayTradingBuyingPowerCall gets a reference to the given float32 and assigns it to the DayTradingBuyingPowerCall field.
func (o *MarginAccountCurrentBalances) SetDayTradingBuyingPowerCall(v float32) {
	o.DayTradingBuyingPowerCall = &v
}

// GetEquity returns the Equity field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetEquity() float32 {
	if o == nil || o.Equity == nil {
		var ret float32
		return ret
	}
	return *o.Equity
}

// GetEquityOk returns a tuple with the Equity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetEquityOk() (*float32, bool) {
	if o == nil || o.Equity == nil {
		return nil, false
	}
	return o.Equity, true
}

// HasEquity returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasEquity() bool {
	if o != nil && o.Equity != nil {
		return true
	}

	return false
}

// SetEquity gets a reference to the given float32 and assigns it to the Equity field.
func (o *MarginAccountCurrentBalances) SetEquity(v float32) {
	o.Equity = &v
}

// GetEquityPercentage returns the EquityPercentage field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetEquityPercentage() float32 {
	if o == nil || o.EquityPercentage == nil {
		var ret float32
		return ret
	}
	return *o.EquityPercentage
}

// GetEquityPercentageOk returns a tuple with the EquityPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetEquityPercentageOk() (*float32, bool) {
	if o == nil || o.EquityPercentage == nil {
		return nil, false
	}
	return o.EquityPercentage, true
}

// HasEquityPercentage returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasEquityPercentage() bool {
	if o != nil && o.EquityPercentage != nil {
		return true
	}

	return false
}

// SetEquityPercentage gets a reference to the given float32 and assigns it to the EquityPercentage field.
func (o *MarginAccountCurrentBalances) SetEquityPercentage(v float32) {
	o.EquityPercentage = &v
}

// GetIsInCall returns the IsInCall field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetIsInCall() bool {
	if o == nil || o.IsInCall == nil {
		var ret bool
		return ret
	}
	return *o.IsInCall
}

// GetIsInCallOk returns a tuple with the IsInCall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetIsInCallOk() (*bool, bool) {
	if o == nil || o.IsInCall == nil {
		return nil, false
	}
	return o.IsInCall, true
}

// HasIsInCall returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasIsInCall() bool {
	if o != nil && o.IsInCall != nil {
		return true
	}

	return false
}

// SetIsInCall gets a reference to the given bool and assigns it to the IsInCall field.
func (o *MarginAccountCurrentBalances) SetIsInCall(v bool) {
	o.IsInCall = &v
}

// GetLiquidationValue returns the LiquidationValue field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetLiquidationValue() float32 {
	if o == nil || o.LiquidationValue == nil {
		var ret float32
		return ret
	}
	return *o.LiquidationValue
}

// GetLiquidationValueOk returns a tuple with the LiquidationValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetLiquidationValueOk() (*float32, bool) {
	if o == nil || o.LiquidationValue == nil {
		return nil, false
	}
	return o.LiquidationValue, true
}

// HasLiquidationValue returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasLiquidationValue() bool {
	if o != nil && o.LiquidationValue != nil {
		return true
	}

	return false
}

// SetLiquidationValue gets a reference to the given float32 and assigns it to the LiquidationValue field.
func (o *MarginAccountCurrentBalances) SetLiquidationValue(v float32) {
	o.LiquidationValue = &v
}

// GetLongMarginValue returns the LongMarginValue field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetLongMarginValue() float32 {
	if o == nil || o.LongMarginValue == nil {
		var ret float32
		return ret
	}
	return *o.LongMarginValue
}

// GetLongMarginValueOk returns a tuple with the LongMarginValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetLongMarginValueOk() (*float32, bool) {
	if o == nil || o.LongMarginValue == nil {
		return nil, false
	}
	return o.LongMarginValue, true
}

// HasLongMarginValue returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasLongMarginValue() bool {
	if o != nil && o.LongMarginValue != nil {
		return true
	}

	return false
}

// SetLongMarginValue gets a reference to the given float32 and assigns it to the LongMarginValue field.
func (o *MarginAccountCurrentBalances) SetLongMarginValue(v float32) {
	o.LongMarginValue = &v
}

// GetLongMarketValue returns the LongMarketValue field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetLongMarketValue() float32 {
	if o == nil || o.LongMarketValue == nil {
		var ret float32
		return ret
	}
	return *o.LongMarketValue
}

// GetLongMarketValueOk returns a tuple with the LongMarketValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetLongMarketValueOk() (*float32, bool) {
	if o == nil || o.LongMarketValue == nil {
		return nil, false
	}
	return o.LongMarketValue, true
}

// HasLongMarketValue returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasLongMarketValue() bool {
	if o != nil && o.LongMarketValue != nil {
		return true
	}

	return false
}

// SetLongMarketValue gets a reference to the given float32 and assigns it to the LongMarketValue field.
func (o *MarginAccountCurrentBalances) SetLongMarketValue(v float32) {
	o.LongMarketValue = &v
}

// GetLongOptionMarketValue returns the LongOptionMarketValue field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetLongOptionMarketValue() float32 {
	if o == nil || o.LongOptionMarketValue == nil {
		var ret float32
		return ret
	}
	return *o.LongOptionMarketValue
}

// GetLongOptionMarketValueOk returns a tuple with the LongOptionMarketValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetLongOptionMarketValueOk() (*float32, bool) {
	if o == nil || o.LongOptionMarketValue == nil {
		return nil, false
	}
	return o.LongOptionMarketValue, true
}

// HasLongOptionMarketValue returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasLongOptionMarketValue() bool {
	if o != nil && o.LongOptionMarketValue != nil {
		return true
	}

	return false
}

// SetLongOptionMarketValue gets a reference to the given float32 and assigns it to the LongOptionMarketValue field.
func (o *MarginAccountCurrentBalances) SetLongOptionMarketValue(v float32) {
	o.LongOptionMarketValue = &v
}

// GetMaintenanceCall returns the MaintenanceCall field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetMaintenanceCall() float32 {
	if o == nil || o.MaintenanceCall == nil {
		var ret float32
		return ret
	}
	return *o.MaintenanceCall
}

// GetMaintenanceCallOk returns a tuple with the MaintenanceCall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetMaintenanceCallOk() (*float32, bool) {
	if o == nil || o.MaintenanceCall == nil {
		return nil, false
	}
	return o.MaintenanceCall, true
}

// HasMaintenanceCall returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasMaintenanceCall() bool {
	if o != nil && o.MaintenanceCall != nil {
		return true
	}

	return false
}

// SetMaintenanceCall gets a reference to the given float32 and assigns it to the MaintenanceCall field.
func (o *MarginAccountCurrentBalances) SetMaintenanceCall(v float32) {
	o.MaintenanceCall = &v
}

// GetMaintenanceRequirement returns the MaintenanceRequirement field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetMaintenanceRequirement() float32 {
	if o == nil || o.MaintenanceRequirement == nil {
		var ret float32
		return ret
	}
	return *o.MaintenanceRequirement
}

// GetMaintenanceRequirementOk returns a tuple with the MaintenanceRequirement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetMaintenanceRequirementOk() (*float32, bool) {
	if o == nil || o.MaintenanceRequirement == nil {
		return nil, false
	}
	return o.MaintenanceRequirement, true
}

// HasMaintenanceRequirement returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasMaintenanceRequirement() bool {
	if o != nil && o.MaintenanceRequirement != nil {
		return true
	}

	return false
}

// SetMaintenanceRequirement gets a reference to the given float32 and assigns it to the MaintenanceRequirement field.
func (o *MarginAccountCurrentBalances) SetMaintenanceRequirement(v float32) {
	o.MaintenanceRequirement = &v
}

// GetMarginBalance returns the MarginBalance field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetMarginBalance() float32 {
	if o == nil || o.MarginBalance == nil {
		var ret float32
		return ret
	}
	return *o.MarginBalance
}

// GetMarginBalanceOk returns a tuple with the MarginBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetMarginBalanceOk() (*float32, bool) {
	if o == nil || o.MarginBalance == nil {
		return nil, false
	}
	return o.MarginBalance, true
}

// HasMarginBalance returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasMarginBalance() bool {
	if o != nil && o.MarginBalance != nil {
		return true
	}

	return false
}

// SetMarginBalance gets a reference to the given float32 and assigns it to the MarginBalance field.
func (o *MarginAccountCurrentBalances) SetMarginBalance(v float32) {
	o.MarginBalance = &v
}

// GetMoneyMarketFund returns the MoneyMarketFund field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetMoneyMarketFund() float32 {
	if o == nil || o.MoneyMarketFund == nil {
		var ret float32
		return ret
	}
	return *o.MoneyMarketFund
}

// GetMoneyMarketFundOk returns a tuple with the MoneyMarketFund field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetMoneyMarketFundOk() (*float32, bool) {
	if o == nil || o.MoneyMarketFund == nil {
		return nil, false
	}
	return o.MoneyMarketFund, true
}

// HasMoneyMarketFund returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasMoneyMarketFund() bool {
	if o != nil && o.MoneyMarketFund != nil {
		return true
	}

	return false
}

// SetMoneyMarketFund gets a reference to the given float32 and assigns it to the MoneyMarketFund field.
func (o *MarginAccountCurrentBalances) SetMoneyMarketFund(v float32) {
	o.MoneyMarketFund = &v
}

// GetMutualFundValue returns the MutualFundValue field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetMutualFundValue() float32 {
	if o == nil || o.MutualFundValue == nil {
		var ret float32
		return ret
	}
	return *o.MutualFundValue
}

// GetMutualFundValueOk returns a tuple with the MutualFundValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetMutualFundValueOk() (*float32, bool) {
	if o == nil || o.MutualFundValue == nil {
		return nil, false
	}
	return o.MutualFundValue, true
}

// HasMutualFundValue returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasMutualFundValue() bool {
	if o != nil && o.MutualFundValue != nil {
		return true
	}

	return false
}

// SetMutualFundValue gets a reference to the given float32 and assigns it to the MutualFundValue field.
func (o *MarginAccountCurrentBalances) SetMutualFundValue(v float32) {
	o.MutualFundValue = &v
}

// GetOptionBuyingPower returns the OptionBuyingPower field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetOptionBuyingPower() float32 {
	if o == nil || o.OptionBuyingPower == nil {
		var ret float32
		return ret
	}
	return *o.OptionBuyingPower
}

// GetOptionBuyingPowerOk returns a tuple with the OptionBuyingPower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetOptionBuyingPowerOk() (*float32, bool) {
	if o == nil || o.OptionBuyingPower == nil {
		return nil, false
	}
	return o.OptionBuyingPower, true
}

// HasOptionBuyingPower returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasOptionBuyingPower() bool {
	if o != nil && o.OptionBuyingPower != nil {
		return true
	}

	return false
}

// SetOptionBuyingPower gets a reference to the given float32 and assigns it to the OptionBuyingPower field.
func (o *MarginAccountCurrentBalances) SetOptionBuyingPower(v float32) {
	o.OptionBuyingPower = &v
}

// GetPendingDeposits returns the PendingDeposits field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetPendingDeposits() float32 {
	if o == nil || o.PendingDeposits == nil {
		var ret float32
		return ret
	}
	return *o.PendingDeposits
}

// GetPendingDepositsOk returns a tuple with the PendingDeposits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetPendingDepositsOk() (*float32, bool) {
	if o == nil || o.PendingDeposits == nil {
		return nil, false
	}
	return o.PendingDeposits, true
}

// HasPendingDeposits returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasPendingDeposits() bool {
	if o != nil && o.PendingDeposits != nil {
		return true
	}

	return false
}

// SetPendingDeposits gets a reference to the given float32 and assigns it to the PendingDeposits field.
func (o *MarginAccountCurrentBalances) SetPendingDeposits(v float32) {
	o.PendingDeposits = &v
}

// GetRegTCall returns the RegTCall field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetRegTCall() float32 {
	if o == nil || o.RegTCall == nil {
		var ret float32
		return ret
	}
	return *o.RegTCall
}

// GetRegTCallOk returns a tuple with the RegTCall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetRegTCallOk() (*float32, bool) {
	if o == nil || o.RegTCall == nil {
		return nil, false
	}
	return o.RegTCall, true
}

// HasRegTCall returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasRegTCall() bool {
	if o != nil && o.RegTCall != nil {
		return true
	}

	return false
}

// SetRegTCall gets a reference to the given float32 and assigns it to the RegTCall field.
func (o *MarginAccountCurrentBalances) SetRegTCall(v float32) {
	o.RegTCall = &v
}

// GetSavings returns the Savings field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetSavings() float32 {
	if o == nil || o.Savings == nil {
		var ret float32
		return ret
	}
	return *o.Savings
}

// GetSavingsOk returns a tuple with the Savings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetSavingsOk() (*float32, bool) {
	if o == nil || o.Savings == nil {
		return nil, false
	}
	return o.Savings, true
}

// HasSavings returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasSavings() bool {
	if o != nil && o.Savings != nil {
		return true
	}

	return false
}

// SetSavings gets a reference to the given float32 and assigns it to the Savings field.
func (o *MarginAccountCurrentBalances) SetSavings(v float32) {
	o.Savings = &v
}

// GetShortBalance returns the ShortBalance field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetShortBalance() float32 {
	if o == nil || o.ShortBalance == nil {
		var ret float32
		return ret
	}
	return *o.ShortBalance
}

// GetShortBalanceOk returns a tuple with the ShortBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetShortBalanceOk() (*float32, bool) {
	if o == nil || o.ShortBalance == nil {
		return nil, false
	}
	return o.ShortBalance, true
}

// HasShortBalance returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasShortBalance() bool {
	if o != nil && o.ShortBalance != nil {
		return true
	}

	return false
}

// SetShortBalance gets a reference to the given float32 and assigns it to the ShortBalance field.
func (o *MarginAccountCurrentBalances) SetShortBalance(v float32) {
	o.ShortBalance = &v
}

// GetShortMarginValue returns the ShortMarginValue field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetShortMarginValue() float32 {
	if o == nil || o.ShortMarginValue == nil {
		var ret float32
		return ret
	}
	return *o.ShortMarginValue
}

// GetShortMarginValueOk returns a tuple with the ShortMarginValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetShortMarginValueOk() (*float32, bool) {
	if o == nil || o.ShortMarginValue == nil {
		return nil, false
	}
	return o.ShortMarginValue, true
}

// HasShortMarginValue returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasShortMarginValue() bool {
	if o != nil && o.ShortMarginValue != nil {
		return true
	}

	return false
}

// SetShortMarginValue gets a reference to the given float32 and assigns it to the ShortMarginValue field.
func (o *MarginAccountCurrentBalances) SetShortMarginValue(v float32) {
	o.ShortMarginValue = &v
}

// GetShortMarketValue returns the ShortMarketValue field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetShortMarketValue() float32 {
	if o == nil || o.ShortMarketValue == nil {
		var ret float32
		return ret
	}
	return *o.ShortMarketValue
}

// GetShortMarketValueOk returns a tuple with the ShortMarketValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetShortMarketValueOk() (*float32, bool) {
	if o == nil || o.ShortMarketValue == nil {
		return nil, false
	}
	return o.ShortMarketValue, true
}

// HasShortMarketValue returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasShortMarketValue() bool {
	if o != nil && o.ShortMarketValue != nil {
		return true
	}

	return false
}

// SetShortMarketValue gets a reference to the given float32 and assigns it to the ShortMarketValue field.
func (o *MarginAccountCurrentBalances) SetShortMarketValue(v float32) {
	o.ShortMarketValue = &v
}

// GetShortOptionMarketValue returns the ShortOptionMarketValue field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetShortOptionMarketValue() float32 {
	if o == nil || o.ShortOptionMarketValue == nil {
		var ret float32
		return ret
	}
	return *o.ShortOptionMarketValue
}

// GetShortOptionMarketValueOk returns a tuple with the ShortOptionMarketValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetShortOptionMarketValueOk() (*float32, bool) {
	if o == nil || o.ShortOptionMarketValue == nil {
		return nil, false
	}
	return o.ShortOptionMarketValue, true
}

// HasShortOptionMarketValue returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasShortOptionMarketValue() bool {
	if o != nil && o.ShortOptionMarketValue != nil {
		return true
	}

	return false
}

// SetShortOptionMarketValue gets a reference to the given float32 and assigns it to the ShortOptionMarketValue field.
func (o *MarginAccountCurrentBalances) SetShortOptionMarketValue(v float32) {
	o.ShortOptionMarketValue = &v
}

// GetSma returns the Sma field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetSma() float32 {
	if o == nil || o.Sma == nil {
		var ret float32
		return ret
	}
	return *o.Sma
}

// GetSmaOk returns a tuple with the Sma field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetSmaOk() (*float32, bool) {
	if o == nil || o.Sma == nil {
		return nil, false
	}
	return o.Sma, true
}

// HasSma returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasSma() bool {
	if o != nil && o.Sma != nil {
		return true
	}

	return false
}

// SetSma gets a reference to the given float32 and assigns it to the Sma field.
func (o *MarginAccountCurrentBalances) SetSma(v float32) {
	o.Sma = &v
}

// GetStockBuyingPower returns the StockBuyingPower field value if set, zero value otherwise.
func (o *MarginAccountCurrentBalances) GetStockBuyingPower() float32 {
	if o == nil || o.StockBuyingPower == nil {
		var ret float32
		return ret
	}
	return *o.StockBuyingPower
}

// GetStockBuyingPowerOk returns a tuple with the StockBuyingPower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccountCurrentBalances) GetStockBuyingPowerOk() (*float32, bool) {
	if o == nil || o.StockBuyingPower == nil {
		return nil, false
	}
	return o.StockBuyingPower, true
}

// HasStockBuyingPower returns a boolean if a field has been set.
func (o *MarginAccountCurrentBalances) HasStockBuyingPower() bool {
	if o != nil && o.StockBuyingPower != nil {
		return true
	}

	return false
}

// SetStockBuyingPower gets a reference to the given float32 and assigns it to the StockBuyingPower field.
func (o *MarginAccountCurrentBalances) SetStockBuyingPower(v float32) {
	o.StockBuyingPower = &v
}

func (o MarginAccountCurrentBalances) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccruedInterest != nil {
		toSerialize["accruedInterest"] = o.AccruedInterest
	}
	if o.AvailableFunds != nil {
		toSerialize["availableFunds"] = o.AvailableFunds
	}
	if o.AvailableFundsNonMarginableTrade != nil {
		toSerialize["availableFundsNonMarginableTrade"] = o.AvailableFundsNonMarginableTrade
	}
	if o.BondValue != nil {
		toSerialize["bondValue"] = o.BondValue
	}
	if o.BuyingPower != nil {
		toSerialize["buyingPower"] = o.BuyingPower
	}
	if o.BuyingPowerNonMarginableTrade != nil {
		toSerialize["buyingPowerNonMarginableTrade"] = o.BuyingPowerNonMarginableTrade
	}
	if o.CashBalance != nil {
		toSerialize["cashBalance"] = o.CashBalance
	}
	if o.CashReceipts != nil {
		toSerialize["cashReceipts"] = o.CashReceipts
	}
	if o.DayTradingBuyingPower != nil {
		toSerialize["dayTradingBuyingPower"] = o.DayTradingBuyingPower
	}
	if o.DayTradingBuyingPowerCall != nil {
		toSerialize["dayTradingBuyingPowerCall"] = o.DayTradingBuyingPowerCall
	}
	if o.Equity != nil {
		toSerialize["equity"] = o.Equity
	}
	if o.EquityPercentage != nil {
		toSerialize["equityPercentage"] = o.EquityPercentage
	}
	if o.IsInCall != nil {
		toSerialize["isInCall"] = o.IsInCall
	}
	if o.LiquidationValue != nil {
		toSerialize["liquidationValue"] = o.LiquidationValue
	}
	if o.LongMarginValue != nil {
		toSerialize["longMarginValue"] = o.LongMarginValue
	}
	if o.LongMarketValue != nil {
		toSerialize["longMarketValue"] = o.LongMarketValue
	}
	if o.LongOptionMarketValue != nil {
		toSerialize["longOptionMarketValue"] = o.LongOptionMarketValue
	}
	if o.MaintenanceCall != nil {
		toSerialize["maintenanceCall"] = o.MaintenanceCall
	}
	if o.MaintenanceRequirement != nil {
		toSerialize["maintenanceRequirement"] = o.MaintenanceRequirement
	}
	if o.MarginBalance != nil {
		toSerialize["marginBalance"] = o.MarginBalance
	}
	if o.MoneyMarketFund != nil {
		toSerialize["moneyMarketFund"] = o.MoneyMarketFund
	}
	if o.MutualFundValue != nil {
		toSerialize["mutualFundValue"] = o.MutualFundValue
	}
	if o.OptionBuyingPower != nil {
		toSerialize["optionBuyingPower"] = o.OptionBuyingPower
	}
	if o.PendingDeposits != nil {
		toSerialize["pendingDeposits"] = o.PendingDeposits
	}
	if o.RegTCall != nil {
		toSerialize["regTCall"] = o.RegTCall
	}
	if o.Savings != nil {
		toSerialize["savings"] = o.Savings
	}
	if o.ShortBalance != nil {
		toSerialize["shortBalance"] = o.ShortBalance
	}
	if o.ShortMarginValue != nil {
		toSerialize["shortMarginValue"] = o.ShortMarginValue
	}
	if o.ShortMarketValue != nil {
		toSerialize["shortMarketValue"] = o.ShortMarketValue
	}
	if o.ShortOptionMarketValue != nil {
		toSerialize["shortOptionMarketValue"] = o.ShortOptionMarketValue
	}
	if o.Sma != nil {
		toSerialize["sma"] = o.Sma
	}
	if o.StockBuyingPower != nil {
		toSerialize["stockBuyingPower"] = o.StockBuyingPower
	}
	return json.Marshal(toSerialize)
}

type NullableMarginAccountCurrentBalances struct {
	value *MarginAccountCurrentBalances
	isSet bool
}

func (v NullableMarginAccountCurrentBalances) Get() *MarginAccountCurrentBalances {
	return v.value
}

func (v *NullableMarginAccountCurrentBalances) Set(val *MarginAccountCurrentBalances) {
	v.value = val
	v.isSet = true
}

func (v NullableMarginAccountCurrentBalances) IsSet() bool {
	return v.isSet
}

func (v *NullableMarginAccountCurrentBalances) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarginAccountCurrentBalances(val *MarginAccountCurrentBalances) *NullableMarginAccountCurrentBalances {
	return &NullableMarginAccountCurrentBalances{value: val, isSet: true}
}

func (v NullableMarginAccountCurrentBalances) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarginAccountCurrentBalances) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


