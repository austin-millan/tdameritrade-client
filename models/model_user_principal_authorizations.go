/*
 * TD Ameritrade API
 *
 * TD Ameritrade API
 *
 * API version: 3.0.1
 * Contact: austin.millan@protonmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UserPrincipalAuthorizations struct for UserPrincipalAuthorizations
type UserPrincipalAuthorizations struct {
	AdvancedMargin *bool `json:"advancedMargin,omitempty"`
	Apex *bool `json:"apex,omitempty"`
	LevelTwoQuotes *bool `json:"levelTwoQuotes,omitempty"`
	MarginTrading *bool `json:"marginTrading,omitempty"`
	OptionTradingLevel *string `json:"optionTradingLevel,omitempty"`
	ScottradeAccount *bool `json:"scottradeAccount,omitempty"`
	StockTrading *bool `json:"stockTrading,omitempty"`
	StreamerAccess *bool `json:"streamerAccess,omitempty"`
	StreamingNews *bool `json:"streamingNews,omitempty"`
}

// NewUserPrincipalAuthorizations instantiates a new UserPrincipalAuthorizations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserPrincipalAuthorizations() *UserPrincipalAuthorizations {
	this := UserPrincipalAuthorizations{}
	return &this
}

// NewUserPrincipalAuthorizationsWithDefaults instantiates a new UserPrincipalAuthorizations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserPrincipalAuthorizationsWithDefaults() *UserPrincipalAuthorizations {
	this := UserPrincipalAuthorizations{}
	return &this
}

// GetAdvancedMargin returns the AdvancedMargin field value if set, zero value otherwise.
func (o *UserPrincipalAuthorizations) GetAdvancedMargin() bool {
	if o == nil || o.AdvancedMargin == nil {
		var ret bool
		return ret
	}
	return *o.AdvancedMargin
}

// GetAdvancedMarginOk returns a tuple with the AdvancedMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPrincipalAuthorizations) GetAdvancedMarginOk() (*bool, bool) {
	if o == nil || o.AdvancedMargin == nil {
		return nil, false
	}
	return o.AdvancedMargin, true
}

// HasAdvancedMargin returns a boolean if a field has been set.
func (o *UserPrincipalAuthorizations) HasAdvancedMargin() bool {
	if o != nil && o.AdvancedMargin != nil {
		return true
	}

	return false
}

// SetAdvancedMargin gets a reference to the given bool and assigns it to the AdvancedMargin field.
func (o *UserPrincipalAuthorizations) SetAdvancedMargin(v bool) {
	o.AdvancedMargin = &v
}

// GetApex returns the Apex field value if set, zero value otherwise.
func (o *UserPrincipalAuthorizations) GetApex() bool {
	if o == nil || o.Apex == nil {
		var ret bool
		return ret
	}
	return *o.Apex
}

// GetApexOk returns a tuple with the Apex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPrincipalAuthorizations) GetApexOk() (*bool, bool) {
	if o == nil || o.Apex == nil {
		return nil, false
	}
	return o.Apex, true
}

// HasApex returns a boolean if a field has been set.
func (o *UserPrincipalAuthorizations) HasApex() bool {
	if o != nil && o.Apex != nil {
		return true
	}

	return false
}

// SetApex gets a reference to the given bool and assigns it to the Apex field.
func (o *UserPrincipalAuthorizations) SetApex(v bool) {
	o.Apex = &v
}

// GetLevelTwoQuotes returns the LevelTwoQuotes field value if set, zero value otherwise.
func (o *UserPrincipalAuthorizations) GetLevelTwoQuotes() bool {
	if o == nil || o.LevelTwoQuotes == nil {
		var ret bool
		return ret
	}
	return *o.LevelTwoQuotes
}

// GetLevelTwoQuotesOk returns a tuple with the LevelTwoQuotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPrincipalAuthorizations) GetLevelTwoQuotesOk() (*bool, bool) {
	if o == nil || o.LevelTwoQuotes == nil {
		return nil, false
	}
	return o.LevelTwoQuotes, true
}

// HasLevelTwoQuotes returns a boolean if a field has been set.
func (o *UserPrincipalAuthorizations) HasLevelTwoQuotes() bool {
	if o != nil && o.LevelTwoQuotes != nil {
		return true
	}

	return false
}

// SetLevelTwoQuotes gets a reference to the given bool and assigns it to the LevelTwoQuotes field.
func (o *UserPrincipalAuthorizations) SetLevelTwoQuotes(v bool) {
	o.LevelTwoQuotes = &v
}

// GetMarginTrading returns the MarginTrading field value if set, zero value otherwise.
func (o *UserPrincipalAuthorizations) GetMarginTrading() bool {
	if o == nil || o.MarginTrading == nil {
		var ret bool
		return ret
	}
	return *o.MarginTrading
}

// GetMarginTradingOk returns a tuple with the MarginTrading field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPrincipalAuthorizations) GetMarginTradingOk() (*bool, bool) {
	if o == nil || o.MarginTrading == nil {
		return nil, false
	}
	return o.MarginTrading, true
}

// HasMarginTrading returns a boolean if a field has been set.
func (o *UserPrincipalAuthorizations) HasMarginTrading() bool {
	if o != nil && o.MarginTrading != nil {
		return true
	}

	return false
}

// SetMarginTrading gets a reference to the given bool and assigns it to the MarginTrading field.
func (o *UserPrincipalAuthorizations) SetMarginTrading(v bool) {
	o.MarginTrading = &v
}

// GetOptionTradingLevel returns the OptionTradingLevel field value if set, zero value otherwise.
func (o *UserPrincipalAuthorizations) GetOptionTradingLevel() string {
	if o == nil || o.OptionTradingLevel == nil {
		var ret string
		return ret
	}
	return *o.OptionTradingLevel
}

// GetOptionTradingLevelOk returns a tuple with the OptionTradingLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPrincipalAuthorizations) GetOptionTradingLevelOk() (*string, bool) {
	if o == nil || o.OptionTradingLevel == nil {
		return nil, false
	}
	return o.OptionTradingLevel, true
}

// HasOptionTradingLevel returns a boolean if a field has been set.
func (o *UserPrincipalAuthorizations) HasOptionTradingLevel() bool {
	if o != nil && o.OptionTradingLevel != nil {
		return true
	}

	return false
}

// SetOptionTradingLevel gets a reference to the given string and assigns it to the OptionTradingLevel field.
func (o *UserPrincipalAuthorizations) SetOptionTradingLevel(v string) {
	o.OptionTradingLevel = &v
}

// GetScottradeAccount returns the ScottradeAccount field value if set, zero value otherwise.
func (o *UserPrincipalAuthorizations) GetScottradeAccount() bool {
	if o == nil || o.ScottradeAccount == nil {
		var ret bool
		return ret
	}
	return *o.ScottradeAccount
}

// GetScottradeAccountOk returns a tuple with the ScottradeAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPrincipalAuthorizations) GetScottradeAccountOk() (*bool, bool) {
	if o == nil || o.ScottradeAccount == nil {
		return nil, false
	}
	return o.ScottradeAccount, true
}

// HasScottradeAccount returns a boolean if a field has been set.
func (o *UserPrincipalAuthorizations) HasScottradeAccount() bool {
	if o != nil && o.ScottradeAccount != nil {
		return true
	}

	return false
}

// SetScottradeAccount gets a reference to the given bool and assigns it to the ScottradeAccount field.
func (o *UserPrincipalAuthorizations) SetScottradeAccount(v bool) {
	o.ScottradeAccount = &v
}

// GetStockTrading returns the StockTrading field value if set, zero value otherwise.
func (o *UserPrincipalAuthorizations) GetStockTrading() bool {
	if o == nil || o.StockTrading == nil {
		var ret bool
		return ret
	}
	return *o.StockTrading
}

// GetStockTradingOk returns a tuple with the StockTrading field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPrincipalAuthorizations) GetStockTradingOk() (*bool, bool) {
	if o == nil || o.StockTrading == nil {
		return nil, false
	}
	return o.StockTrading, true
}

// HasStockTrading returns a boolean if a field has been set.
func (o *UserPrincipalAuthorizations) HasStockTrading() bool {
	if o != nil && o.StockTrading != nil {
		return true
	}

	return false
}

// SetStockTrading gets a reference to the given bool and assigns it to the StockTrading field.
func (o *UserPrincipalAuthorizations) SetStockTrading(v bool) {
	o.StockTrading = &v
}

// GetStreamerAccess returns the StreamerAccess field value if set, zero value otherwise.
func (o *UserPrincipalAuthorizations) GetStreamerAccess() bool {
	if o == nil || o.StreamerAccess == nil {
		var ret bool
		return ret
	}
	return *o.StreamerAccess
}

// GetStreamerAccessOk returns a tuple with the StreamerAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPrincipalAuthorizations) GetStreamerAccessOk() (*bool, bool) {
	if o == nil || o.StreamerAccess == nil {
		return nil, false
	}
	return o.StreamerAccess, true
}

// HasStreamerAccess returns a boolean if a field has been set.
func (o *UserPrincipalAuthorizations) HasStreamerAccess() bool {
	if o != nil && o.StreamerAccess != nil {
		return true
	}

	return false
}

// SetStreamerAccess gets a reference to the given bool and assigns it to the StreamerAccess field.
func (o *UserPrincipalAuthorizations) SetStreamerAccess(v bool) {
	o.StreamerAccess = &v
}

// GetStreamingNews returns the StreamingNews field value if set, zero value otherwise.
func (o *UserPrincipalAuthorizations) GetStreamingNews() bool {
	if o == nil || o.StreamingNews == nil {
		var ret bool
		return ret
	}
	return *o.StreamingNews
}

// GetStreamingNewsOk returns a tuple with the StreamingNews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPrincipalAuthorizations) GetStreamingNewsOk() (*bool, bool) {
	if o == nil || o.StreamingNews == nil {
		return nil, false
	}
	return o.StreamingNews, true
}

// HasStreamingNews returns a boolean if a field has been set.
func (o *UserPrincipalAuthorizations) HasStreamingNews() bool {
	if o != nil && o.StreamingNews != nil {
		return true
	}

	return false
}

// SetStreamingNews gets a reference to the given bool and assigns it to the StreamingNews field.
func (o *UserPrincipalAuthorizations) SetStreamingNews(v bool) {
	o.StreamingNews = &v
}

func (o UserPrincipalAuthorizations) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdvancedMargin != nil {
		toSerialize["advancedMargin"] = o.AdvancedMargin
	}
	if o.Apex != nil {
		toSerialize["apex"] = o.Apex
	}
	if o.LevelTwoQuotes != nil {
		toSerialize["levelTwoQuotes"] = o.LevelTwoQuotes
	}
	if o.MarginTrading != nil {
		toSerialize["marginTrading"] = o.MarginTrading
	}
	if o.OptionTradingLevel != nil {
		toSerialize["optionTradingLevel"] = o.OptionTradingLevel
	}
	if o.ScottradeAccount != nil {
		toSerialize["scottradeAccount"] = o.ScottradeAccount
	}
	if o.StockTrading != nil {
		toSerialize["stockTrading"] = o.StockTrading
	}
	if o.StreamerAccess != nil {
		toSerialize["streamerAccess"] = o.StreamerAccess
	}
	if o.StreamingNews != nil {
		toSerialize["streamingNews"] = o.StreamingNews
	}
	return json.Marshal(toSerialize)
}

type NullableUserPrincipalAuthorizations struct {
	value *UserPrincipalAuthorizations
	isSet bool
}

func (v NullableUserPrincipalAuthorizations) Get() *UserPrincipalAuthorizations {
	return v.value
}

func (v *NullableUserPrincipalAuthorizations) Set(val *UserPrincipalAuthorizations) {
	v.value = val
	v.isSet = true
}

func (v NullableUserPrincipalAuthorizations) IsSet() bool {
	return v.isSet
}

func (v *NullableUserPrincipalAuthorizations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserPrincipalAuthorizations(val *UserPrincipalAuthorizations) *NullableUserPrincipalAuthorizations {
	return &NullableUserPrincipalAuthorizations{value: val, isSet: true}
}

func (v NullableUserPrincipalAuthorizations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserPrincipalAuthorizations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


