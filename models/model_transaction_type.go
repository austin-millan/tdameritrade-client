/*
 * TD Ameritrade API
 *
 * TD Ameritrade API
 *
 * API version: 3.0.1
 * Contact: austin.millan@protonmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// TransactionType the model 'TransactionType'
type TransactionType string

// List of TransactionType
const (
	TRANSACTIONTYPE_ALL TransactionType = "ALL"
	TRANSACTIONTYPE_TRADE TransactionType = "TRADE"
	TRANSACTIONTYPE_BUY_ONLY TransactionType = "BUY_ONLY"
	TRANSACTIONTYPE_SELL_ONLY TransactionType = "SELL_ONLY"
	TRANSACTIONTYPE_CASH_IN_OR_CASH_OUT TransactionType = "CASH_IN_OR_CASH_OUT"
	TRANSACTIONTYPE_CHECKING TransactionType = "CHECKING"
	TRANSACTIONTYPE_DIVIDEND TransactionType = "DIVIDEND"
	TRANSACTIONTYPE_INTEREST TransactionType = "INTEREST"
	TRANSACTIONTYPE_OTHER TransactionType = "OTHER"
	TRANSACTIONTYPE_ADVISOR_FEES TransactionType = "ADVISOR_FEES"
)

func (v *TransactionType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := TransactionType(value)
	for _, existing := range []TransactionType{ "ALL", "TRADE", "BUY_ONLY", "SELL_ONLY", "CASH_IN_OR_CASH_OUT", "CHECKING", "DIVIDEND", "INTEREST", "OTHER", "ADVISOR_FEES",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid TransactionType", value)
}

// Ptr returns reference to TransactionType value
func (v TransactionType) Ptr() *TransactionType {
	return &v
}

type NullableTransactionType struct {
	value *TransactionType
	isSet bool
}

func (v NullableTransactionType) Get() *TransactionType {
	return v.value
}

func (v *NullableTransactionType) Set(val *TransactionType) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionType) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionType(val *TransactionType) *NullableTransactionType {
	return &NullableTransactionType{value: val, isSet: true}
}

func (v NullableTransactionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

