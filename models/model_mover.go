/*
 * TD Ameritrade API
 *
 * TD Ameritrade API
 *
 * API version: 3.0.1
 * Contact: austin.millan@protonmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Mover struct for Mover
type Mover struct {
	Change *float32 `json:"change,omitempty"`
	Description *string `json:"description,omitempty"`
	Direction *string `json:"direction,omitempty"`
	Last *float32 `json:"last,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
	TotalVolume *float32 `json:"totalVolume,omitempty"`
}

// NewMover instantiates a new Mover object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMover() *Mover {
	this := Mover{}
	return &this
}

// NewMoverWithDefaults instantiates a new Mover object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoverWithDefaults() *Mover {
	this := Mover{}
	return &this
}

// GetChange returns the Change field value if set, zero value otherwise.
func (o *Mover) GetChange() float32 {
	if o == nil || o.Change == nil {
		var ret float32
		return ret
	}
	return *o.Change
}

// GetChangeOk returns a tuple with the Change field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mover) GetChangeOk() (*float32, bool) {
	if o == nil || o.Change == nil {
		return nil, false
	}
	return o.Change, true
}

// HasChange returns a boolean if a field has been set.
func (o *Mover) HasChange() bool {
	if o != nil && o.Change != nil {
		return true
	}

	return false
}

// SetChange gets a reference to the given float32 and assigns it to the Change field.
func (o *Mover) SetChange(v float32) {
	o.Change = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Mover) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mover) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Mover) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Mover) SetDescription(v string) {
	o.Description = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *Mover) GetDirection() string {
	if o == nil || o.Direction == nil {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mover) GetDirectionOk() (*string, bool) {
	if o == nil || o.Direction == nil {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *Mover) HasDirection() bool {
	if o != nil && o.Direction != nil {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *Mover) SetDirection(v string) {
	o.Direction = &v
}

// GetLast returns the Last field value if set, zero value otherwise.
func (o *Mover) GetLast() float32 {
	if o == nil || o.Last == nil {
		var ret float32
		return ret
	}
	return *o.Last
}

// GetLastOk returns a tuple with the Last field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mover) GetLastOk() (*float32, bool) {
	if o == nil || o.Last == nil {
		return nil, false
	}
	return o.Last, true
}

// HasLast returns a boolean if a field has been set.
func (o *Mover) HasLast() bool {
	if o != nil && o.Last != nil {
		return true
	}

	return false
}

// SetLast gets a reference to the given float32 and assigns it to the Last field.
func (o *Mover) SetLast(v float32) {
	o.Last = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *Mover) GetSymbol() string {
	if o == nil || o.Symbol == nil {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mover) GetSymbolOk() (*string, bool) {
	if o == nil || o.Symbol == nil {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *Mover) HasSymbol() bool {
	if o != nil && o.Symbol != nil {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *Mover) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTotalVolume returns the TotalVolume field value if set, zero value otherwise.
func (o *Mover) GetTotalVolume() float32 {
	if o == nil || o.TotalVolume == nil {
		var ret float32
		return ret
	}
	return *o.TotalVolume
}

// GetTotalVolumeOk returns a tuple with the TotalVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mover) GetTotalVolumeOk() (*float32, bool) {
	if o == nil || o.TotalVolume == nil {
		return nil, false
	}
	return o.TotalVolume, true
}

// HasTotalVolume returns a boolean if a field has been set.
func (o *Mover) HasTotalVolume() bool {
	if o != nil && o.TotalVolume != nil {
		return true
	}

	return false
}

// SetTotalVolume gets a reference to the given float32 and assigns it to the TotalVolume field.
func (o *Mover) SetTotalVolume(v float32) {
	o.TotalVolume = &v
}

func (o Mover) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Change != nil {
		toSerialize["change"] = o.Change
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Direction != nil {
		toSerialize["direction"] = o.Direction
	}
	if o.Last != nil {
		toSerialize["last"] = o.Last
	}
	if o.Symbol != nil {
		toSerialize["symbol"] = o.Symbol
	}
	if o.TotalVolume != nil {
		toSerialize["totalVolume"] = o.TotalVolume
	}
	return json.Marshal(toSerialize)
}

type NullableMover struct {
	value *Mover
	isSet bool
}

func (v NullableMover) Get() *Mover {
	return v.value
}

func (v *NullableMover) Set(val *Mover) {
	v.value = val
	v.isSet = true
}

func (v NullableMover) IsSet() bool {
	return v.isSet
}

func (v *NullableMover) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMover(val *Mover) *NullableMover {
	return &NullableMover{value: val, isSet: true}
}

func (v NullableMover) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMover) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


