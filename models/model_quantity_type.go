/*
 * TD Ameritrade API
 *
 * TD Ameritrade API
 *
 * API version: 3.0.1
 * Contact: austin.millan@protonmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// QuantityType the model 'QuantityType'
type QuantityType string

// List of QuantityType
const (
	QUANTITYTYPE_ALL_SHARES QuantityType = "ALL_SHARES"
	QUANTITYTYPE_DOLLARS QuantityType = "DOLLARS"
	QUANTITYTYPE_SHARES QuantityType = "SHARES"
)

func (v *QuantityType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := QuantityType(value)
	for _, existing := range []QuantityType{ "ALL_SHARES", "DOLLARS", "SHARES",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid QuantityType", value)
}

// Ptr returns reference to QuantityType value
func (v QuantityType) Ptr() *QuantityType {
	return &v
}

type NullableQuantityType struct {
	value *QuantityType
	isSet bool
}

func (v NullableQuantityType) Get() *QuantityType {
	return v.value
}

func (v *NullableQuantityType) Set(val *QuantityType) {
	v.value = val
	v.isSet = true
}

func (v NullableQuantityType) IsSet() bool {
	return v.isSet
}

func (v *NullableQuantityType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuantityType(val *QuantityType) *NullableQuantityType {
	return &NullableQuantityType{value: val, isSet: true}
}

func (v NullableQuantityType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuantityType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

