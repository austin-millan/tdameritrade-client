/*
 * TD Ameritrade API
 *
 * TD Ameritrade API
 *
 * API version: 3.0.1
 * Contact: austin.millan@protonmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Execution struct for Execution
type Execution struct {
	ActivityType *string `json:"activityType,omitempty"`
	ExecutionLegs *[]ExecutionExecutionLegs `json:"executionLegs,omitempty"`
	ExecutionType *string `json:"executionType,omitempty"`
	OrderRemainingQuantity *float32 `json:"orderRemainingQuantity,omitempty"`
	Quantity *float32 `json:"quantity,omitempty"`
}

// NewExecution instantiates a new Execution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecution() *Execution {
	this := Execution{}
	return &this
}

// NewExecutionWithDefaults instantiates a new Execution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecutionWithDefaults() *Execution {
	this := Execution{}
	return &this
}

// GetActivityType returns the ActivityType field value if set, zero value otherwise.
func (o *Execution) GetActivityType() string {
	if o == nil || o.ActivityType == nil {
		var ret string
		return ret
	}
	return *o.ActivityType
}

// GetActivityTypeOk returns a tuple with the ActivityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Execution) GetActivityTypeOk() (*string, bool) {
	if o == nil || o.ActivityType == nil {
		return nil, false
	}
	return o.ActivityType, true
}

// HasActivityType returns a boolean if a field has been set.
func (o *Execution) HasActivityType() bool {
	if o != nil && o.ActivityType != nil {
		return true
	}

	return false
}

// SetActivityType gets a reference to the given string and assigns it to the ActivityType field.
func (o *Execution) SetActivityType(v string) {
	o.ActivityType = &v
}

// GetExecutionLegs returns the ExecutionLegs field value if set, zero value otherwise.
func (o *Execution) GetExecutionLegs() []ExecutionExecutionLegs {
	if o == nil || o.ExecutionLegs == nil {
		var ret []ExecutionExecutionLegs
		return ret
	}
	return *o.ExecutionLegs
}

// GetExecutionLegsOk returns a tuple with the ExecutionLegs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Execution) GetExecutionLegsOk() (*[]ExecutionExecutionLegs, bool) {
	if o == nil || o.ExecutionLegs == nil {
		return nil, false
	}
	return o.ExecutionLegs, true
}

// HasExecutionLegs returns a boolean if a field has been set.
func (o *Execution) HasExecutionLegs() bool {
	if o != nil && o.ExecutionLegs != nil {
		return true
	}

	return false
}

// SetExecutionLegs gets a reference to the given []ExecutionExecutionLegs and assigns it to the ExecutionLegs field.
func (o *Execution) SetExecutionLegs(v []ExecutionExecutionLegs) {
	o.ExecutionLegs = &v
}

// GetExecutionType returns the ExecutionType field value if set, zero value otherwise.
func (o *Execution) GetExecutionType() string {
	if o == nil || o.ExecutionType == nil {
		var ret string
		return ret
	}
	return *o.ExecutionType
}

// GetExecutionTypeOk returns a tuple with the ExecutionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Execution) GetExecutionTypeOk() (*string, bool) {
	if o == nil || o.ExecutionType == nil {
		return nil, false
	}
	return o.ExecutionType, true
}

// HasExecutionType returns a boolean if a field has been set.
func (o *Execution) HasExecutionType() bool {
	if o != nil && o.ExecutionType != nil {
		return true
	}

	return false
}

// SetExecutionType gets a reference to the given string and assigns it to the ExecutionType field.
func (o *Execution) SetExecutionType(v string) {
	o.ExecutionType = &v
}

// GetOrderRemainingQuantity returns the OrderRemainingQuantity field value if set, zero value otherwise.
func (o *Execution) GetOrderRemainingQuantity() float32 {
	if o == nil || o.OrderRemainingQuantity == nil {
		var ret float32
		return ret
	}
	return *o.OrderRemainingQuantity
}

// GetOrderRemainingQuantityOk returns a tuple with the OrderRemainingQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Execution) GetOrderRemainingQuantityOk() (*float32, bool) {
	if o == nil || o.OrderRemainingQuantity == nil {
		return nil, false
	}
	return o.OrderRemainingQuantity, true
}

// HasOrderRemainingQuantity returns a boolean if a field has been set.
func (o *Execution) HasOrderRemainingQuantity() bool {
	if o != nil && o.OrderRemainingQuantity != nil {
		return true
	}

	return false
}

// SetOrderRemainingQuantity gets a reference to the given float32 and assigns it to the OrderRemainingQuantity field.
func (o *Execution) SetOrderRemainingQuantity(v float32) {
	o.OrderRemainingQuantity = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *Execution) GetQuantity() float32 {
	if o == nil || o.Quantity == nil {
		var ret float32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Execution) GetQuantityOk() (*float32, bool) {
	if o == nil || o.Quantity == nil {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *Execution) HasQuantity() bool {
	if o != nil && o.Quantity != nil {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given float32 and assigns it to the Quantity field.
func (o *Execution) SetQuantity(v float32) {
	o.Quantity = &v
}

func (o Execution) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActivityType != nil {
		toSerialize["activityType"] = o.ActivityType
	}
	if o.ExecutionLegs != nil {
		toSerialize["executionLegs"] = o.ExecutionLegs
	}
	if o.ExecutionType != nil {
		toSerialize["executionType"] = o.ExecutionType
	}
	if o.OrderRemainingQuantity != nil {
		toSerialize["orderRemainingQuantity"] = o.OrderRemainingQuantity
	}
	if o.Quantity != nil {
		toSerialize["quantity"] = o.Quantity
	}
	return json.Marshal(toSerialize)
}

type NullableExecution struct {
	value *Execution
	isSet bool
}

func (v NullableExecution) Get() *Execution {
	return v.value
}

func (v *NullableExecution) Set(val *Execution) {
	v.value = val
	v.isSet = true
}

func (v NullableExecution) IsSet() bool {
	return v.isSet
}

func (v *NullableExecution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecution(val *Execution) *NullableExecution {
	return &NullableExecution{value: val, isSet: true}
}

func (v NullableExecution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


