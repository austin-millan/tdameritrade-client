/*
 * TD Ameritrade API
 *
 * TD Ameritrade API
 *
 * API version: 3.0.1
 * Contact: austin.millan@protonmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Hours struct for Hours
type Hours struct {
	Category *string `json:"category,omitempty"`
	Date *string `json:"date,omitempty"`
	Exchange *string `json:"exchange,omitempty"`
	IsOpen *bool `json:"isOpen,omitempty"`
	MarketType *string `json:"marketType,omitempty"`
	Product *string `json:"product,omitempty"`
	ProductName *string `json:"productName,omitempty"`
	SessionHours *string `json:"sessionHours,omitempty"`
}

// NewHours instantiates a new Hours object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHours() *Hours {
	this := Hours{}
	return &this
}

// NewHoursWithDefaults instantiates a new Hours object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHoursWithDefaults() *Hours {
	this := Hours{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *Hours) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hours) GetCategoryOk() (*string, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *Hours) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *Hours) SetCategory(v string) {
	o.Category = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *Hours) GetDate() string {
	if o == nil || o.Date == nil {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hours) GetDateOk() (*string, bool) {
	if o == nil || o.Date == nil {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *Hours) HasDate() bool {
	if o != nil && o.Date != nil {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *Hours) SetDate(v string) {
	o.Date = &v
}

// GetExchange returns the Exchange field value if set, zero value otherwise.
func (o *Hours) GetExchange() string {
	if o == nil || o.Exchange == nil {
		var ret string
		return ret
	}
	return *o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hours) GetExchangeOk() (*string, bool) {
	if o == nil || o.Exchange == nil {
		return nil, false
	}
	return o.Exchange, true
}

// HasExchange returns a boolean if a field has been set.
func (o *Hours) HasExchange() bool {
	if o != nil && o.Exchange != nil {
		return true
	}

	return false
}

// SetExchange gets a reference to the given string and assigns it to the Exchange field.
func (o *Hours) SetExchange(v string) {
	o.Exchange = &v
}

// GetIsOpen returns the IsOpen field value if set, zero value otherwise.
func (o *Hours) GetIsOpen() bool {
	if o == nil || o.IsOpen == nil {
		var ret bool
		return ret
	}
	return *o.IsOpen
}

// GetIsOpenOk returns a tuple with the IsOpen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hours) GetIsOpenOk() (*bool, bool) {
	if o == nil || o.IsOpen == nil {
		return nil, false
	}
	return o.IsOpen, true
}

// HasIsOpen returns a boolean if a field has been set.
func (o *Hours) HasIsOpen() bool {
	if o != nil && o.IsOpen != nil {
		return true
	}

	return false
}

// SetIsOpen gets a reference to the given bool and assigns it to the IsOpen field.
func (o *Hours) SetIsOpen(v bool) {
	o.IsOpen = &v
}

// GetMarketType returns the MarketType field value if set, zero value otherwise.
func (o *Hours) GetMarketType() string {
	if o == nil || o.MarketType == nil {
		var ret string
		return ret
	}
	return *o.MarketType
}

// GetMarketTypeOk returns a tuple with the MarketType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hours) GetMarketTypeOk() (*string, bool) {
	if o == nil || o.MarketType == nil {
		return nil, false
	}
	return o.MarketType, true
}

// HasMarketType returns a boolean if a field has been set.
func (o *Hours) HasMarketType() bool {
	if o != nil && o.MarketType != nil {
		return true
	}

	return false
}

// SetMarketType gets a reference to the given string and assigns it to the MarketType field.
func (o *Hours) SetMarketType(v string) {
	o.MarketType = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *Hours) GetProduct() string {
	if o == nil || o.Product == nil {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hours) GetProductOk() (*string, bool) {
	if o == nil || o.Product == nil {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *Hours) HasProduct() bool {
	if o != nil && o.Product != nil {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *Hours) SetProduct(v string) {
	o.Product = &v
}

// GetProductName returns the ProductName field value if set, zero value otherwise.
func (o *Hours) GetProductName() string {
	if o == nil || o.ProductName == nil {
		var ret string
		return ret
	}
	return *o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hours) GetProductNameOk() (*string, bool) {
	if o == nil || o.ProductName == nil {
		return nil, false
	}
	return o.ProductName, true
}

// HasProductName returns a boolean if a field has been set.
func (o *Hours) HasProductName() bool {
	if o != nil && o.ProductName != nil {
		return true
	}

	return false
}

// SetProductName gets a reference to the given string and assigns it to the ProductName field.
func (o *Hours) SetProductName(v string) {
	o.ProductName = &v
}

// GetSessionHours returns the SessionHours field value if set, zero value otherwise.
func (o *Hours) GetSessionHours() string {
	if o == nil || o.SessionHours == nil {
		var ret string
		return ret
	}
	return *o.SessionHours
}

// GetSessionHoursOk returns a tuple with the SessionHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hours) GetSessionHoursOk() (*string, bool) {
	if o == nil || o.SessionHours == nil {
		return nil, false
	}
	return o.SessionHours, true
}

// HasSessionHours returns a boolean if a field has been set.
func (o *Hours) HasSessionHours() bool {
	if o != nil && o.SessionHours != nil {
		return true
	}

	return false
}

// SetSessionHours gets a reference to the given string and assigns it to the SessionHours field.
func (o *Hours) SetSessionHours(v string) {
	o.SessionHours = &v
}

func (o Hours) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.Date != nil {
		toSerialize["date"] = o.Date
	}
	if o.Exchange != nil {
		toSerialize["exchange"] = o.Exchange
	}
	if o.IsOpen != nil {
		toSerialize["isOpen"] = o.IsOpen
	}
	if o.MarketType != nil {
		toSerialize["marketType"] = o.MarketType
	}
	if o.Product != nil {
		toSerialize["product"] = o.Product
	}
	if o.ProductName != nil {
		toSerialize["productName"] = o.ProductName
	}
	if o.SessionHours != nil {
		toSerialize["sessionHours"] = o.SessionHours
	}
	return json.Marshal(toSerialize)
}

type NullableHours struct {
	value *Hours
	isSet bool
}

func (v NullableHours) Get() *Hours {
	return v.value
}

func (v *NullableHours) Set(val *Hours) {
	v.value = val
	v.isSet = true
}

func (v NullableHours) IsSet() bool {
	return v.isSet
}

func (v *NullableHours) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHours(val *Hours) *NullableHours {
	return &NullableHours{value: val, isSet: true}
}

func (v NullableHours) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHours) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


