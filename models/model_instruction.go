/*
 * TD Ameritrade API
 *
 * TD Ameritrade API
 *
 * API version: 3.0.1
 * Contact: austin.millan@protonmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// Instruction the model 'Instruction'
type Instruction string

// List of Instruction
const (
	INSTRUCTION_BUY Instruction = "BUY"
	INSTRUCTION_SELL Instruction = "SELL"
	INSTRUCTION_BUY_TO_COVER Instruction = "BUY_TO_COVER"
	INSTRUCTION_BUY_TO_OPEN Instruction = "BUY_TO_OPEN"
	INSTRUCTION_BUY_TO_CLOSE Instruction = "BUY_TO_CLOSE"
	INSTRUCTION_SELL_TO_OPEN Instruction = "SELL_TO_OPEN"
	INSTRUCTION_SELL_TO_CLOSE Instruction = "SELL_TO_CLOSE"
	INSTRUCTION_EXCHANGE Instruction = "EXCHANGE"
)

func (v *Instruction) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Instruction(value)
	for _, existing := range []Instruction{ "BUY", "SELL", "BUY_TO_COVER", "BUY_TO_OPEN", "BUY_TO_CLOSE", "SELL_TO_OPEN", "SELL_TO_CLOSE", "EXCHANGE",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Instruction", value)
}

// Ptr returns reference to Instruction value
func (v Instruction) Ptr() *Instruction {
	return &v
}

type NullableInstruction struct {
	value *Instruction
	isSet bool
}

func (v NullableInstruction) Get() *Instruction {
	return v.value
}

func (v *NullableInstruction) Set(val *Instruction) {
	v.value = val
	v.isSet = true
}

func (v NullableInstruction) IsSet() bool {
	return v.isSet
}

func (v *NullableInstruction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstruction(val *Instruction) *NullableInstruction {
	return &NullableInstruction{value: val, isSet: true}
}

func (v NullableInstruction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstruction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

