/*
 * TD Ameritrade API
 *
 * TD Ameritrade API
 *
 * API version: 3.0.1
 * Contact: austin.millan@protonmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UserPrincipalQuotes struct for UserPrincipalQuotes
type UserPrincipalQuotes struct {
	IsAmexDelayed *bool `json:"isAmexDelayed,omitempty"`
	IsCmeDelayed *bool `json:"isCmeDelayed,omitempty"`
	IsForexDelayed *bool `json:"isForexDelayed,omitempty"`
	IsIceDelayed *bool `json:"isIceDelayed,omitempty"`
	IsNasdaqDelayed *bool `json:"isNasdaqDelayed,omitempty"`
	IsNyseDelayed *bool `json:"isNyseDelayed,omitempty"`
	IsOpraDelayed *bool `json:"isOpraDelayed,omitempty"`
}

// NewUserPrincipalQuotes instantiates a new UserPrincipalQuotes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserPrincipalQuotes() *UserPrincipalQuotes {
	this := UserPrincipalQuotes{}
	return &this
}

// NewUserPrincipalQuotesWithDefaults instantiates a new UserPrincipalQuotes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserPrincipalQuotesWithDefaults() *UserPrincipalQuotes {
	this := UserPrincipalQuotes{}
	return &this
}

// GetIsAmexDelayed returns the IsAmexDelayed field value if set, zero value otherwise.
func (o *UserPrincipalQuotes) GetIsAmexDelayed() bool {
	if o == nil || o.IsAmexDelayed == nil {
		var ret bool
		return ret
	}
	return *o.IsAmexDelayed
}

// GetIsAmexDelayedOk returns a tuple with the IsAmexDelayed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPrincipalQuotes) GetIsAmexDelayedOk() (*bool, bool) {
	if o == nil || o.IsAmexDelayed == nil {
		return nil, false
	}
	return o.IsAmexDelayed, true
}

// HasIsAmexDelayed returns a boolean if a field has been set.
func (o *UserPrincipalQuotes) HasIsAmexDelayed() bool {
	if o != nil && o.IsAmexDelayed != nil {
		return true
	}

	return false
}

// SetIsAmexDelayed gets a reference to the given bool and assigns it to the IsAmexDelayed field.
func (o *UserPrincipalQuotes) SetIsAmexDelayed(v bool) {
	o.IsAmexDelayed = &v
}

// GetIsCmeDelayed returns the IsCmeDelayed field value if set, zero value otherwise.
func (o *UserPrincipalQuotes) GetIsCmeDelayed() bool {
	if o == nil || o.IsCmeDelayed == nil {
		var ret bool
		return ret
	}
	return *o.IsCmeDelayed
}

// GetIsCmeDelayedOk returns a tuple with the IsCmeDelayed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPrincipalQuotes) GetIsCmeDelayedOk() (*bool, bool) {
	if o == nil || o.IsCmeDelayed == nil {
		return nil, false
	}
	return o.IsCmeDelayed, true
}

// HasIsCmeDelayed returns a boolean if a field has been set.
func (o *UserPrincipalQuotes) HasIsCmeDelayed() bool {
	if o != nil && o.IsCmeDelayed != nil {
		return true
	}

	return false
}

// SetIsCmeDelayed gets a reference to the given bool and assigns it to the IsCmeDelayed field.
func (o *UserPrincipalQuotes) SetIsCmeDelayed(v bool) {
	o.IsCmeDelayed = &v
}

// GetIsForexDelayed returns the IsForexDelayed field value if set, zero value otherwise.
func (o *UserPrincipalQuotes) GetIsForexDelayed() bool {
	if o == nil || o.IsForexDelayed == nil {
		var ret bool
		return ret
	}
	return *o.IsForexDelayed
}

// GetIsForexDelayedOk returns a tuple with the IsForexDelayed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPrincipalQuotes) GetIsForexDelayedOk() (*bool, bool) {
	if o == nil || o.IsForexDelayed == nil {
		return nil, false
	}
	return o.IsForexDelayed, true
}

// HasIsForexDelayed returns a boolean if a field has been set.
func (o *UserPrincipalQuotes) HasIsForexDelayed() bool {
	if o != nil && o.IsForexDelayed != nil {
		return true
	}

	return false
}

// SetIsForexDelayed gets a reference to the given bool and assigns it to the IsForexDelayed field.
func (o *UserPrincipalQuotes) SetIsForexDelayed(v bool) {
	o.IsForexDelayed = &v
}

// GetIsIceDelayed returns the IsIceDelayed field value if set, zero value otherwise.
func (o *UserPrincipalQuotes) GetIsIceDelayed() bool {
	if o == nil || o.IsIceDelayed == nil {
		var ret bool
		return ret
	}
	return *o.IsIceDelayed
}

// GetIsIceDelayedOk returns a tuple with the IsIceDelayed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPrincipalQuotes) GetIsIceDelayedOk() (*bool, bool) {
	if o == nil || o.IsIceDelayed == nil {
		return nil, false
	}
	return o.IsIceDelayed, true
}

// HasIsIceDelayed returns a boolean if a field has been set.
func (o *UserPrincipalQuotes) HasIsIceDelayed() bool {
	if o != nil && o.IsIceDelayed != nil {
		return true
	}

	return false
}

// SetIsIceDelayed gets a reference to the given bool and assigns it to the IsIceDelayed field.
func (o *UserPrincipalQuotes) SetIsIceDelayed(v bool) {
	o.IsIceDelayed = &v
}

// GetIsNasdaqDelayed returns the IsNasdaqDelayed field value if set, zero value otherwise.
func (o *UserPrincipalQuotes) GetIsNasdaqDelayed() bool {
	if o == nil || o.IsNasdaqDelayed == nil {
		var ret bool
		return ret
	}
	return *o.IsNasdaqDelayed
}

// GetIsNasdaqDelayedOk returns a tuple with the IsNasdaqDelayed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPrincipalQuotes) GetIsNasdaqDelayedOk() (*bool, bool) {
	if o == nil || o.IsNasdaqDelayed == nil {
		return nil, false
	}
	return o.IsNasdaqDelayed, true
}

// HasIsNasdaqDelayed returns a boolean if a field has been set.
func (o *UserPrincipalQuotes) HasIsNasdaqDelayed() bool {
	if o != nil && o.IsNasdaqDelayed != nil {
		return true
	}

	return false
}

// SetIsNasdaqDelayed gets a reference to the given bool and assigns it to the IsNasdaqDelayed field.
func (o *UserPrincipalQuotes) SetIsNasdaqDelayed(v bool) {
	o.IsNasdaqDelayed = &v
}

// GetIsNyseDelayed returns the IsNyseDelayed field value if set, zero value otherwise.
func (o *UserPrincipalQuotes) GetIsNyseDelayed() bool {
	if o == nil || o.IsNyseDelayed == nil {
		var ret bool
		return ret
	}
	return *o.IsNyseDelayed
}

// GetIsNyseDelayedOk returns a tuple with the IsNyseDelayed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPrincipalQuotes) GetIsNyseDelayedOk() (*bool, bool) {
	if o == nil || o.IsNyseDelayed == nil {
		return nil, false
	}
	return o.IsNyseDelayed, true
}

// HasIsNyseDelayed returns a boolean if a field has been set.
func (o *UserPrincipalQuotes) HasIsNyseDelayed() bool {
	if o != nil && o.IsNyseDelayed != nil {
		return true
	}

	return false
}

// SetIsNyseDelayed gets a reference to the given bool and assigns it to the IsNyseDelayed field.
func (o *UserPrincipalQuotes) SetIsNyseDelayed(v bool) {
	o.IsNyseDelayed = &v
}

// GetIsOpraDelayed returns the IsOpraDelayed field value if set, zero value otherwise.
func (o *UserPrincipalQuotes) GetIsOpraDelayed() bool {
	if o == nil || o.IsOpraDelayed == nil {
		var ret bool
		return ret
	}
	return *o.IsOpraDelayed
}

// GetIsOpraDelayedOk returns a tuple with the IsOpraDelayed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPrincipalQuotes) GetIsOpraDelayedOk() (*bool, bool) {
	if o == nil || o.IsOpraDelayed == nil {
		return nil, false
	}
	return o.IsOpraDelayed, true
}

// HasIsOpraDelayed returns a boolean if a field has been set.
func (o *UserPrincipalQuotes) HasIsOpraDelayed() bool {
	if o != nil && o.IsOpraDelayed != nil {
		return true
	}

	return false
}

// SetIsOpraDelayed gets a reference to the given bool and assigns it to the IsOpraDelayed field.
func (o *UserPrincipalQuotes) SetIsOpraDelayed(v bool) {
	o.IsOpraDelayed = &v
}

func (o UserPrincipalQuotes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsAmexDelayed != nil {
		toSerialize["isAmexDelayed"] = o.IsAmexDelayed
	}
	if o.IsCmeDelayed != nil {
		toSerialize["isCmeDelayed"] = o.IsCmeDelayed
	}
	if o.IsForexDelayed != nil {
		toSerialize["isForexDelayed"] = o.IsForexDelayed
	}
	if o.IsIceDelayed != nil {
		toSerialize["isIceDelayed"] = o.IsIceDelayed
	}
	if o.IsNasdaqDelayed != nil {
		toSerialize["isNasdaqDelayed"] = o.IsNasdaqDelayed
	}
	if o.IsNyseDelayed != nil {
		toSerialize["isNyseDelayed"] = o.IsNyseDelayed
	}
	if o.IsOpraDelayed != nil {
		toSerialize["isOpraDelayed"] = o.IsOpraDelayed
	}
	return json.Marshal(toSerialize)
}

type NullableUserPrincipalQuotes struct {
	value *UserPrincipalQuotes
	isSet bool
}

func (v NullableUserPrincipalQuotes) Get() *UserPrincipalQuotes {
	return v.value
}

func (v *NullableUserPrincipalQuotes) Set(val *UserPrincipalQuotes) {
	v.value = val
	v.isSet = true
}

func (v NullableUserPrincipalQuotes) IsSet() bool {
	return v.isSet
}

func (v *NullableUserPrincipalQuotes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserPrincipalQuotes(val *UserPrincipalQuotes) *NullableUserPrincipalQuotes {
	return &NullableUserPrincipalQuotes{value: val, isSet: true}
}

func (v NullableUserPrincipalQuotes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserPrincipalQuotes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


