/*
 * TD Ameritrade API
 *
 * TD Ameritrade API
 *
 * API version: 3.0.1
 * Contact: austin.millan@protonmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CashAccountOrderLegCollection struct for CashAccountOrderLegCollection
type CashAccountOrderLegCollection struct {
	Instruction *Instruction `json:"instruction,omitempty"`
	Instrument *InstrumentType `json:"instrument,omitempty"`
	LegId *float32 `json:"legId,omitempty"`
	OrderLegType *AssetType `json:"orderLegType,omitempty"`
	PositionEffect *PositionEffect `json:"positionEffect,omitempty"`
	Quantity *float32 `json:"quantity,omitempty"`
	QuantityType *QuantityType `json:"quantityType,omitempty"`
}

// NewCashAccountOrderLegCollection instantiates a new CashAccountOrderLegCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCashAccountOrderLegCollection() *CashAccountOrderLegCollection {
	this := CashAccountOrderLegCollection{}
	return &this
}

// NewCashAccountOrderLegCollectionWithDefaults instantiates a new CashAccountOrderLegCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCashAccountOrderLegCollectionWithDefaults() *CashAccountOrderLegCollection {
	this := CashAccountOrderLegCollection{}
	return &this
}

// GetInstruction returns the Instruction field value if set, zero value otherwise.
func (o *CashAccountOrderLegCollection) GetInstruction() Instruction {
	if o == nil || o.Instruction == nil {
		var ret Instruction
		return ret
	}
	return *o.Instruction
}

// GetInstructionOk returns a tuple with the Instruction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashAccountOrderLegCollection) GetInstructionOk() (*Instruction, bool) {
	if o == nil || o.Instruction == nil {
		return nil, false
	}
	return o.Instruction, true
}

// HasInstruction returns a boolean if a field has been set.
func (o *CashAccountOrderLegCollection) HasInstruction() bool {
	if o != nil && o.Instruction != nil {
		return true
	}

	return false
}

// SetInstruction gets a reference to the given Instruction and assigns it to the Instruction field.
func (o *CashAccountOrderLegCollection) SetInstruction(v Instruction) {
	o.Instruction = &v
}

// GetInstrument returns the Instrument field value if set, zero value otherwise.
func (o *CashAccountOrderLegCollection) GetInstrument() InstrumentType {
	if o == nil || o.Instrument == nil {
		var ret InstrumentType
		return ret
	}
	return *o.Instrument
}

// GetInstrumentOk returns a tuple with the Instrument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashAccountOrderLegCollection) GetInstrumentOk() (*InstrumentType, bool) {
	if o == nil || o.Instrument == nil {
		return nil, false
	}
	return o.Instrument, true
}

// HasInstrument returns a boolean if a field has been set.
func (o *CashAccountOrderLegCollection) HasInstrument() bool {
	if o != nil && o.Instrument != nil {
		return true
	}

	return false
}

// SetInstrument gets a reference to the given InstrumentType and assigns it to the Instrument field.
func (o *CashAccountOrderLegCollection) SetInstrument(v InstrumentType) {
	o.Instrument = &v
}

// GetLegId returns the LegId field value if set, zero value otherwise.
func (o *CashAccountOrderLegCollection) GetLegId() float32 {
	if o == nil || o.LegId == nil {
		var ret float32
		return ret
	}
	return *o.LegId
}

// GetLegIdOk returns a tuple with the LegId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashAccountOrderLegCollection) GetLegIdOk() (*float32, bool) {
	if o == nil || o.LegId == nil {
		return nil, false
	}
	return o.LegId, true
}

// HasLegId returns a boolean if a field has been set.
func (o *CashAccountOrderLegCollection) HasLegId() bool {
	if o != nil && o.LegId != nil {
		return true
	}

	return false
}

// SetLegId gets a reference to the given float32 and assigns it to the LegId field.
func (o *CashAccountOrderLegCollection) SetLegId(v float32) {
	o.LegId = &v
}

// GetOrderLegType returns the OrderLegType field value if set, zero value otherwise.
func (o *CashAccountOrderLegCollection) GetOrderLegType() AssetType {
	if o == nil || o.OrderLegType == nil {
		var ret AssetType
		return ret
	}
	return *o.OrderLegType
}

// GetOrderLegTypeOk returns a tuple with the OrderLegType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashAccountOrderLegCollection) GetOrderLegTypeOk() (*AssetType, bool) {
	if o == nil || o.OrderLegType == nil {
		return nil, false
	}
	return o.OrderLegType, true
}

// HasOrderLegType returns a boolean if a field has been set.
func (o *CashAccountOrderLegCollection) HasOrderLegType() bool {
	if o != nil && o.OrderLegType != nil {
		return true
	}

	return false
}

// SetOrderLegType gets a reference to the given AssetType and assigns it to the OrderLegType field.
func (o *CashAccountOrderLegCollection) SetOrderLegType(v AssetType) {
	o.OrderLegType = &v
}

// GetPositionEffect returns the PositionEffect field value if set, zero value otherwise.
func (o *CashAccountOrderLegCollection) GetPositionEffect() PositionEffect {
	if o == nil || o.PositionEffect == nil {
		var ret PositionEffect
		return ret
	}
	return *o.PositionEffect
}

// GetPositionEffectOk returns a tuple with the PositionEffect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashAccountOrderLegCollection) GetPositionEffectOk() (*PositionEffect, bool) {
	if o == nil || o.PositionEffect == nil {
		return nil, false
	}
	return o.PositionEffect, true
}

// HasPositionEffect returns a boolean if a field has been set.
func (o *CashAccountOrderLegCollection) HasPositionEffect() bool {
	if o != nil && o.PositionEffect != nil {
		return true
	}

	return false
}

// SetPositionEffect gets a reference to the given PositionEffect and assigns it to the PositionEffect field.
func (o *CashAccountOrderLegCollection) SetPositionEffect(v PositionEffect) {
	o.PositionEffect = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *CashAccountOrderLegCollection) GetQuantity() float32 {
	if o == nil || o.Quantity == nil {
		var ret float32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashAccountOrderLegCollection) GetQuantityOk() (*float32, bool) {
	if o == nil || o.Quantity == nil {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *CashAccountOrderLegCollection) HasQuantity() bool {
	if o != nil && o.Quantity != nil {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given float32 and assigns it to the Quantity field.
func (o *CashAccountOrderLegCollection) SetQuantity(v float32) {
	o.Quantity = &v
}

// GetQuantityType returns the QuantityType field value if set, zero value otherwise.
func (o *CashAccountOrderLegCollection) GetQuantityType() QuantityType {
	if o == nil || o.QuantityType == nil {
		var ret QuantityType
		return ret
	}
	return *o.QuantityType
}

// GetQuantityTypeOk returns a tuple with the QuantityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashAccountOrderLegCollection) GetQuantityTypeOk() (*QuantityType, bool) {
	if o == nil || o.QuantityType == nil {
		return nil, false
	}
	return o.QuantityType, true
}

// HasQuantityType returns a boolean if a field has been set.
func (o *CashAccountOrderLegCollection) HasQuantityType() bool {
	if o != nil && o.QuantityType != nil {
		return true
	}

	return false
}

// SetQuantityType gets a reference to the given QuantityType and assigns it to the QuantityType field.
func (o *CashAccountOrderLegCollection) SetQuantityType(v QuantityType) {
	o.QuantityType = &v
}

func (o CashAccountOrderLegCollection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Instruction != nil {
		toSerialize["instruction"] = o.Instruction
	}
	if o.Instrument != nil {
		toSerialize["instrument"] = o.Instrument
	}
	if o.LegId != nil {
		toSerialize["legId"] = o.LegId
	}
	if o.OrderLegType != nil {
		toSerialize["orderLegType"] = o.OrderLegType
	}
	if o.PositionEffect != nil {
		toSerialize["positionEffect"] = o.PositionEffect
	}
	if o.Quantity != nil {
		toSerialize["quantity"] = o.Quantity
	}
	if o.QuantityType != nil {
		toSerialize["quantityType"] = o.QuantityType
	}
	return json.Marshal(toSerialize)
}

type NullableCashAccountOrderLegCollection struct {
	value *CashAccountOrderLegCollection
	isSet bool
}

func (v NullableCashAccountOrderLegCollection) Get() *CashAccountOrderLegCollection {
	return v.value
}

func (v *NullableCashAccountOrderLegCollection) Set(val *CashAccountOrderLegCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableCashAccountOrderLegCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableCashAccountOrderLegCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCashAccountOrderLegCollection(val *CashAccountOrderLegCollection) *NullableCashAccountOrderLegCollection {
	return &NullableCashAccountOrderLegCollection{value: val, isSet: true}
}

func (v NullableCashAccountOrderLegCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCashAccountOrderLegCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


