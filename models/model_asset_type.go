/*
 * TD Ameritrade API
 *
 * TD Ameritrade API
 *
 * API version: 3.0.1
 * Contact: austin.millan@protonmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AssetType the model 'AssetType'
type AssetType string

// List of AssetType
const (
	ASSETTYPE_EQUITY AssetType = "EQUITY"
	ASSETTYPE_OPTION AssetType = "OPTION"
	ASSETTYPE_FUTURE_OPTION AssetType = "FUTURE_OPTION"
	ASSETTYPE_INDICATOR AssetType = "INDICATOR"
	ASSETTYPE_FOREX AssetType = "FOREX"
	ASSETTYPE_MUTUAL_FUND AssetType = "MUTUAL_FUND"
	ASSETTYPE_INDEX AssetType = "INDEX"
	ASSETTYPE_CASH_EQUIVALENT AssetType = "CASH_EQUIVALENT"
	ASSETTYPE_FIXED_INCOME AssetType = "FIXED_INCOME"
	ASSETTYPE_CURRENCY AssetType = "CURRENCY"
	ASSETTYPE_ETF AssetType = "ETF"
	ASSETTYPE_BOND AssetType = "BOND"
	ASSETTYPE_UNKNOWN AssetType = "UNKNOWN"
)

func (v *AssetType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AssetType(value)
	for _, existing := range []AssetType{ "EQUITY", "OPTION", "FUTURE_OPTION", "INDICATOR", "FOREX", "MUTUAL_FUND", "INDEX", "CASH_EQUIVALENT", "FIXED_INCOME", "CURRENCY", "ETF", "BOND", "UNKNOWN",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AssetType", value)
}

// Ptr returns reference to AssetType value
func (v AssetType) Ptr() *AssetType {
	return &v
}

type NullableAssetType struct {
	value *AssetType
	isSet bool
}

func (v NullableAssetType) Get() *AssetType {
	return v.value
}

func (v *NullableAssetType) Set(val *AssetType) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetType) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetType(val *AssetType) *NullableAssetType {
	return &NullableAssetType{value: val, isSet: true}
}

func (v NullableAssetType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

