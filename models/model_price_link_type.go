/*
 * TD Ameritrade API
 *
 * TD Ameritrade API
 *
 * API version: 3.0.1
 * Contact: austin.millan@protonmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// PriceLinkType the model 'PriceLinkType'
type PriceLinkType string

// List of PriceLinkType
const (
	PRICELINKTYPE_VALUE PriceLinkType = "VALUE"
	PRICELINKTYPE_PERCENT PriceLinkType = "PERCENT"
	PRICELINKTYPE_TICK PriceLinkType = "TICK"
)

func (v *PriceLinkType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PriceLinkType(value)
	for _, existing := range []PriceLinkType{ "VALUE", "PERCENT", "TICK",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PriceLinkType", value)
}

// Ptr returns reference to PriceLinkType value
func (v PriceLinkType) Ptr() *PriceLinkType {
	return &v
}

type NullablePriceLinkType struct {
	value *PriceLinkType
	isSet bool
}

func (v NullablePriceLinkType) Get() *PriceLinkType {
	return v.value
}

func (v *NullablePriceLinkType) Set(val *PriceLinkType) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceLinkType) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceLinkType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceLinkType(val *PriceLinkType) *NullablePriceLinkType {
	return &NullablePriceLinkType{value: val, isSet: true}
}

func (v NullablePriceLinkType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceLinkType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

