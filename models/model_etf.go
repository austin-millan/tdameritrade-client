/*
 * TD Ameritrade API
 *
 * TD Ameritrade API
 *
 * API version: 3.0.1
 * Contact: austin.millan@protonmail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ETF struct for ETF
type ETF struct {
	Var52WkHigh *float32 `json:"52WkHigh,omitempty"`
	Var52WkLow *float32 `json:"52WkLow,omitempty"`
	AskId *string `json:"askId,omitempty"`
	AskPrice *float32 `json:"askPrice,omitempty"`
	AskSize *float32 `json:"askSize,omitempty"`
	BidId *string `json:"bidId,omitempty"`
	BidPrice *float32 `json:"bidPrice,omitempty"`
	BidSize *float32 `json:"bidSize,omitempty"`
	ClosePrice *float32 `json:"closePrice,omitempty"`
	Description *string `json:"description,omitempty"`
	Digits *float32 `json:"digits,omitempty"`
	DivAmount *float32 `json:"divAmount,omitempty"`
	DivDate *string `json:"divDate,omitempty"`
	DivYield *float32 `json:"divYield,omitempty"`
	Exchange *string `json:"exchange,omitempty"`
	ExchangeName *string `json:"exchangeName,omitempty"`
	HighPrice *float32 `json:"highPrice,omitempty"`
	LastId *string `json:"lastId,omitempty"`
	LastPrice *float32 `json:"lastPrice,omitempty"`
	LastSize *float32 `json:"lastSize,omitempty"`
	LowPrice *float32 `json:"lowPrice,omitempty"`
	Marginable *bool `json:"marginable,omitempty"`
	Mark *float32 `json:"mark,omitempty"`
	NetChange *float32 `json:"netChange,omitempty"`
	OpenPrice *float32 `json:"openPrice,omitempty"`
	PeRatio *float32 `json:"peRatio,omitempty"`
	QuoteTimeInLong *float32 `json:"quoteTimeInLong,omitempty"`
	RegularMarketLastPrice *float32 `json:"regularMarketLastPrice,omitempty"`
	RegularMarketLastSize *float32 `json:"regularMarketLastSize,omitempty"`
	RegularMarketNetChange *float32 `json:"regularMarketNetChange,omitempty"`
	RegularMarketTradeTimeInLong *float32 `json:"regularMarketTradeTimeInLong,omitempty"`
	SecurityStatus *string `json:"securityStatus,omitempty"`
	Shortable *bool `json:"shortable,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
	TotalVolume *float32 `json:"totalVolume,omitempty"`
	TradeTimeInLong *float32 `json:"tradeTimeInLong,omitempty"`
	Volatility *float32 `json:"volatility,omitempty"`
}

// NewETF instantiates a new ETF object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewETF() *ETF {
	this := ETF{}
	return &this
}

// NewETFWithDefaults instantiates a new ETF object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewETFWithDefaults() *ETF {
	this := ETF{}
	return &this
}

// GetVar52WkHigh returns the Var52WkHigh field value if set, zero value otherwise.
func (o *ETF) GetVar52WkHigh() float32 {
	if o == nil || o.Var52WkHigh == nil {
		var ret float32
		return ret
	}
	return *o.Var52WkHigh
}

// GetVar52WkHighOk returns a tuple with the Var52WkHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetVar52WkHighOk() (*float32, bool) {
	if o == nil || o.Var52WkHigh == nil {
		return nil, false
	}
	return o.Var52WkHigh, true
}

// HasVar52WkHigh returns a boolean if a field has been set.
func (o *ETF) HasVar52WkHigh() bool {
	if o != nil && o.Var52WkHigh != nil {
		return true
	}

	return false
}

// SetVar52WkHigh gets a reference to the given float32 and assigns it to the Var52WkHigh field.
func (o *ETF) SetVar52WkHigh(v float32) {
	o.Var52WkHigh = &v
}

// GetVar52WkLow returns the Var52WkLow field value if set, zero value otherwise.
func (o *ETF) GetVar52WkLow() float32 {
	if o == nil || o.Var52WkLow == nil {
		var ret float32
		return ret
	}
	return *o.Var52WkLow
}

// GetVar52WkLowOk returns a tuple with the Var52WkLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetVar52WkLowOk() (*float32, bool) {
	if o == nil || o.Var52WkLow == nil {
		return nil, false
	}
	return o.Var52WkLow, true
}

// HasVar52WkLow returns a boolean if a field has been set.
func (o *ETF) HasVar52WkLow() bool {
	if o != nil && o.Var52WkLow != nil {
		return true
	}

	return false
}

// SetVar52WkLow gets a reference to the given float32 and assigns it to the Var52WkLow field.
func (o *ETF) SetVar52WkLow(v float32) {
	o.Var52WkLow = &v
}

// GetAskId returns the AskId field value if set, zero value otherwise.
func (o *ETF) GetAskId() string {
	if o == nil || o.AskId == nil {
		var ret string
		return ret
	}
	return *o.AskId
}

// GetAskIdOk returns a tuple with the AskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetAskIdOk() (*string, bool) {
	if o == nil || o.AskId == nil {
		return nil, false
	}
	return o.AskId, true
}

// HasAskId returns a boolean if a field has been set.
func (o *ETF) HasAskId() bool {
	if o != nil && o.AskId != nil {
		return true
	}

	return false
}

// SetAskId gets a reference to the given string and assigns it to the AskId field.
func (o *ETF) SetAskId(v string) {
	o.AskId = &v
}

// GetAskPrice returns the AskPrice field value if set, zero value otherwise.
func (o *ETF) GetAskPrice() float32 {
	if o == nil || o.AskPrice == nil {
		var ret float32
		return ret
	}
	return *o.AskPrice
}

// GetAskPriceOk returns a tuple with the AskPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetAskPriceOk() (*float32, bool) {
	if o == nil || o.AskPrice == nil {
		return nil, false
	}
	return o.AskPrice, true
}

// HasAskPrice returns a boolean if a field has been set.
func (o *ETF) HasAskPrice() bool {
	if o != nil && o.AskPrice != nil {
		return true
	}

	return false
}

// SetAskPrice gets a reference to the given float32 and assigns it to the AskPrice field.
func (o *ETF) SetAskPrice(v float32) {
	o.AskPrice = &v
}

// GetAskSize returns the AskSize field value if set, zero value otherwise.
func (o *ETF) GetAskSize() float32 {
	if o == nil || o.AskSize == nil {
		var ret float32
		return ret
	}
	return *o.AskSize
}

// GetAskSizeOk returns a tuple with the AskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetAskSizeOk() (*float32, bool) {
	if o == nil || o.AskSize == nil {
		return nil, false
	}
	return o.AskSize, true
}

// HasAskSize returns a boolean if a field has been set.
func (o *ETF) HasAskSize() bool {
	if o != nil && o.AskSize != nil {
		return true
	}

	return false
}

// SetAskSize gets a reference to the given float32 and assigns it to the AskSize field.
func (o *ETF) SetAskSize(v float32) {
	o.AskSize = &v
}

// GetBidId returns the BidId field value if set, zero value otherwise.
func (o *ETF) GetBidId() string {
	if o == nil || o.BidId == nil {
		var ret string
		return ret
	}
	return *o.BidId
}

// GetBidIdOk returns a tuple with the BidId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetBidIdOk() (*string, bool) {
	if o == nil || o.BidId == nil {
		return nil, false
	}
	return o.BidId, true
}

// HasBidId returns a boolean if a field has been set.
func (o *ETF) HasBidId() bool {
	if o != nil && o.BidId != nil {
		return true
	}

	return false
}

// SetBidId gets a reference to the given string and assigns it to the BidId field.
func (o *ETF) SetBidId(v string) {
	o.BidId = &v
}

// GetBidPrice returns the BidPrice field value if set, zero value otherwise.
func (o *ETF) GetBidPrice() float32 {
	if o == nil || o.BidPrice == nil {
		var ret float32
		return ret
	}
	return *o.BidPrice
}

// GetBidPriceOk returns a tuple with the BidPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetBidPriceOk() (*float32, bool) {
	if o == nil || o.BidPrice == nil {
		return nil, false
	}
	return o.BidPrice, true
}

// HasBidPrice returns a boolean if a field has been set.
func (o *ETF) HasBidPrice() bool {
	if o != nil && o.BidPrice != nil {
		return true
	}

	return false
}

// SetBidPrice gets a reference to the given float32 and assigns it to the BidPrice field.
func (o *ETF) SetBidPrice(v float32) {
	o.BidPrice = &v
}

// GetBidSize returns the BidSize field value if set, zero value otherwise.
func (o *ETF) GetBidSize() float32 {
	if o == nil || o.BidSize == nil {
		var ret float32
		return ret
	}
	return *o.BidSize
}

// GetBidSizeOk returns a tuple with the BidSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetBidSizeOk() (*float32, bool) {
	if o == nil || o.BidSize == nil {
		return nil, false
	}
	return o.BidSize, true
}

// HasBidSize returns a boolean if a field has been set.
func (o *ETF) HasBidSize() bool {
	if o != nil && o.BidSize != nil {
		return true
	}

	return false
}

// SetBidSize gets a reference to the given float32 and assigns it to the BidSize field.
func (o *ETF) SetBidSize(v float32) {
	o.BidSize = &v
}

// GetClosePrice returns the ClosePrice field value if set, zero value otherwise.
func (o *ETF) GetClosePrice() float32 {
	if o == nil || o.ClosePrice == nil {
		var ret float32
		return ret
	}
	return *o.ClosePrice
}

// GetClosePriceOk returns a tuple with the ClosePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetClosePriceOk() (*float32, bool) {
	if o == nil || o.ClosePrice == nil {
		return nil, false
	}
	return o.ClosePrice, true
}

// HasClosePrice returns a boolean if a field has been set.
func (o *ETF) HasClosePrice() bool {
	if o != nil && o.ClosePrice != nil {
		return true
	}

	return false
}

// SetClosePrice gets a reference to the given float32 and assigns it to the ClosePrice field.
func (o *ETF) SetClosePrice(v float32) {
	o.ClosePrice = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ETF) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ETF) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ETF) SetDescription(v string) {
	o.Description = &v
}

// GetDigits returns the Digits field value if set, zero value otherwise.
func (o *ETF) GetDigits() float32 {
	if o == nil || o.Digits == nil {
		var ret float32
		return ret
	}
	return *o.Digits
}

// GetDigitsOk returns a tuple with the Digits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetDigitsOk() (*float32, bool) {
	if o == nil || o.Digits == nil {
		return nil, false
	}
	return o.Digits, true
}

// HasDigits returns a boolean if a field has been set.
func (o *ETF) HasDigits() bool {
	if o != nil && o.Digits != nil {
		return true
	}

	return false
}

// SetDigits gets a reference to the given float32 and assigns it to the Digits field.
func (o *ETF) SetDigits(v float32) {
	o.Digits = &v
}

// GetDivAmount returns the DivAmount field value if set, zero value otherwise.
func (o *ETF) GetDivAmount() float32 {
	if o == nil || o.DivAmount == nil {
		var ret float32
		return ret
	}
	return *o.DivAmount
}

// GetDivAmountOk returns a tuple with the DivAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetDivAmountOk() (*float32, bool) {
	if o == nil || o.DivAmount == nil {
		return nil, false
	}
	return o.DivAmount, true
}

// HasDivAmount returns a boolean if a field has been set.
func (o *ETF) HasDivAmount() bool {
	if o != nil && o.DivAmount != nil {
		return true
	}

	return false
}

// SetDivAmount gets a reference to the given float32 and assigns it to the DivAmount field.
func (o *ETF) SetDivAmount(v float32) {
	o.DivAmount = &v
}

// GetDivDate returns the DivDate field value if set, zero value otherwise.
func (o *ETF) GetDivDate() string {
	if o == nil || o.DivDate == nil {
		var ret string
		return ret
	}
	return *o.DivDate
}

// GetDivDateOk returns a tuple with the DivDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetDivDateOk() (*string, bool) {
	if o == nil || o.DivDate == nil {
		return nil, false
	}
	return o.DivDate, true
}

// HasDivDate returns a boolean if a field has been set.
func (o *ETF) HasDivDate() bool {
	if o != nil && o.DivDate != nil {
		return true
	}

	return false
}

// SetDivDate gets a reference to the given string and assigns it to the DivDate field.
func (o *ETF) SetDivDate(v string) {
	o.DivDate = &v
}

// GetDivYield returns the DivYield field value if set, zero value otherwise.
func (o *ETF) GetDivYield() float32 {
	if o == nil || o.DivYield == nil {
		var ret float32
		return ret
	}
	return *o.DivYield
}

// GetDivYieldOk returns a tuple with the DivYield field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetDivYieldOk() (*float32, bool) {
	if o == nil || o.DivYield == nil {
		return nil, false
	}
	return o.DivYield, true
}

// HasDivYield returns a boolean if a field has been set.
func (o *ETF) HasDivYield() bool {
	if o != nil && o.DivYield != nil {
		return true
	}

	return false
}

// SetDivYield gets a reference to the given float32 and assigns it to the DivYield field.
func (o *ETF) SetDivYield(v float32) {
	o.DivYield = &v
}

// GetExchange returns the Exchange field value if set, zero value otherwise.
func (o *ETF) GetExchange() string {
	if o == nil || o.Exchange == nil {
		var ret string
		return ret
	}
	return *o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetExchangeOk() (*string, bool) {
	if o == nil || o.Exchange == nil {
		return nil, false
	}
	return o.Exchange, true
}

// HasExchange returns a boolean if a field has been set.
func (o *ETF) HasExchange() bool {
	if o != nil && o.Exchange != nil {
		return true
	}

	return false
}

// SetExchange gets a reference to the given string and assigns it to the Exchange field.
func (o *ETF) SetExchange(v string) {
	o.Exchange = &v
}

// GetExchangeName returns the ExchangeName field value if set, zero value otherwise.
func (o *ETF) GetExchangeName() string {
	if o == nil || o.ExchangeName == nil {
		var ret string
		return ret
	}
	return *o.ExchangeName
}

// GetExchangeNameOk returns a tuple with the ExchangeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetExchangeNameOk() (*string, bool) {
	if o == nil || o.ExchangeName == nil {
		return nil, false
	}
	return o.ExchangeName, true
}

// HasExchangeName returns a boolean if a field has been set.
func (o *ETF) HasExchangeName() bool {
	if o != nil && o.ExchangeName != nil {
		return true
	}

	return false
}

// SetExchangeName gets a reference to the given string and assigns it to the ExchangeName field.
func (o *ETF) SetExchangeName(v string) {
	o.ExchangeName = &v
}

// GetHighPrice returns the HighPrice field value if set, zero value otherwise.
func (o *ETF) GetHighPrice() float32 {
	if o == nil || o.HighPrice == nil {
		var ret float32
		return ret
	}
	return *o.HighPrice
}

// GetHighPriceOk returns a tuple with the HighPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetHighPriceOk() (*float32, bool) {
	if o == nil || o.HighPrice == nil {
		return nil, false
	}
	return o.HighPrice, true
}

// HasHighPrice returns a boolean if a field has been set.
func (o *ETF) HasHighPrice() bool {
	if o != nil && o.HighPrice != nil {
		return true
	}

	return false
}

// SetHighPrice gets a reference to the given float32 and assigns it to the HighPrice field.
func (o *ETF) SetHighPrice(v float32) {
	o.HighPrice = &v
}

// GetLastId returns the LastId field value if set, zero value otherwise.
func (o *ETF) GetLastId() string {
	if o == nil || o.LastId == nil {
		var ret string
		return ret
	}
	return *o.LastId
}

// GetLastIdOk returns a tuple with the LastId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetLastIdOk() (*string, bool) {
	if o == nil || o.LastId == nil {
		return nil, false
	}
	return o.LastId, true
}

// HasLastId returns a boolean if a field has been set.
func (o *ETF) HasLastId() bool {
	if o != nil && o.LastId != nil {
		return true
	}

	return false
}

// SetLastId gets a reference to the given string and assigns it to the LastId field.
func (o *ETF) SetLastId(v string) {
	o.LastId = &v
}

// GetLastPrice returns the LastPrice field value if set, zero value otherwise.
func (o *ETF) GetLastPrice() float32 {
	if o == nil || o.LastPrice == nil {
		var ret float32
		return ret
	}
	return *o.LastPrice
}

// GetLastPriceOk returns a tuple with the LastPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetLastPriceOk() (*float32, bool) {
	if o == nil || o.LastPrice == nil {
		return nil, false
	}
	return o.LastPrice, true
}

// HasLastPrice returns a boolean if a field has been set.
func (o *ETF) HasLastPrice() bool {
	if o != nil && o.LastPrice != nil {
		return true
	}

	return false
}

// SetLastPrice gets a reference to the given float32 and assigns it to the LastPrice field.
func (o *ETF) SetLastPrice(v float32) {
	o.LastPrice = &v
}

// GetLastSize returns the LastSize field value if set, zero value otherwise.
func (o *ETF) GetLastSize() float32 {
	if o == nil || o.LastSize == nil {
		var ret float32
		return ret
	}
	return *o.LastSize
}

// GetLastSizeOk returns a tuple with the LastSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetLastSizeOk() (*float32, bool) {
	if o == nil || o.LastSize == nil {
		return nil, false
	}
	return o.LastSize, true
}

// HasLastSize returns a boolean if a field has been set.
func (o *ETF) HasLastSize() bool {
	if o != nil && o.LastSize != nil {
		return true
	}

	return false
}

// SetLastSize gets a reference to the given float32 and assigns it to the LastSize field.
func (o *ETF) SetLastSize(v float32) {
	o.LastSize = &v
}

// GetLowPrice returns the LowPrice field value if set, zero value otherwise.
func (o *ETF) GetLowPrice() float32 {
	if o == nil || o.LowPrice == nil {
		var ret float32
		return ret
	}
	return *o.LowPrice
}

// GetLowPriceOk returns a tuple with the LowPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetLowPriceOk() (*float32, bool) {
	if o == nil || o.LowPrice == nil {
		return nil, false
	}
	return o.LowPrice, true
}

// HasLowPrice returns a boolean if a field has been set.
func (o *ETF) HasLowPrice() bool {
	if o != nil && o.LowPrice != nil {
		return true
	}

	return false
}

// SetLowPrice gets a reference to the given float32 and assigns it to the LowPrice field.
func (o *ETF) SetLowPrice(v float32) {
	o.LowPrice = &v
}

// GetMarginable returns the Marginable field value if set, zero value otherwise.
func (o *ETF) GetMarginable() bool {
	if o == nil || o.Marginable == nil {
		var ret bool
		return ret
	}
	return *o.Marginable
}

// GetMarginableOk returns a tuple with the Marginable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetMarginableOk() (*bool, bool) {
	if o == nil || o.Marginable == nil {
		return nil, false
	}
	return o.Marginable, true
}

// HasMarginable returns a boolean if a field has been set.
func (o *ETF) HasMarginable() bool {
	if o != nil && o.Marginable != nil {
		return true
	}

	return false
}

// SetMarginable gets a reference to the given bool and assigns it to the Marginable field.
func (o *ETF) SetMarginable(v bool) {
	o.Marginable = &v
}

// GetMark returns the Mark field value if set, zero value otherwise.
func (o *ETF) GetMark() float32 {
	if o == nil || o.Mark == nil {
		var ret float32
		return ret
	}
	return *o.Mark
}

// GetMarkOk returns a tuple with the Mark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetMarkOk() (*float32, bool) {
	if o == nil || o.Mark == nil {
		return nil, false
	}
	return o.Mark, true
}

// HasMark returns a boolean if a field has been set.
func (o *ETF) HasMark() bool {
	if o != nil && o.Mark != nil {
		return true
	}

	return false
}

// SetMark gets a reference to the given float32 and assigns it to the Mark field.
func (o *ETF) SetMark(v float32) {
	o.Mark = &v
}

// GetNetChange returns the NetChange field value if set, zero value otherwise.
func (o *ETF) GetNetChange() float32 {
	if o == nil || o.NetChange == nil {
		var ret float32
		return ret
	}
	return *o.NetChange
}

// GetNetChangeOk returns a tuple with the NetChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetNetChangeOk() (*float32, bool) {
	if o == nil || o.NetChange == nil {
		return nil, false
	}
	return o.NetChange, true
}

// HasNetChange returns a boolean if a field has been set.
func (o *ETF) HasNetChange() bool {
	if o != nil && o.NetChange != nil {
		return true
	}

	return false
}

// SetNetChange gets a reference to the given float32 and assigns it to the NetChange field.
func (o *ETF) SetNetChange(v float32) {
	o.NetChange = &v
}

// GetOpenPrice returns the OpenPrice field value if set, zero value otherwise.
func (o *ETF) GetOpenPrice() float32 {
	if o == nil || o.OpenPrice == nil {
		var ret float32
		return ret
	}
	return *o.OpenPrice
}

// GetOpenPriceOk returns a tuple with the OpenPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetOpenPriceOk() (*float32, bool) {
	if o == nil || o.OpenPrice == nil {
		return nil, false
	}
	return o.OpenPrice, true
}

// HasOpenPrice returns a boolean if a field has been set.
func (o *ETF) HasOpenPrice() bool {
	if o != nil && o.OpenPrice != nil {
		return true
	}

	return false
}

// SetOpenPrice gets a reference to the given float32 and assigns it to the OpenPrice field.
func (o *ETF) SetOpenPrice(v float32) {
	o.OpenPrice = &v
}

// GetPeRatio returns the PeRatio field value if set, zero value otherwise.
func (o *ETF) GetPeRatio() float32 {
	if o == nil || o.PeRatio == nil {
		var ret float32
		return ret
	}
	return *o.PeRatio
}

// GetPeRatioOk returns a tuple with the PeRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetPeRatioOk() (*float32, bool) {
	if o == nil || o.PeRatio == nil {
		return nil, false
	}
	return o.PeRatio, true
}

// HasPeRatio returns a boolean if a field has been set.
func (o *ETF) HasPeRatio() bool {
	if o != nil && o.PeRatio != nil {
		return true
	}

	return false
}

// SetPeRatio gets a reference to the given float32 and assigns it to the PeRatio field.
func (o *ETF) SetPeRatio(v float32) {
	o.PeRatio = &v
}

// GetQuoteTimeInLong returns the QuoteTimeInLong field value if set, zero value otherwise.
func (o *ETF) GetQuoteTimeInLong() float32 {
	if o == nil || o.QuoteTimeInLong == nil {
		var ret float32
		return ret
	}
	return *o.QuoteTimeInLong
}

// GetQuoteTimeInLongOk returns a tuple with the QuoteTimeInLong field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetQuoteTimeInLongOk() (*float32, bool) {
	if o == nil || o.QuoteTimeInLong == nil {
		return nil, false
	}
	return o.QuoteTimeInLong, true
}

// HasQuoteTimeInLong returns a boolean if a field has been set.
func (o *ETF) HasQuoteTimeInLong() bool {
	if o != nil && o.QuoteTimeInLong != nil {
		return true
	}

	return false
}

// SetQuoteTimeInLong gets a reference to the given float32 and assigns it to the QuoteTimeInLong field.
func (o *ETF) SetQuoteTimeInLong(v float32) {
	o.QuoteTimeInLong = &v
}

// GetRegularMarketLastPrice returns the RegularMarketLastPrice field value if set, zero value otherwise.
func (o *ETF) GetRegularMarketLastPrice() float32 {
	if o == nil || o.RegularMarketLastPrice == nil {
		var ret float32
		return ret
	}
	return *o.RegularMarketLastPrice
}

// GetRegularMarketLastPriceOk returns a tuple with the RegularMarketLastPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetRegularMarketLastPriceOk() (*float32, bool) {
	if o == nil || o.RegularMarketLastPrice == nil {
		return nil, false
	}
	return o.RegularMarketLastPrice, true
}

// HasRegularMarketLastPrice returns a boolean if a field has been set.
func (o *ETF) HasRegularMarketLastPrice() bool {
	if o != nil && o.RegularMarketLastPrice != nil {
		return true
	}

	return false
}

// SetRegularMarketLastPrice gets a reference to the given float32 and assigns it to the RegularMarketLastPrice field.
func (o *ETF) SetRegularMarketLastPrice(v float32) {
	o.RegularMarketLastPrice = &v
}

// GetRegularMarketLastSize returns the RegularMarketLastSize field value if set, zero value otherwise.
func (o *ETF) GetRegularMarketLastSize() float32 {
	if o == nil || o.RegularMarketLastSize == nil {
		var ret float32
		return ret
	}
	return *o.RegularMarketLastSize
}

// GetRegularMarketLastSizeOk returns a tuple with the RegularMarketLastSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetRegularMarketLastSizeOk() (*float32, bool) {
	if o == nil || o.RegularMarketLastSize == nil {
		return nil, false
	}
	return o.RegularMarketLastSize, true
}

// HasRegularMarketLastSize returns a boolean if a field has been set.
func (o *ETF) HasRegularMarketLastSize() bool {
	if o != nil && o.RegularMarketLastSize != nil {
		return true
	}

	return false
}

// SetRegularMarketLastSize gets a reference to the given float32 and assigns it to the RegularMarketLastSize field.
func (o *ETF) SetRegularMarketLastSize(v float32) {
	o.RegularMarketLastSize = &v
}

// GetRegularMarketNetChange returns the RegularMarketNetChange field value if set, zero value otherwise.
func (o *ETF) GetRegularMarketNetChange() float32 {
	if o == nil || o.RegularMarketNetChange == nil {
		var ret float32
		return ret
	}
	return *o.RegularMarketNetChange
}

// GetRegularMarketNetChangeOk returns a tuple with the RegularMarketNetChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetRegularMarketNetChangeOk() (*float32, bool) {
	if o == nil || o.RegularMarketNetChange == nil {
		return nil, false
	}
	return o.RegularMarketNetChange, true
}

// HasRegularMarketNetChange returns a boolean if a field has been set.
func (o *ETF) HasRegularMarketNetChange() bool {
	if o != nil && o.RegularMarketNetChange != nil {
		return true
	}

	return false
}

// SetRegularMarketNetChange gets a reference to the given float32 and assigns it to the RegularMarketNetChange field.
func (o *ETF) SetRegularMarketNetChange(v float32) {
	o.RegularMarketNetChange = &v
}

// GetRegularMarketTradeTimeInLong returns the RegularMarketTradeTimeInLong field value if set, zero value otherwise.
func (o *ETF) GetRegularMarketTradeTimeInLong() float32 {
	if o == nil || o.RegularMarketTradeTimeInLong == nil {
		var ret float32
		return ret
	}
	return *o.RegularMarketTradeTimeInLong
}

// GetRegularMarketTradeTimeInLongOk returns a tuple with the RegularMarketTradeTimeInLong field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetRegularMarketTradeTimeInLongOk() (*float32, bool) {
	if o == nil || o.RegularMarketTradeTimeInLong == nil {
		return nil, false
	}
	return o.RegularMarketTradeTimeInLong, true
}

// HasRegularMarketTradeTimeInLong returns a boolean if a field has been set.
func (o *ETF) HasRegularMarketTradeTimeInLong() bool {
	if o != nil && o.RegularMarketTradeTimeInLong != nil {
		return true
	}

	return false
}

// SetRegularMarketTradeTimeInLong gets a reference to the given float32 and assigns it to the RegularMarketTradeTimeInLong field.
func (o *ETF) SetRegularMarketTradeTimeInLong(v float32) {
	o.RegularMarketTradeTimeInLong = &v
}

// GetSecurityStatus returns the SecurityStatus field value if set, zero value otherwise.
func (o *ETF) GetSecurityStatus() string {
	if o == nil || o.SecurityStatus == nil {
		var ret string
		return ret
	}
	return *o.SecurityStatus
}

// GetSecurityStatusOk returns a tuple with the SecurityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetSecurityStatusOk() (*string, bool) {
	if o == nil || o.SecurityStatus == nil {
		return nil, false
	}
	return o.SecurityStatus, true
}

// HasSecurityStatus returns a boolean if a field has been set.
func (o *ETF) HasSecurityStatus() bool {
	if o != nil && o.SecurityStatus != nil {
		return true
	}

	return false
}

// SetSecurityStatus gets a reference to the given string and assigns it to the SecurityStatus field.
func (o *ETF) SetSecurityStatus(v string) {
	o.SecurityStatus = &v
}

// GetShortable returns the Shortable field value if set, zero value otherwise.
func (o *ETF) GetShortable() bool {
	if o == nil || o.Shortable == nil {
		var ret bool
		return ret
	}
	return *o.Shortable
}

// GetShortableOk returns a tuple with the Shortable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetShortableOk() (*bool, bool) {
	if o == nil || o.Shortable == nil {
		return nil, false
	}
	return o.Shortable, true
}

// HasShortable returns a boolean if a field has been set.
func (o *ETF) HasShortable() bool {
	if o != nil && o.Shortable != nil {
		return true
	}

	return false
}

// SetShortable gets a reference to the given bool and assigns it to the Shortable field.
func (o *ETF) SetShortable(v bool) {
	o.Shortable = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *ETF) GetSymbol() string {
	if o == nil || o.Symbol == nil {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetSymbolOk() (*string, bool) {
	if o == nil || o.Symbol == nil {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *ETF) HasSymbol() bool {
	if o != nil && o.Symbol != nil {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *ETF) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTotalVolume returns the TotalVolume field value if set, zero value otherwise.
func (o *ETF) GetTotalVolume() float32 {
	if o == nil || o.TotalVolume == nil {
		var ret float32
		return ret
	}
	return *o.TotalVolume
}

// GetTotalVolumeOk returns a tuple with the TotalVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetTotalVolumeOk() (*float32, bool) {
	if o == nil || o.TotalVolume == nil {
		return nil, false
	}
	return o.TotalVolume, true
}

// HasTotalVolume returns a boolean if a field has been set.
func (o *ETF) HasTotalVolume() bool {
	if o != nil && o.TotalVolume != nil {
		return true
	}

	return false
}

// SetTotalVolume gets a reference to the given float32 and assigns it to the TotalVolume field.
func (o *ETF) SetTotalVolume(v float32) {
	o.TotalVolume = &v
}

// GetTradeTimeInLong returns the TradeTimeInLong field value if set, zero value otherwise.
func (o *ETF) GetTradeTimeInLong() float32 {
	if o == nil || o.TradeTimeInLong == nil {
		var ret float32
		return ret
	}
	return *o.TradeTimeInLong
}

// GetTradeTimeInLongOk returns a tuple with the TradeTimeInLong field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetTradeTimeInLongOk() (*float32, bool) {
	if o == nil || o.TradeTimeInLong == nil {
		return nil, false
	}
	return o.TradeTimeInLong, true
}

// HasTradeTimeInLong returns a boolean if a field has been set.
func (o *ETF) HasTradeTimeInLong() bool {
	if o != nil && o.TradeTimeInLong != nil {
		return true
	}

	return false
}

// SetTradeTimeInLong gets a reference to the given float32 and assigns it to the TradeTimeInLong field.
func (o *ETF) SetTradeTimeInLong(v float32) {
	o.TradeTimeInLong = &v
}

// GetVolatility returns the Volatility field value if set, zero value otherwise.
func (o *ETF) GetVolatility() float32 {
	if o == nil || o.Volatility == nil {
		var ret float32
		return ret
	}
	return *o.Volatility
}

// GetVolatilityOk returns a tuple with the Volatility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ETF) GetVolatilityOk() (*float32, bool) {
	if o == nil || o.Volatility == nil {
		return nil, false
	}
	return o.Volatility, true
}

// HasVolatility returns a boolean if a field has been set.
func (o *ETF) HasVolatility() bool {
	if o != nil && o.Volatility != nil {
		return true
	}

	return false
}

// SetVolatility gets a reference to the given float32 and assigns it to the Volatility field.
func (o *ETF) SetVolatility(v float32) {
	o.Volatility = &v
}

func (o ETF) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Var52WkHigh != nil {
		toSerialize["52WkHigh"] = o.Var52WkHigh
	}
	if o.Var52WkLow != nil {
		toSerialize["52WkLow"] = o.Var52WkLow
	}
	if o.AskId != nil {
		toSerialize["askId"] = o.AskId
	}
	if o.AskPrice != nil {
		toSerialize["askPrice"] = o.AskPrice
	}
	if o.AskSize != nil {
		toSerialize["askSize"] = o.AskSize
	}
	if o.BidId != nil {
		toSerialize["bidId"] = o.BidId
	}
	if o.BidPrice != nil {
		toSerialize["bidPrice"] = o.BidPrice
	}
	if o.BidSize != nil {
		toSerialize["bidSize"] = o.BidSize
	}
	if o.ClosePrice != nil {
		toSerialize["closePrice"] = o.ClosePrice
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Digits != nil {
		toSerialize["digits"] = o.Digits
	}
	if o.DivAmount != nil {
		toSerialize["divAmount"] = o.DivAmount
	}
	if o.DivDate != nil {
		toSerialize["divDate"] = o.DivDate
	}
	if o.DivYield != nil {
		toSerialize["divYield"] = o.DivYield
	}
	if o.Exchange != nil {
		toSerialize["exchange"] = o.Exchange
	}
	if o.ExchangeName != nil {
		toSerialize["exchangeName"] = o.ExchangeName
	}
	if o.HighPrice != nil {
		toSerialize["highPrice"] = o.HighPrice
	}
	if o.LastId != nil {
		toSerialize["lastId"] = o.LastId
	}
	if o.LastPrice != nil {
		toSerialize["lastPrice"] = o.LastPrice
	}
	if o.LastSize != nil {
		toSerialize["lastSize"] = o.LastSize
	}
	if o.LowPrice != nil {
		toSerialize["lowPrice"] = o.LowPrice
	}
	if o.Marginable != nil {
		toSerialize["marginable"] = o.Marginable
	}
	if o.Mark != nil {
		toSerialize["mark"] = o.Mark
	}
	if o.NetChange != nil {
		toSerialize["netChange"] = o.NetChange
	}
	if o.OpenPrice != nil {
		toSerialize["openPrice"] = o.OpenPrice
	}
	if o.PeRatio != nil {
		toSerialize["peRatio"] = o.PeRatio
	}
	if o.QuoteTimeInLong != nil {
		toSerialize["quoteTimeInLong"] = o.QuoteTimeInLong
	}
	if o.RegularMarketLastPrice != nil {
		toSerialize["regularMarketLastPrice"] = o.RegularMarketLastPrice
	}
	if o.RegularMarketLastSize != nil {
		toSerialize["regularMarketLastSize"] = o.RegularMarketLastSize
	}
	if o.RegularMarketNetChange != nil {
		toSerialize["regularMarketNetChange"] = o.RegularMarketNetChange
	}
	if o.RegularMarketTradeTimeInLong != nil {
		toSerialize["regularMarketTradeTimeInLong"] = o.RegularMarketTradeTimeInLong
	}
	if o.SecurityStatus != nil {
		toSerialize["securityStatus"] = o.SecurityStatus
	}
	if o.Shortable != nil {
		toSerialize["shortable"] = o.Shortable
	}
	if o.Symbol != nil {
		toSerialize["symbol"] = o.Symbol
	}
	if o.TotalVolume != nil {
		toSerialize["totalVolume"] = o.TotalVolume
	}
	if o.TradeTimeInLong != nil {
		toSerialize["tradeTimeInLong"] = o.TradeTimeInLong
	}
	if o.Volatility != nil {
		toSerialize["volatility"] = o.Volatility
	}
	return json.Marshal(toSerialize)
}

type NullableETF struct {
	value *ETF
	isSet bool
}

func (v NullableETF) Get() *ETF {
	return v.value
}

func (v *NullableETF) Set(val *ETF) {
	v.value = val
	v.isSet = true
}

func (v NullableETF) IsSet() bool {
	return v.isSet
}

func (v *NullableETF) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableETF(val *ETF) *NullableETF {
	return &NullableETF{value: val, isSet: true}
}

func (v NullableETF) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableETF) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


