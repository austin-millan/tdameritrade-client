openapi: 3.0.0
info:
  description: TD Ameritrade API
  version: 3.0.1
  title: TD Ameritrade API
  termsOfService: https://developer.tdameritrade.com/legal
  contact:
    email: austin.millan@protonmail.com
servers:
  - url: https://api.tdameritrade.com/v2
  - url: http://api.tdameritrade.com/v2
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
paths:
  "/accounts/{accountId}/orders/{orderId}":
    delete:
      tags:
        - Accounts and Trading
      summary: Cancel Order
      description: "Cancel a specific order for a specific account. "
      operationId: cancelOrder
      parameters:
        - name: accountId
          in: path
          description: Account Number
          required: true
          schema:
            type: integer
            format: string
        - name: orderId
          in: path
          description: Order Number
          required: true
          schema:
            type: integer
            format: int64
            maximum: 0
      responses:
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken in the HTTP authorization request header.
        "403":
          description: An error message indicating the caller is forbidden from accessing this page.
        "404":
          description: An error message if the order was not found.
        "500":
          description: An error message indicating there was an unexpected server error.
      security:
        - Bearer: []
    put:
      tags:
        - Accounts and Trading
      summary: Replace Order
      description: Replace an existing order for an account. The existing order will be
        replaced by the new order. Once replaced, the old order will be canceled
        and a new order will be created.
      operationId: replaceOrder
      parameters:
        - name: accountId
          in: path
          description: Account Number
          required: true
          schema:
            type: integer
            format: string
        - name: orderId
          in: path
          description: Order Number
          required: true
          schema:
            type: integer
            format: int64
            maximum: 0
      requestBody:
        $ref: "#/components/requestBodies/Order"
      responses:
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken in the HTTP authorization request header.
        "403":
          description: An error message indicating the caller is forbidden from accessing this page.
        "404":
          description: An error message if the order was not found.
        "500":
          description: An error message indicating there was an unexpected server error.
      security:
        - Bearer: []
    get:
      tags:
        - Accounts and Trading
      summary: Get Order
      description: Get a specific order for a specific account.
      operationId: getOrder
      parameters:
        - name: accountId
          in: path
          description: Account Number
          required: true
          schema:
            type: integer
            format: string
        - name: orderId
          in: path
          description: Order Number
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: A Order object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken in the HTTP authorization request header.
        "403":
          description: An error message indicating the caller is forbidden from accessing this page.
        "500":
          description: An error message indicating there was an unexpected server error.
      security:
        - Bearer: []
  "/accounts/{accountId}/orders":
    get:
      tags:
        - Accounts and Trading
      summary: Get Orders By Path
      description: Orders for a specific account.
      operationId: getOrdersByPath
      parameters:
        - name: accountId
          in: path
          description: Account Number
          required: true
          schema:
            type: integer
            format: string
        - name: maxResults
          in: query
          description: The maximum number of orders to retrieve.
          required: true
          schema:
            type: integer
        - name: fromEnteredTime
          in: query
          description: Specifies that no orders entered before this time should be
            returned. Valid ISO-8601 formats are  yyyy-MM-dd and
            yyyy-MM-dd'T'HH:mm:ssz Date must be within 60 days from today's
            date. 'toEnteredTime' must also be set.
          required: true
          schema:
            type: string
        - name: toEnteredTime
          in: query
          description: Specifies that no orders entered after this time should be
            returned.Valid ISO-8601 formats are :yyyy-MM-dd and
            yyyy-MM-dd'T'HH:mm:ssz. 'fromEnteredTime' must also be set.
          required: true
          schema:
            type: string
            format: string
            maximum: 0
        - name: status
          in: query
          description: The maximum number of orders to retrieve.
          required: true
          schema:
            type: integer
            format: int64
            maximum: 0
      responses:
        "200":
          description: A Order object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken in the HTTP authorization request header.
        "403":
          description: An error message indicating the caller is forbidden from accessing this page.
        "500":
          description: An error message indicating there was an unexpected server error.
      security:
        - Bearer: []
    post:
      tags:
        - Accounts and Trading
      summary: Place Order
      description: Place an order for a specific account.
      operationId: placeOrder
      parameters:
        - name: accountId
          in: path
          description: Account Number
          required: true
          schema:
            type: integer
            format: string
      requestBody:
        $ref: "#/components/requestBodies/Order"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "403":
          description: An error message indicating the caller is forbidden from accessing this page.
        "500":
          description: An error message indicating there was an unexpected server error.
      security:
        - Bearer: []
  /orders:
    get:
      tags:
        - Accounts and Trading
      summary: Get Orders By Query
      description: All orders for a specific account or, if account ID isn't specified,
        orders will be returned for all linked accounts
      operationId: getOrdersByQuery
      parameters:
        - name: accountId
          in: query
          description: Account Number
          required: true
          schema:
            type: integer
            format: string
        - name: maxResults
          in: query
          description: The maximum number of orders to retrieve.
          required: true
          schema:
            type: integer
        - name: fromEnteredTime
          in: query
          description: Specifies that no orders entered before this time should be
            returned. Valid ISO-8601 formats are  yyyy-MM-dd and
            yyyy-MM-dd'T'HH:mm:ssz Date must be within 60 days from today's
            date. 'toEnteredTime' must also be set.
          required: true
          schema:
            type: string
        - name: toEnteredTime
          in: query
          description: Specifies that no orders entered after this time should be
            returned.Valid ISO-8601 formats are :yyyy-MM-dd and
            yyyy-MM-dd'T'HH:mm:ssz. 'fromEnteredTime' must also be set.
          required: true
          schema:
            type: string
            format: string
            maximum: 0
        - name: status
          in: query
          description: The maximum number of orders to retrieve.
          required: true
          schema:
            type: integer
            format: int64
            maximum: 0
      responses:
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "403":
          description: An error message indicating the caller is forbidden from accessing this page.
        "500":
          description: An error message indicating there was an unexpected server error.
      security:
        - Bearer: []
  "/accounts/{accountId}/savedorders":
    get:
      tags:
        - Accounts and Trading
      summary: Get Saved Orders by Path
      description: Saved orders for a specific account.
      operationId: getSavedOrdersByPath
      parameters:
        - name: accountId
          in: path
          description: Account Number
          required: true
          schema:
            type: integer
            format: string
      responses:
        "200":
          description: A Order object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SavedOrder"
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "403":
          description: An error message indicating the caller is forbidden from accessing this page.
        "500":
          description: An error message indicating there was an unexpected server error.
      security:
        - Bearer: []
    post:
      tags:
        - Accounts and Trading
      summary: Create Saved Order
      description: "Save an order for a specific account. "
      operationId: saveOrder
      parameters:
        - name: accountId
          in: path
          description: Account Number
          required: true
          schema:
            type: integer
            format: string
        - name: orderId
          in: path
          description: Order Number
          required: true
          schema:
            type: integer
            format: int64
            maximum: 0
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SavedOrder"
        description: The order to save.
      responses:
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "403":
          description: An error message indicating the caller is forbidden from accessing this page.
        "500":
          description: An error message indicating there was an unexpected server error.
      security:
        - Bearer: []
  "/accounts/{accountId}/savedorders/{savedOrderId}":
    delete:
      tags:
        - Accounts and Trading
      summary: Delete Saved Order
      description: Delete a specific saved order for a specific account.
      operationId: deleteSavedOrder
      parameters:
        - name: accountId
          in: path
          description: Account Number
          required: true
          schema:
            type: integer
            format: string
        - name: savedOrderId
          in: path
          description: Order Number
          required: true
          schema:
            type: integer
            format: int64
            maximum: 0
      responses:
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "403":
          description: An error message indicating the caller is forbidden from accessing this page.
        "500":
          description: An error message indicating there was an unexpected server error.
      security:
        - Bearer: []
    get:
      tags:
        - Accounts and Trading
      summary: Get Saved Order
      description: Specific saved order by its ID, for a specific account.
      operationId: getSavedOrder
      parameters:
        - name: accountId
          in: path
          description: Account Number
          required: true
          schema:
            type: integer
            format: string
        - name: savedOrderId
          in: path
          description: Order Number
          required: true
          schema:
            type: integer
            format: int64
            maximum: 0
      responses:
        "200":
          description: A Order object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "403":
          description: An error message indicating the caller is forbidden from accessing this page.
        "500":
          description: An error message indicating there was an unexpected server error.
      security:
        - Bearer: []
    put:
      tags:
        - Accounts and Trading
      summary: Replace Saved Order
      description: Replace an existing saved order for an account. The existing saved order
        will be replaced by the new order.
      operationId: replaceSavedOrder
      parameters:
        - name: accountId
          in: path
          description: Account Number
          required: true
          schema:
            type: integer
            format: string
        - name: savedOrderId
          in: path
          description: Order Number
          required: true
          schema:
            type: integer
            format: int64
            maximum: 0
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SavedOrder"
        description: The order to place.
      responses:
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "403":
          description: An error message indicating the caller is forbidden from accessing this page.
        "404":
          description: An error message if the order was not found.
        "500":
          description: An error message indicating there was an unexpected server error.
      security:
        - Bearer: []
  "/accounts/{accountId}":
    get:
      tags:
        - Accounts and Trading
      summary: Get Account
      description: Account balances, positions, and orders for a specific account.
      operationId: getAccount
      parameters:
        - name: accountId
          in: path
          description: Account Number
          required: true
          schema:
            type: integer
            format: string
      responses:
        "200":
          description: A Account Object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "403":
          description: An error message indicating the caller is forbidden from accessing this page.
        "500":
          description: An error message indicating there was an unexpected server error.
      security:
        - Bearer: []
  /accounts:
    get:
      tags:
        - Accounts and Trading
      summary: Get Accounts
      description: Account balances, positions, and orders for a specific account.
      operationId: getAccounts
      responses:
        "200":
          description: A Account Object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "207":
          description: Indicates there was a problem getting account data for one or more linked accounts, but the accounts who's data returned successfully is in the response. Do not aggregate balances and positions for this case.
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "403":
          description: An error message indicating the caller is forbidden from accessing this page.
        "500":
          description: An error message indicating there was an unexpected server error.
      security:
        - Bearer: []
  /oath2/token:
    post:
      tags:
        - Authentication
      summary: Post Access Token
      description: The token endpoint returns an access token along with an optional
        refresh token.
      operationId: postAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EASObject"
        description: The access token.
      responses:
        "200":
          description: A EASObject Object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EASObject"
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "403":
          description: An error message indicating the caller is forbidden from accessing this page.
        "500":
          description: An error message indicating there was an unexpected server error.
        "503":
          description: An error message indicating there is a temporary problem responding.
      security:
        - Bearer: []
  /instruments:
    get:
      tags:
        - Instruments
      summary: Search for instrument and fundamental data
      description: Search or retrieve instrument data, including fundamental data.
      operationId: searchInstruments
      parameters:
        - name: apikey
          in: query
          description: API Key
          required: true
          schema:
            type: string
        - name: symbol
          in: query
          description: Value to pass to the search. See projection description for more information.
          required: true
          schema:
            type: string
        - name: projection 
          in: query
          description: "The type of request:symbol-search: Retrieve instrument data of a specific symbol or cusip\nsymbol-regex: Retrieve instrument data for all symbols matching regex. Example: symbol=XYZ.* will return all symbols beginning with XYZ\ndesc-search: Retrieve instrument data for instruments whose description contains the word supplied. Example: symbol=FakeCompany will return all instruments with FakeCompany in the description.\ndesc-regex: Search description with full regex support. Example: symbol=XYZ.[A-C] returns all instruments whose descriptions contain a word beginning with XYZ followed by a character A through C. \nfundamental: Returns fundamental data for a single instrument specified by exact symbol."
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Instruments List
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                  - properties:
                      Bond:
                        $ref: '#/components/schemas/Bond'
                  - properties:
                      FundamentalData:
                        $ref: '#/components/schemas/FundamentalData'
                  - properties:
                      FundamentalData:
                        $ref: '#/components/schemas/FundamentalData'
                  - properties:
                      Fundamental:
                        $ref: '#/components/schemas/Fundamental'
                  - properties:
                      Instrument:
                        $ref: '#/components/schemas/Instrument'
        "400":
          description: An error message indicating the caller must pass a non null value in the parameter.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: An error message indicating the instrument for the symbol/cusip was not found.
        "406":
          description: An error message indicating an issue in the symbol regex, or number of symbols searched is over the maximum.
      security:
        - Bearer: []
  /instruments/{accountId}:
    get:
      tags:
        - Instruments
      summary: Search for instrument and fundamental data
      description: Search or retrieve instrument data, including fundamental data.
      operationId: getInstrument
      parameters:
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Instruments List
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                  - properties:
                      Bond:
                        $ref: '#/components/schemas/Bond'
                  - properties:
                      FundamentalData:
                        $ref: '#/components/schemas/FundamentalData'
                  - properties:
                      FundamentalData:
                        $ref: '#/components/schemas/FundamentalData'
                  - properties:
                      Fundamental:
                        $ref: '#/components/schemas/Fundamental'
                  - properties:
                      Instrument:
                        $ref: '#/components/schemas/Instrument'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: An error message indicating the instrument for the symbol/cusip was not found.
      security:
        - Bearer: []
  /marketdata/hours:
    get:
      tags:
        - Market Hours
      summary: Operating hours of markets
      description: Retrieve market hours for specified markets
      operationId: getHours
      parameters:
        - name: apikey
          in: query
          description: API Key
          required: true
          schema:
            type: string
        - name: markets
          in: query
          description: The markets for which you're requesting market hours, comma-separated. Valid markets are EQUITY, OPTION, FUTURE, BOND, or FOREX.
          required: true
          schema:
            type: string
        - name: date
          in: query
          description: "The date for which market hours information is requested. Valid ISO-8601 formats are : yyyy-MM-dd and yyyy-MM-dd'T'HH:mm:ssz."
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Instruments List
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Hours"
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "404":
          description: Not Found
      security:
        - Bearer: []
  /marketdata/{market}/hours:
    get:
      tags:
        - Market Hours
      summary: Operating hours of markets
      description: Retrieve market hours for specified single market
      operationId: getMarketHours
      parameters:
        - name: apikey
          in: query
          description: API Key
          required: true
          schema:
            type: string
        - name: market
          in: path
          description: The markets for which you're requesting market hours, comma-separated. Valid markets are EQUITY, OPTION, FUTURE, BOND, or FOREX.
          required: true
          schema:
            type: string
        - name: date
          in: query
          description: "The date for which market hours information is requested. Valid ISO-8601 formats are : yyyy-MM-dd and yyyy-MM-dd'T'HH:mm:ssz."
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Instruments List
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Hours"
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "404":
          description: Not Found
      security:
        - Bearer: []
  /marketdata/{index}/movers:
    get:
      tags:
        - Movers
      summary: Retrieve mover information by index symbol, direction type and change
      description: Top 10 (up or down) movers by value or percent for a particular market
      operationId: getMovers
      parameters:
        - name: apikey
          in: query
          description: API Key
          required: true
          schema:
            type: string
        - name: index
          in: path
          description: The index symbol to get movers from.
          required: true
          schema:
            type: string
        - name: direction
          in: query
          description: "To return movers with the specified directions of up or down."
          required: true
          schema:
            type: string
            example: "'up' or 'down'"
        - name: change
          in: query
          description: "To return movers with the specified change types of percent or value."
          required: true
          schema:
            type: string
            example: "'percent' or 'value'"
      responses:
        "200":
          description: Instruments List
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mover"
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer: []
        
  /marketdata/chains:
    get:
      tags:
        - Option Chains
      summary: Get Option Chains for optionable symbols
      description: Get option chain for an optionable Symbol
      operationId: getOptionChains
      parameters:
        - name: apikey
          in: query
          description: API Key
          required: true
          schema:
            type: string
        - name: symbol
          in: query
          description: Enter one symbol
          required: true
          schema:
            type: string
        - name: contractType
          in: query
          description: Type of contracts to return in the chain. Can be CALL, PUT, or ALL. Default is ALL.
          required: true
          schema:
            $ref: "#/components/schemas/PutOrCall"
        - name: strikeCount
          in: query
          description: The number of strikes to return above and below the at-the-money price.
          required: true
          schema:
            type: string
        - name: includeQuotes
          in: query
          description: "Include quotes for options in the option chain. Can be TRUE or FALSE. Default is FALSE."
          required: true
          schema:
            type: string
            example: "'TRUE' or 'FALSE'"
        - name: strategy
          in: query
          description: "Passing a value returns a Strategy Chain. Possible values are SINGLE, ANALYTICAL (allows use of the volatility, underlyingPrice, interestRate, and daysToExpiration params to calculate theoretical values), COVERED, VERTICAL, CALENDAR, STRANGLE, STRADDLE, BUTTERFLY, CONDOR, DIAGONAL, COLLAR, or ROLL. Default is SINGLE."
          required: true
          schema:
            $ref: "#/components/schemas/Strategy"
      responses:
        "200":
          description: Instruments List
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                  - properties:
                      OptionChain:
                        $ref: '#/components/schemas/OptionChain'
                  - properties:
                      StrikePriceMap:
                        $ref: '#/components/schemas/StrikePriceMap'
                  - properties:
                      Option:
                        $ref: '#/components/schemas/Option'
                  - properties:
                      Underlying:
                        $ref: '#/components/schemas/Underlying'
                  - properties:
                      ExpirationDate:
                        $ref: '#/components/schemas/ExpirationDate'
                  - properties:
                      OptionDeliverables:
                        $ref: '#/components/schemas/OptionDeliverables'
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: An error message indicating internal error in the service.
      security:
        - Bearer: []
        
  /marketdata/{symbol}/pricehistory:
    get:
      tags:
        - Price History
      summary: Historical price data for charts
      description: Get price history for a symbol
      operationId: getPriceHistory
      parameters:
        - name: apikey
          in: query
          description: API Key
          required: true
          schema:
            type: string
        - name: symbol
          in: path
          description: Enter one symbol
          required: true
          schema:
            type: string
        - name: periodType
          in: query
          description: The type of period to show. Valid values are day, month, year, or ytd (year to date). Default is day.
          required: true
          schema:
            type: string
            example: "'day' or 'month' or 'year' or 'ytd'"
        - name: period
          in: query
          description: "The number of periods to show.\n\nExample: For a 2 day / 1 min chart, the values would be:\nperiod: 2\nperiodType: day\nfrequency: 1\nfrequencyType: min\nValid periods by periodType (defaults marked with an asterisk):\nday: 1, 2, 3, 4, 5, 10*\nmonth: 1*, 2, 3, 6\nyear: 1*, 2, 3, 5, 10, 15, 20\nytd: 1*"
          required: true
          schema:
            type: integer
        - name: frequencyType
          in: query
          description: "The type of frequency with which a new candle is formed.\n\nValid frequencyTypes by periodType (defaults marked with an asterisk):\n\nday: minute*\nmonth: daily, weekly*\nyear: daily, weekly, monthly*\nytd: daily, weekly*\n"
          required: true
          schema:
            type: string
        - name: frequency
          in: query
          description: "The number of the frequencyType to be included in each candle.\n\nValid frequencies by frequencyType (defaults marked with an asterisk):\n\nminute: 1*, 5, 10, 15, 30\ndaily: 1*\nweekly: 1*\nmonthly: 1*\n"
          required: true
          schema:
            type: integer
        - name: endDate
          in: query
          description: "End date as milliseconds since epoch. If startDate and endDate are provided, period should not be provided. Default is previous trading day."
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          description: "Start date as milliseconds since epoch. If startDate and endDate are provided, period should not be provided."
          required: true
          schema:
            type: string
        - name: needExtendedHoursData
          in: query
          description: "true to return extended hours data, false for regular market hours only. Default is true"
          required: true
          schema:
            type: boolean
            example: "x"
        - name: x
          in: query
          description: "x"
          required: true
          schema:
            type: string
            example: "x"
      responses:
        "200":
          description: Instruments List
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CandleList"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Not Found
      security:
        - Bearer: []
  /marketdata/{symbol}/quotes:
    get:
      tags:
        - Quotes
      summary: Search for instrument and fundamental data
      description: Get quote for a symbol.
      operationId: getQuote
      parameters:
        - name: symbol
          in: path
          description: Account ID
          required: true
          schema:
            type: string
        - name: apiKey
          in: query
          description: API Key
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Instruments List
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                  - properties:
                      MutualFund:
                        $ref: '#/components/schemas/MutualFund'
                  - properties:
                      FutureOptions:
                        $ref: '#/components/schemas/FutureOptions'
                  - properties:
                      Option:
                        $ref: '#/components/schemas/Option'
                  - properties:
                      Forex:
                        $ref: '#/components/schemas/Forex'
                  - properties:
                      ETF:
                        $ref: '#/components/schemas/ETF'
                  - properties:
                      Equity:
                        $ref: '#/components/schemas/Equity'
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "403":
          description: An error message indicating the caller is forbidden from accessing this page.
        "404":
          description: An error message indicating the instrument for the symbol/cusip was not found.
      security:
        - Bearer: []
  /marketdata/quotes:
    get:
      tags:
        - Quotes
      summary: Search for instrument and fundamental data
      description: Get quote for one or more symbols.
      operationId: getQuotes
      parameters:
        - name: apiKey
          in: query
          description: API Key
          required: true
          schema:
            type: string
        - name: symbol
          in: query
          description: Symbol to search for
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Instruments List
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                  - properties:
                      MutualFund:
                        $ref: '#/components/schemas/MutualFund'
                  - properties:
                      FutureOptions:
                        $ref: '#/components/schemas/FutureOptions'
                  - properties:
                      Option:
                        $ref: '#/components/schemas/Option'
                  - properties:
                      Forex:
                        $ref: '#/components/schemas/Forex'
                  - properties:
                      ETF:
                        $ref: '#/components/schemas/ETF'
                  - properties:
                      Equity:
                        $ref: '#/components/schemas/Equity'
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "403":
          description: An error message indicating the caller is forbidden from accessing this page.
        "404":
          description: An error message indicating the instrument for the symbol/cusip was not found.
        "406":
          description: An error message indicating an issue in the symbol regex, or number of symbols searched is over the maximum.
      security:
        - Bearer: []
  /accounts/{accountId}/transactions/{transactionId}:
    get:
      tags:
        - Transaction History
      summary: APIs to access transaction history on the account
      description: Transaction for a specific account.
      operationId: getTransaction
      parameters:
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          description: Transaction ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Instruments List
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "403":
          description: An error message indicating the caller doesn't have access to the account in the request.
        "404":
          description: An error message indicating the specified transaction could not be found.
        "500":
          description: An error message indicating there was an unexpected server error.
        "503":
          description: An error message indicating there is a temporary problem responding.
      security:
        - Bearer: []
  /accounts/{accountId}/transactions:
    get:
      tags:
        - Transaction History
      summary: APIs to access transaction history on the account
      description: Transactions for a specific account.
      operationId: getTransactions
      parameters:
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: Only transactions with the specified type will be returned.
          required: true
          schema:
            $ref:  "#/components/schemas/TransactionType"
        - name: symbol
          in: query
          description: Only transactions with the specified symbol will be returned.
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          description: "Only transactions after the Start Date will be returned. Note: The maximum date range is one year. Valid ISO-8601 formats are: yyyy-MM-dd."
          required: true
          schema:
            type: string
        - name: endDate
          in: query
          description: "Only transactions before the End Date will be returned. Note: The maximum date range is one year. Valid ISO-8601 formats are: yyyy-MM-dd."
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Instruments List
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "403":
          description: An error message indicating the caller doesn't have access to the account in the request.
        "500":
          description: An error message indicating there was an unexpected server error.
        "503":
          description: An error message indicating there is a temporary problem responding.
      security:
        - Bearer: []
  /accounts/{accountId}/preferences:
    get:
      tags:
        - User Info & Preferences
      summary: APIs to access user-authorized accounts and their preferences
      description: Preferences for a specific account.
      operationId: getPreferences
      parameters:
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Preferences
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Preferences"
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "500":
          description: An error message indicating there was an unexpected server error.
        "503":
          description: An error message indicating there is a temporary problem responding.
      security:
        - Bearer: []
    put:
      tags:
        - User Info & Preferences
      summary: APIs to access user-authorized accounts and their preferences
      description: Update preferences for a specific account. Please note that the directOptionsRouting and directEquityRouting values cannot be modified via this operation
      operationId: updatePreferences
      parameters:
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePreferences"
      responses:
        "200":
          description: Preferences
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Preferences"
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "403":
          description: An error message indicating the caller is forbidden from accessing this resource.
        "500":
          description: An error message indicating there was an unexpected server error.
        "503":
          description: An error message indicating there is a temporary problem responding.
      security:
        - Bearer: []
  /userprincipals/streamersubscriptionkeys:
    get:
      tags:
        - User Info & Preferences
      summary: APIs to access user-authorized accounts and their preferences
      description: SubscriptionKey for provided accounts or default accounts.
      operationId: getStreamerSubscriptionKeys
      parameters:
        - name: accountIds
          in: query
          description: Account IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Preferences
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionKey"
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "500":
          description: An error message indicating there was an unexpected server error.
        "503":
          description: An error message indicating there is a temporary problem responding.
      security:
        - Bearer: []
  /userprincipals:
    get:
      tags:
        - User Info & Preferences
      summary: APIs to access user-authorized accounts and their preferences
      description: User Principal details.
      operationId: getUserPrincipals
      parameters:
        - name: fields
          in: query
          description: "A comma separated String which allows one to specify additional fields to return. None of these fields are returned by default. Possible values in this String can be: streamerSubscriptionKeys,\nstreamerConnectionInfo,\npreferences,\nsurrogateIds"
          required: true
          schema:
            type: array
            items:
              type: string
              example: "fields=streamerSubscriptionKeys,streamerConnectionInfo"
      responses:
        "200":
          description: Preferences
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPrincipal"
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "500":
          description: An error message indicating there was an unexpected server error.
        "503":
          description: An error message indicating there is a temporary problem responding.
      security:
        - Bearer: []
  /accounts/{accountId}/watchlists:
    post:
      tags:
        - Watchlist
      summary: APIs to perform CRUD operations on Account Watchlist
      description: Create watchlist for specific account.This method does not verify that the symbol or asset type are valid.
      operationId: createWatchlist
      parameters:
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWatchlist"
      responses:
        "200":
          description: OK
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "500":
          description: An error message indicating there was an unexpected server error.
      security:
        - Bearer: []
    get:
      tags:
        - Watchlist
      summary: APIs to perform CRUD operations on Account Watchlist
      description: All watchlists of an account.
      operationId: getWatchlistSingleAccount
      parameters:
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Watchlist'
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "500":
          description: An error message indicating there was an unexpected server error.
      security:
        - Bearer: []
  /accounts/{accountId}/watchlists/{watchlistId}:
    delete:
      tags:
        - Watchlist
      summary: APIs to perform CRUD operations on Account Watchlist
      description: Delete watchlist for a specific account. This method does not verify that the symbol or asset type are valid.
      operationId: deleteWatchlist
      parameters:
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
        - name: watchlistId
          in: path
          description: Watchlist ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "204":
          description: Watchlist deleted.
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "500":
          description: An error message indicating there was an unexpected server error.
      security:
        - Bearer: []
    put:
      tags:
        - Watchlist
      summary: APIs to perform CRUD operations on Account Watchlist
      description: Replace watchlist for specific account. This method does not verify that the symbol or asset type are valid.
      operationId: replaceWatchlist
      parameters:
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
        - name: watchlistId
          in: path
          description: Watchlist ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWatchlist"
      responses:
        "200":
          description: OK
        "204":
          description: Watchlist updated.
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "500":
          description: An error message indicating there was an unexpected server error.
      security:
        - Bearer: []
    patch:
      tags:
        - Watchlist
      summary: APIs to perform CRUD operations on Account Watchlist
      description: "Partially update watchlist for a specific account: change watchlist name, add to the beginning/end of a watchlist, update or delete items in a watchlist. This method does not verify that the symbol or asset type are valid."
      operationId: updateWatchlist
      parameters:
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
        - name: watchlistId
          in: path
          description: Watchlist ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWatchlist"
      responses:
        "200":
          description: OK
        "204":
          description: Watchlist updated.
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "500":
          description: An error message indicating there was an unexpected server error.
      security:
        - Bearer: []
    get:
      tags:
        - Watchlist
      summary: APIs to perform CRUD operations on Account Watchlist
      description: Specific watchlist for a specific account.
      operationId: getWatchlist
      parameters:
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
        - name: watchlistId
          in: path
          description: Watchlist ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Watchlist'
        "400":
          description: An error message indicating the validation problem with the request.
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "404":
          description: An error message indicating the account or the watchlist ID does not exist.
        "500":
          description: An error message indicating there was an unexpected server error.
      security:
        - Bearer: []

  /accounts/watchlists:
    get:
      tags:
        - Watchlist
      summary: APIs to perform CRUD operations on Account Watchlist
      description: All watchlists for all of the user's linked accounts.
      operationId: getWatchlistMultipleAccounts
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Watchlist'
        "401":
          description: An error message indicating the caller must pass a valid AuthToken
            in the HTTP authorization request header.
        "500":
          description: An error message indicating there was an unexpected server error.
      security:
        - Bearer: []
components:
  requestBodies:
    Order:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Order"
      description: The order to place.
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    Account:
      properties:
        securitiesAccount:
          $ref: '#/components/schemas/AccountType'
      type: object
    AccountType:
      oneOf:
        - $ref: '#/components/schemas/CashAccount'
        - $ref: '#/components/schemas/MarginAccount'
      type: object
    AssetType:
      enum:
        - EQUITY
        - OPTION
        - FUTURE_OPTION
        - INDICATOR
        - FOREX
        - MUTUAL_FUND
        - INDEX
        - CASH_EQUIVALENT
        - FIXED_INCOME
        - CURRENCY
        - ETF
        - BOND
        - UNKNOWN
      example: '''EQUITY'' or ''OPTION'' or ''INDEX'' or ''MUTUAL_FUND'' or ''CASH_EQUIVALENT'' or ''FIXED_INCOME'' or ''CURRENCY'''
      type: string
    Bond:
      properties:
        assetType:
          $ref: '#/components/schemas/AssetType'
        bondPrice:
          example: 0
          type: number
        cusip:
          example: string
          type: string
        description:
          example: string
          type: string
        exchange:
          example: string
          type: string
        symbol:
          example: string
          type: string
      type: object
    CandleList:
      properties:
        candles:
          items:
            properties:
              close:
                example: 0
                type: number
              datetime:
                example: 0
                type: number
              high:
                example: 0
                type: number
              low:
                example: 0
                type: number
              open:
                example: 0
                type: number
              volume:
                example: 0
                type: number
            type: object
          type: array
        empty:
          type: boolean
        symbol:
          example: string
          type: string
      type: object
    CashAccount:
      properties:
        accountId:
          example: string
          type: string
        currentBalances:
          properties:
            accruedInterest:
              example: 0
              type: number
            bondValue:
              example: 0
              type: number
            cashAvailableForTrading:
              example: 0
              type: number
            cashAvailableForWithdrawal:
              example: 0
              type: number
            cashBalance:
              example: 0
              type: number
            cashCall:
              example: 0
              type: number
            cashDebitCallValue:
              example: 0
              type: number
            cashReceipts:
              example: 0
              type: number
            liquidationValue:
              example: 0
              type: number
            longMarketValue:
              example: 0
              type: number
            longNonMarginableMarketValue:
              example: 0
              type: number
            longOptionMarketValue:
              example: 0
              type: number
            moneyMarketFund:
              example: 0
              type: number
            mutualFundValue:
              example: 0
              type: number
            pendingDeposits:
              example: 0
              type: number
            savings:
              example: 0
              type: number
            shortMarketValue:
              example: 0
              type: number
            shortOptionMarketValue:
              example: 0
              type: number
            totalCash:
              example: 0
              type: number
            unsettledCash:
              example: 0
              type: number
          type: object
        initialBalances:
          properties:
            accountValue:
              example: 0
              type: number
            accruedInterest:
              example: 0
              type: number
            bondValue:
              example: 0
              type: number
            cashAvailableForTrading:
              example: 0
              type: number
            cashAvailableForWithdrawal:
              example: 0
              type: number
            cashBalance:
              example: 0
              type: number
            cashDebitCallValue:
              example: 0
              type: number
            cashReceipts:
              example: 0
              type: number
            isInCall:
              type: boolean
            liquidationValue:
              example: 0
              type: number
            longOptionMarketValue:
              example: 0
              type: number
            longStockValue:
              example: 0
              type: number
            moneyMarketFund:
              example: 0
              type: number
            mutualFundValue:
              example: 0
              type: number
            pendingDeposits:
              example: 0
              type: number
            shortOptionMarketValue:
              example: 0
              type: number
            shortStockValue:
              example: 0
              type: number
            unsettledCash:
              example: 0
              type: number
          type: object
        isClosingOnlyRestricted:
          type: boolean
        isDayTrader:
          type: boolean
        orderStrategies:
          items:
            properties:
              accountId:
                example: 0
                type: number
              activationPrice:
                example: 0
                type: number
              cancelTime:
                properties:
                  date:
                    example: string
                    type: string
                  shortFormat:
                    type: boolean
                type: object
              cancelable:
                type: boolean
              childOrderStrategies:
                items:
                  type: object
                type: array
              closeTime:
                example: string
                type: string
              complexOrderStrategyType:
                $ref: '#/components/schemas/ComplexOrderStrategyType'
              destinationLinkName:
                example: string
                type: string
              duration:
                $ref: '#/components/schemas/Duration'
              editable:
                type: boolean
              enteredTime:
                example: string
                type: string
              filledQuantity:
                example: 0
                type: number
              orderActivityCollection:
                items:
                  $ref: '#/components/schemas/Execution'
                type: array
              orderId:
                example: 0
                type: number
              orderLegCollection:
                items:
                  properties:
                    instruction:
                      $ref: '#/components/schemas/Instruction'
                    instrument:
                      $ref: '#/components/schemas/InstrumentType'
                    legId:
                      example: 0
                      type: number
                    orderLegType:
                      $ref: '#/components/schemas/AssetType'
                    positionEffect:
                      $ref: '#/components/schemas/PositionEffect'
                    quantity:
                      example: 0
                      type: number
                    quantityType:
                      $ref: '#/components/schemas/QuantityType'
                  type: object
                type: array
              orderStrategyType:
                $ref: '#/components/schemas/OrderStrategyType'
              orderType:
                $ref: '#/components/schemas/OrderType'
              price:
                example: 0
                type: number
              priceLinkBasis:
                $ref: '#/components/schemas/PriceLinkBasis'
              priceLinkType:
                $ref: '#/components/schemas/PriceLinkType'
              quantity:
                example: 0
                type: number
              releaseTime:
                example: string
                type: string
              remainingQuantity:
                example: 0
                type: number
              replacingOrderCollection:
                items:
                  type: object
                type: array
              requestedDestination:
                $ref: '#/components/schemas/DestinationExchange'
              session:
                $ref: '#/components/schemas/Session'
              specialInstruction:
                $ref: '#/components/schemas/SpecialInstruction'
              status:
                $ref: '#/components/schemas/OrderStatus'
              statusDescription:
                example: string
                type: string
              stopPrice:
                example: 0
                type: number
              stopPriceLinkBasis:
                $ref: '#/components/schemas/PriceLinkBasis'
              stopPriceLinkType:
                $ref: '#/components/schemas/PriceLinkType'
              stopPriceOffset:
                example: 0
                type: number
              stopType:
                $ref: '#/components/schemas/StopType'
              tag:
                example: string
                type: string
              taxLotMethod:
                $ref: '#/components/schemas/TaxLotMethod'
            type: object
          type: array
        positions:
          items:
            properties:
              agedQuantity:
                example: 0
                type: number
              averagePrice:
                example: 0
                type: number
              currentDayProfitLoss:
                example: 0
                type: number
              currentDayProfitLossPercentage:
                example: 0
                type: number
              instrument:
                $ref: '#/components/schemas/InstrumentType'
              longQuantity:
                example: 0
                type: number
              marketValue:
                example: 0
                type: number
              settledLongQuantity:
                example: 0
                type: number
              settledShortQuantity:
                example: 0
                type: number
              shortQuantity:
                example: 0
                type: number
            type: object
          type: array
        projectedBalances:
          properties:
            accruedInterest:
              example: 0
              type: number
            bondValue:
              example: 0
              type: number
            cashAvailableForTrading:
              example: 0
              type: number
            cashAvailableForWithdrawal:
              example: 0
              type: number
            cashBalance:
              example: 0
              type: number
            cashCall:
              example: 0
              type: number
            cashDebitCallValue:
              example: 0
              type: number
            cashReceipts:
              example: 0
              type: number
            liquidationValue:
              example: 0
              type: number
            longMarketValue:
              example: 0
              type: number
            longNonMarginableMarketValue:
              example: 0
              type: number
            longOptionMarketValue:
              example: 0
              type: number
            moneyMarketFund:
              example: 0
              type: number
            mutualFundValue:
              example: 0
              type: number
            pendingDeposits:
              example: 0
              type: number
            savings:
              example: 0
              type: number
            shortMarketValue:
              example: 0
              type: number
            shortOptionMarketValue:
              example: 0
              type: number
            totalCash:
              example: 0
              type: number
            unsettledCash:
              example: 0
              type: number
          type: object
        roundTrips:
          example: 0
          type: number
        type:
          example: '''CASH'' or ''MARGIN'''
          type: string
      type: object
    CashEquivalent:
      properties:
        assetType:
          $ref: '#/components/schemas/AssetType'
        cusip:
          example: string
          type: string
        description:
          example: string
          type: string
        symbol:
          example: string
          type: string
        type:
          example: '''SAVINGS'' or ''MONEY_MARKET_FUND'''
          type: string
      type: object
    ComplexOrderStrategyType:
      enum:
        - NONE
        - COVERED
        - VERTICAL
        - BACK_RATIO
        - CALENDAR
        - DIAGONAL
        - STRADDLE
        - STRANGLE
        - COLLAR_SYNTHETIC
        - BUTTERFLY
        - CONDOR
        - IRON_CONDOR
        - VERTICAL_ROLL
        - COLLAR_WITH_STOCK
        - DOUBLE_DIAGONAL
        - UNBALANCED_BUTTERFLY
        - UNBALANCED_CONDOR
        - UNBALANCED_IRON_CONDOR
        - UNBALANCED_VERTICAL_ROLL
        - CUSTOM
      example: '''NONE'' or ''COVERED'' or ''VERTICAL'' or ''BACK_RATIO'' or ''CALENDAR'' or ''DIAGONAL'' or ''STRADDLE'' or ''STRANGLE'' or ''COLLAR_SYNTHETIC'' or ''BUTTERFLY'' or ''CONDOR'' or ''IRON_CONDOR'' or ''VERTICAL_ROLL'' or ''COLLAR_WITH_STOCK'' or ''DOUBLE_DIAGONAL'' or ''UNBALANCED_BUTTERFLY'' or ''UNBALANCED_CONDOR'' or ''UNBALANCED_IRON_CONDOR'' or ''UNBALANCED_VERTICAL_ROLL'' or ''CUSTOM'''
      type: string
    CreateWatchlist:
      properties:
        name:
          example: string
          type: string
        watchlistItems:
          items:
            properties:
              averagePrice:
                example: 0
                format: int32
                type: integer
              commission:
                example: 0
                format: int32
                type: integer
              instrument:
                properties:
                  assetType:
                    $ref: '#/components/schemas/AssetType'
                  symbol:
                    example: string
                    type: string
                type: object
              purchasedDate:
                example: DateParam
                type: string
              quantity:
                example: 0
                format: int32
                type: integer
            type: object
          type: array
      type: object
    CurrencyType:
      enum:
        - USD
        - CAD
        - EUR
        - JPY
      example: '''USD'' or ''CAD'' or ''EUR'' or ''JPY'''
      type: string
    DestinationExchange:
      enum:
        - INET
        - ECN_ARCA
        - CBOE
        - AMEX
        - PHLX
        - ISE
        - BOX
        - NYSE
        - NASDAQ
        - BATS
        - C2
        - AUTO
      example: '''INET'' or ''ECN_ARCA'' or ''CBOE'' or ''AMEX'' or ''PHLX'' or ''ISE'' or ''BOX'' or ''NYSE'' or ''NASDAQ'' or ''BATS'' or ''C2'' or ''AUTO'''
      type: string
    Duration:
      enum:
        - DAY
        - GOOD_TILL_CANCEL
        - FILL_OR_KILL
      example: '''DAY'' or ''GOOD_TILL_CANCEL'' or ''FILL_OR_KILL'''
      type: string
    EASObject:
      properties:
        access_token:
          example: string
          type: string
        expires_in:
          example: 0
          type: number
        refresh_token:
          example: string
          type: string
        refresh_token_expires_in:
          example: 0
          type: number
        scope:
          example: string
          type: string
        token_type:
          example: string
          type: string
      type: object
    ETF:
      properties:
        52WkHigh:
          example: 0
          type: number
        52WkLow:
          example: 0
          type: number
        askId:
          example: string
          type: string
        askPrice:
          example: 0
          type: number
        askSize:
          example: 0
          type: number
        bidId:
          example: string
          type: string
        bidPrice:
          example: 0
          type: number
        bidSize:
          example: 0
          type: number
        closePrice:
          example: 0
          type: number
        description:
          example: string
          type: string
        digits:
          example: 0
          type: number
        divAmount:
          example: 0
          type: number
        divDate:
          example: string
          type: string
        divYield:
          example: 0
          type: number
        exchange:
          example: string
          type: string
        exchangeName:
          example: string
          type: string
        highPrice:
          example: 0
          type: number
        lastId:
          example: string
          type: string
        lastPrice:
          example: 0
          type: number
        lastSize:
          example: 0
          type: number
        lowPrice:
          example: 0
          type: number
        marginable:
          type: boolean
        mark:
          example: 0
          type: number
        netChange:
          example: 0
          type: number
        openPrice:
          example: 0
          type: number
        peRatio:
          example: 0
          type: number
        quoteTimeInLong:
          example: 0
          type: number
        regularMarketLastPrice:
          example: 0
          type: number
        regularMarketLastSize:
          example: 0
          type: number
        regularMarketNetChange:
          example: 0
          type: number
        regularMarketTradeTimeInLong:
          example: 0
          type: number
        securityStatus:
          example: string
          type: string
        shortable:
          type: boolean
        symbol:
          example: string
          type: string
        totalVolume:
          example: 0
          type: number
        tradeTimeInLong:
          example: 0
          type: number
        volatility:
          example: 0
          type: number
      type: object
    Equity:
      properties:
        assetType:
          $ref: '#/components/schemas/AssetType'
        cusip:
          example: string
          type: string
        description:
          example: string
          type: string
        symbol:
          example: string
          type: string
      type: object
    EquityPriceLinkType:
      enum:
        - VALUE
        - PERCENT
      example: '''VALUE'' or ''PERCENT'''
      type: string
    Execution:
      properties:
        activityType:
          example: '''EXECUTION'' or ''ORDER_ACTION'''
          type: string
        executionLegs:
          items:
            properties:
              legId:
                example: 0
                type: number
              mismarkedQuantity:
                example: 0
                type: number
              price:
                example: 0
                type: number
              quantity:
                example: 0
                type: number
              time:
                example: string
                type: string
            type: object
          type: array
        executionType:
          example: FILL
          type: string
        orderRemainingQuantity:
          example: 0
          type: number
        quantity:
          example: 0
          type: number
      type: object
    ExpirationDate:
      properties:
        date:
          example: string
          type: string
      type: object
    FixedIncome:
      properties:
        assetType:
          $ref: '#/components/schemas/AssetType'
        cusip:
          example: string
          type: string
        description:
          example: string
          type: string
        factor:
          example: 0
          type: number
        maturityDate:
          example: string
          type: string
        symbol:
          example: string
          type: string
        variableRate:
          example: 0
          type: number
      type: object
    Forex:
      properties:
        52WkHighInDouble:
          example: 0
          type: number
        52WkLowInDouble:
          example: 0
          type: number
        askPriceInDouble:
          example: 0
          type: number
        bidPriceInDouble:
          example: 0
          type: number
        changeInDouble:
          example: 0
          type: number
        closePriceInDouble:
          example: 0
          type: number
        description:
          example: string
          type: string
        digits:
          example: 0
          type: number
        exchange:
          example: string
          type: string
        exchangeName:
          example: string
          type: string
        highPriceInDouble:
          example: 0
          type: number
        isTradable:
          type: boolean
        lastPriceInDouble:
          example: 0
          type: number
        lowPriceInDouble:
          example: 0
          type: number
        mark:
          example: 0
          type: number
        marketMaker:
          example: string
          type: string
        openPriceInDouble:
          example: 0
          type: number
        percentChange:
          example: 0
          type: number
        product:
          example: string
          type: string
        securityStatus:
          example: string
          type: string
        symbol:
          example: string
          type: string
        tick:
          example: 0
          type: number
        tickAmount:
          example: 0
          type: number
        tradingHours:
          example: string
          type: string
      type: object
    Fundamental:
      properties:
        assetType:
          $ref: '#/components/schemas/AssetType'
        cusip:
          example: string
          type: string
        description:
          example: string
          type: string
        exchange:
          example: string
          type: string
        fundamental:
          properties:
            beta:
              example: 0
              type: number
            bookValuePerShare:
              example: 0
              type: number
            currentRatio:
              example: 0
              type: number
            divGrowthRate3Year:
              example: 0
              type: number
            dividendAmount:
              example: 0
              type: number
            dividendDate:
              example: string
              type: string
            dividendPayAmount:
              example: 0
              type: number
            dividendPayDate:
              example: string
              type: string
            dividendYield:
              example: 0
              type: number
            epsChange:
              example: 0
              type: number
            epsChangePercentTTM:
              example: 0
              type: number
            epsChangeYear:
              example: 0
              type: number
            epsTTM:
              example: 0
              type: number
            grossMarginMRQ:
              example: 0
              type: number
            grossMarginTTM:
              example: 0
              type: number
            high52:
              example: 0
              type: number
            interestCoverage:
              example: 0
              type: number
            low52:
              example: 0
              type: number
            ltDebtToEquity:
              example: 0
              type: number
            marketCap:
              example: 0
              type: number
            marketCapFloat:
              example: 0
              type: number
            netProfitMarginMRQ:
              example: 0
              type: number
            netProfitMarginTTM:
              example: 0
              type: number
            operatingMarginMRQ:
              example: 0
              type: number
            operatingMarginTTM:
              example: 0
              type: number
            pbRatio:
              example: 0
              type: number
            pcfRatio:
              example: 0
              type: number
            peRatio:
              example: 0
              type: number
            pegRatio:
              example: 0
              type: number
            prRatio:
              example: 0
              type: number
            quickRatio:
              example: 0
              type: number
            returnOnAssets:
              example: 0
              type: number
            returnOnEquity:
              example: 0
              type: number
            returnOnInvestment:
              example: 0
              type: number
            revChangeIn:
              example: 0
              type: number
            revChangeTTM:
              example: 0
              type: number
            revChangeYear:
              example: 0
              type: number
            sharesOutstanding:
              example: 0
              type: number
            shortIntDayToCover:
              example: 0
              type: number
            shortIntToFloat:
              example: 0
              type: number
            symbol:
              example: string
              type: string
            totalDebtToCapital:
              example: 0
              type: number
            totalDebtToEquity:
              example: 0
              type: number
            vol10DayAvg:
              example: 0
              type: number
            vol1DayAvg:
              example: 0
              type: number
            vol3MonthAvg:
              example: 0
              type: number
          type: object
        symbol:
          example: string
          type: string
      type: object
    FundamentalData:
      properties:
        beta:
          example: 0
          type: number
        bookValuePerShare:
          example: 0
          type: number
        currentRatio:
          example: 0
          type: number
        divGrowthRate3Year:
          example: 0
          type: number
        dividendAmount:
          example: 0
          type: number
        dividendDate:
          example: string
          type: string
        dividendPayAmount:
          example: 0
          type: number
        dividendPayDate:
          example: string
          type: string
        dividendYield:
          example: 0
          type: number
        epsChange:
          example: 0
          type: number
        epsChangePercentTTM:
          example: 0
          type: number
        epsChangeYear:
          example: 0
          type: number
        epsTTM:
          example: 0
          type: number
        grossMarginMRQ:
          example: 0
          type: number
        grossMarginTTM:
          example: 0
          type: number
        high52:
          example: 0
          type: number
        interestCoverage:
          example: 0
          type: number
        low52:
          example: 0
          type: number
        ltDebtToEquity:
          example: 0
          type: number
        marketCap:
          example: 0
          type: number
        marketCapFloat:
          example: 0
          type: number
        netProfitMarginMRQ:
          example: 0
          type: number
        netProfitMarginTTM:
          example: 0
          type: number
        operatingMarginMRQ:
          example: 0
          type: number
        operatingMarginTTM:
          example: 0
          type: number
        pbRatio:
          example: 0
          type: number
        pcfRatio:
          example: 0
          type: number
        peRatio:
          example: 0
          type: number
        pegRatio:
          example: 0
          type: number
        prRatio:
          example: 0
          type: number
        quickRatio:
          example: 0
          type: number
        returnOnAssets:
          example: 0
          type: number
        returnOnEquity:
          example: 0
          type: number
        returnOnInvestment:
          example: 0
          type: number
        revChangeIn:
          example: 0
          type: number
        revChangeTTM:
          example: 0
          type: number
        revChangeYear:
          example: 0
          type: number
        sharesOutstanding:
          example: 0
          type: number
        shortIntDayToCover:
          example: 0
          type: number
        shortIntToFloat:
          example: 0
          type: number
        symbol:
          example: string
          type: string
        totalDebtToCapital:
          example: 0
          type: number
        totalDebtToEquity:
          example: 0
          type: number
        vol10DayAvg:
          example: 0
          type: number
        vol1DayAvg:
          example: 0
          type: number
        vol3MonthAvg:
          example: 0
          type: number
      type: object
    Future:
      properties:
        askId:
          example: string
          type: string
        askPriceInDouble:
          example: 0
          type: number
        bidId:
          example: string
          type: string
        bidPriceInDouble:
          example: 0
          type: number
        changeInDouble:
          example: 0
          type: number
        closePriceInDouble:
          example: 0
          type: number
        description:
          example: string
          type: string
        exchange:
          example: string
          type: string
        exchangeName:
          example: string
          type: string
        futureActiveSymbol:
          example: string
          type: string
        futureExpirationDate:
          example: string
          type: string
        futureIsActive:
          type: boolean
        futureIsTradable:
          type: boolean
        futureMultiplier:
          example: 0
          type: number
        futurePercentChange:
          example: 0
          type: number
        futurePriceFormat:
          example: string
          type: string
        futureSettlementPrice:
          example: 0
          type: number
        futureTradingHours:
          example: string
          type: string
        highPriceInDouble:
          example: 0
          type: number
        lastId:
          example: string
          type: string
        lastPriceInDouble:
          example: 0
          type: number
        lowPriceInDouble:
          example: 0
          type: number
        mark:
          example: 0
          type: number
        openInterest:
          example: 0
          type: number
        openPriceInDouble:
          example: 0
          type: number
        product:
          example: string
          type: string
        securityStatus:
          example: string
          type: string
        symbol:
          example: string
          type: string
        tick:
          example: 0
          type: number
        tickAmount:
          example: 0
          type: number
      type: object
    FutureOptions:
      properties:
        askPriceInDouble:
          example: 0
          type: number
        bidPriceInDouble:
          example: 0
          type: number
        closePriceInDouble:
          example: 0
          type: number
        contractType:
          $ref: '#/components/schemas/PutOrCall'
        deltaInDouble:
          example: 0
          type: number
        description:
          example: string
          type: string
        digits:
          example: 0
          type: number
        exchangeName:
          example: string
          type: string
        exerciseType:
          example: string
          type: string
        expirationType:
          example: string
          type: string
        futureExpirationDate:
          example: 0
          type: number
        futureIsActive:
          type: boolean
        futureIsTradable:
          type: boolean
        futurePercentChange:
          example: 0
          type: number
        futureTradingHours:
          example: string
          type: string
        gammaInDouble:
          example: 0
          type: number
        highPriceInDouble:
          example: 0
          type: number
        inTheMoney:
          type: boolean
        lastPriceInDouble:
          example: 0
          type: number
        lowPriceInDouble:
          example: 0
          type: number
        mark:
          example: 0
          type: number
        moneyIntrinsicValueInDouble:
          example: 0
          type: number
        multiplierInDouble:
          example: 0
          type: number
        netChangeInDouble:
          example: 0
          type: number
        openInterest:
          example: 0
          type: number
        openPriceInDouble:
          example: 0
          type: number
        rhoInDouble:
          example: 0
          type: number
        securityStatus:
          example: string
          type: string
        strikePriceInDouble:
          example: 0
          type: number
        symbol:
          example: string
          type: string
        thetaInDouble:
          example: 0
          type: number
        tick:
          example: 0
          type: number
        tickAmount:
          example: 0
          type: number
        timeValueInDouble:
          example: 0
          type: number
        underlying:
          example: string
          type: string
        vegaInDouble:
          example: 0
          type: number
        volatility:
          example: 0
          type: number
      type: object
    Hours:
      properties:
        category:
          example: string
          type: string
        date:
          example: string
          type: string
        exchange:
          example: string
          type: string
        isOpen:
          type: boolean
        marketType:
          example: '''BOND'' or ''EQUITY'' or ''ETF'' or ''FOREX'' or ''FUTURE'' or ''FUTURE_OPTION'' or ''INDEX'' or ''INDICATOR'' or ''MUTUAL_FUND'' or ''OPTION'' or ''UNKNOWN'''
          type: string
        product:
          example: string
          type: string
        productName:
          example: string
          type: string
        sessionHours:
          example: object
          type: string
      type: object
    Index:
      properties:
        52WkHigh:
          example: 0
          type: number
        52WkLow:
          example: 0
          type: number
        closePrice:
          example: 0
          type: number
        description:
          example: string
          type: string
        digits:
          example: 0
          type: number
        exchange:
          example: string
          type: string
        exchangeName:
          example: string
          type: string
        highPrice:
          example: 0
          type: number
        lastPrice:
          example: 0
          type: number
        lowPrice:
          example: 0
          type: number
        netChange:
          example: 0
          type: number
        openPrice:
          example: 0
          type: number
        securityStatus:
          example: string
          type: string
        symbol:
          example: string
          type: string
        totalVolume:
          example: 0
          type: number
        tradeTimeInLong:
          example: 0
          type: number
      type: object
    Instruction:
      enum:
        - BUY
        - SELL
        - BUY_TO_COVER
        - BUY_TO_OPEN
        - BUY_TO_CLOSE
        - SELL_TO_OPEN
        - SELL_TO_CLOSE
        - EXCHANGE
      example: '''BUY'' or ''SELL'' or ''BUY_TO_COVER'' or ''SELL_SHORT'' or ''BUY_TO_OPEN'' or ''BUY_TO_CLOSE'' or ''SELL_TO_OPEN'' or ''SELL_TO_CLOSE'' or ''EXCHANGE'''
      type: string
    Instrument:
      properties:
        assetType:
          $ref: '#/components/schemas/AssetType'
        cusip:
          example: string
          type: string
        description:
          example: string
          type: string
        exchange:
          example: string
          type: string
        symbol:
          example: string
          type: string
      type: object
    InstrumentType:
      oneOf:
        - $ref: '#/components/schemas/Option'
        - $ref: '#/components/schemas/MutualFund'
        - $ref: '#/components/schemas/CashEquivalent'
        - $ref: '#/components/schemas/Equity'
        - $ref: '#/components/schemas/FixedIncome'
      type: object
    MarginAccount:
      properties:
        accountId:
          example: string
          type: string
        currentBalances:
          properties:
            accruedInterest:
              example: 0
              type: number
            availableFunds:
              example: 0
              type: number
            availableFundsNonMarginableTrade:
              example: 0
              type: number
            bondValue:
              example: 0
              type: number
            buyingPower:
              example: 0
              type: number
            buyingPowerNonMarginableTrade:
              example: 0
              type: number
            cashBalance:
              example: 0
              type: number
            cashReceipts:
              example: 0
              type: number
            dayTradingBuyingPower:
              example: 0
              type: number
            dayTradingBuyingPowerCall:
              example: 0
              type: number
            equity:
              example: 0
              type: number
            equityPercentage:
              example: 0
              type: number
            isInCall:
              type: boolean
            liquidationValue:
              example: 0
              type: number
            longMarginValue:
              example: 0
              type: number
            longMarketValue:
              example: 0
              type: number
            longOptionMarketValue:
              example: 0
              type: number
            maintenanceCall:
              example: 0
              type: number
            maintenanceRequirement:
              example: 0
              type: number
            marginBalance:
              example: 0
              type: number
            moneyMarketFund:
              example: 0
              type: number
            mutualFundValue:
              example: 0
              type: number
            optionBuyingPower:
              example: 0
              type: number
            pendingDeposits:
              example: 0
              type: number
            regTCall:
              example: 0
              type: number
            savings:
              example: 0
              type: number
            shortBalance:
              example: 0
              type: number
            shortMarginValue:
              example: 0
              type: number
            shortMarketValue:
              example: 0
              type: number
            shortOptionMarketValue:
              example: 0
              type: number
            sma:
              example: 0
              type: number
            stockBuyingPower:
              example: 0
              type: number
          type: object
        initialBalances:
          properties:
            accountValue:
              example: 0
              type: number
            accruedInterest:
              example: 0
              type: number
            availableFundsNonMarginableTrade:
              example: 0
              type: number
            bondValue:
              example: 0
              type: number
            buyingPower:
              example: 0
              type: number
            cashAvailableForTrading:
              example: 0
              type: number
            cashBalance:
              example: 0
              type: number
            cashReceipts:
              example: 0
              type: number
            dayTradingBuyingPower:
              example: 0
              type: number
            dayTradingBuyingPowerCall:
              example: 0
              type: number
            dayTradingEquityCall:
              example: 0
              type: number
            equity:
              example: 0
              type: number
            equityPercentage:
              example: 0
              type: number
            isInCall:
              type: boolean
            liquidationValue:
              example: 0
              type: number
            longMarginValue:
              example: 0
              type: number
            longOptionMarketValue:
              example: 0
              type: number
            longStockValue:
              example: 0
              type: number
            maintenanceCall:
              example: 0
              type: number
            maintenanceRequirement:
              example: 0
              type: number
            margin:
              example: 0
              type: number
            marginBalance:
              example: 0
              type: number
            marginEquity:
              example: 0
              type: number
            moneyMarketFund:
              example: 0
              type: number
            mutualFundValue:
              example: 0
              type: number
            pendingDeposits:
              example: 0
              type: number
            regTCall:
              example: 0
              type: number
            shortBalance:
              example: 0
              type: number
            shortMarginValue:
              example: 0
              type: number
            shortOptionMarketValue:
              example: 0
              type: number
            shortStockValue:
              example: 0
              type: number
            totalCash:
              example: 0
              type: number
            unsettledCash:
              example: 0
              type: number
          type: object
        isClosingOnlyRestricted:
          type: boolean
        isDayTrader:
          type: boolean
        orderStrategies:
          items:
            properties:
              accountId:
                example: 0
                type: number
              activationPrice:
                example: 0
                type: number
              cancelTime:
                properties:
                  date:
                    example: string
                    type: string
                  shortFormat:
                    type: boolean
                type: object
              cancelable:
                type: boolean
              childOrderStrategies:
                items:
                  type: object
                type: array
              closeTime:
                example: string
                type: string
              complexOrderStrategyType:
                $ref: '#/components/schemas/ComplexOrderStrategyType'
              destinationLinkName:
                example: string
                type: string
              duration:
                $ref: '#/components/schemas/Duration'
              editable:
                type: boolean
              enteredTime:
                example: string
                type: string
              filledQuantity:
                example: 0
                type: number
              orderActivityCollection:
                $ref: '#/components/schemas/Execution'
              orderId:
                example: 0
                type: number
              orderLegCollection:
                items:
                  properties:
                    instruction:
                      $ref: '#/components/schemas/Instruction'
                    instrument:
                      $ref: '#/components/schemas/InstrumentType'
                    legId:
                      example: 0
                      type: number
                    orderLegType:
                      $ref: '#/components/schemas/AssetType'
                    positionEffect:
                      $ref: '#/components/schemas/PositionEffect'
                    quantity:
                      example: 0
                      type: number
                    quantityType:
                      $ref: '#/components/schemas/QuantityType'
                  type: object
                type: array
              orderStrategyType:
                $ref: '#/components/schemas/OrderStrategyType'
              orderType:
                $ref: '#/components/schemas/OrderType'
              price:
                example: 0
                type: number
              priceLinkBasis:
                $ref: '#/components/schemas/PriceLinkBasis'
              priceLinkType:
                $ref: '#/components/schemas/PriceLinkType'
              quantity:
                example: 0
                type: number
              releaseTime:
                example: string
                type: string
              remainingQuantity:
                example: 0
                type: number
              replacingOrderCollection:
                items:
                  type: object
                type: array
              requestedDestination:
                $ref: '#/components/schemas/DestinationExchange'
              session:
                $ref: '#/components/schemas/Session'
              specialInstruction:
                $ref: '#/components/schemas/SpecialInstruction'
              status:
                $ref: '#/components/schemas/OrderStatus'
              statusDescription:
                example: string
                type: string
              stopPrice:
                example: 0
                type: number
              stopPriceLinkBasis:
                $ref: '#/components/schemas/PriceLinkBasis'
              stopPriceLinkType:
                $ref: '#/components/schemas/PriceLinkType'
              stopPriceOffset:
                example: 0
                type: number
              stopType:
                $ref: '#/components/schemas/StopType'
              tag:
                example: string
                type: string
              taxLotMethod:
                $ref: '#/components/schemas/TaxLotMethod'
            type: object
          type: array
        positions:
          items:
            properties:
              agedQuantity:
                example: 0
                type: number
              averagePrice:
                example: 0
                type: number
              currentDayProfitLoss:
                example: 0
                type: number
              currentDayProfitLossPercentage:
                example: 0
                type: number
              instrument:
                $ref: '#/components/schemas/InstrumentType'
              longQuantity:
                example: 0
                type: number
              marketValue:
                example: 0
                type: number
              settledLongQuantity:
                example: 0
                type: number
              settledShortQuantity:
                example: 0
                type: number
              shortQuantity:
                example: 0
                type: number
            type: object
          type: array
        projectedBalances:
          properties:
            accruedInterest:
              example: 0
              type: number
            availableFunds:
              example: 0
              type: number
            availableFundsNonMarginableTrade:
              example: 0
              type: number
            bondValue:
              example: 0
              type: number
            buyingPower:
              example: 0
              type: number
            buyingPowerNonMarginableTrade:
              example: 0
              type: number
            cashBalance:
              example: 0
              type: number
            cashReceipts:
              example: 0
              type: number
            dayTradingBuyingPower:
              example: 0
              type: number
            dayTradingBuyingPowerCall:
              example: 0
              type: number
            equity:
              example: 0
              type: number
            equityPercentage:
              example: 0
              type: number
            isInCall:
              type: boolean
            liquidationValue:
              example: 0
              type: number
            longMarginValue:
              example: 0
              type: number
            longMarketValue:
              example: 0
              type: number
            longOptionMarketValue:
              example: 0
              type: number
            maintenanceCall:
              example: 0
              type: number
            maintenanceRequirement:
              example: 0
              type: number
            marginBalance:
              example: 0
              type: number
            moneyMarketFund:
              example: 0
              type: number
            mutualFundValue:
              example: 0
              type: number
            optionBuyingPower:
              example: 0
              type: number
            pendingDeposits:
              example: 0
              type: number
            regTCall:
              example: 0
              type: number
            savings:
              example: 0
              type: number
            shortBalance:
              example: 0
              type: number
            shortMarginValue:
              example: 0
              type: number
            shortMarketValue:
              example: 0
              type: number
            shortOptionMarketValue:
              example: 0
              type: number
            sma:
              example: 0
              type: number
            stockBuyingPower:
              example: 0
              type: number
          type: object
        roundTrips:
          example: 0
          type: number
        type:
          example: '''CASH'' or ''MARGIN'''
          type: string
      type: object
    Mover:
      properties:
        change:
          example: 0
          type: number
        description:
          example: string
          type: string
        direction:
          example: '''up'' or ''down'''
          type: string
        last:
          example: 0
          type: number
        symbol:
          example: string
          type: string
        totalVolume:
          example: 0
          type: number
      type: object
    MutualFund:
      properties:
        assetType:
          $ref: '#/components/schemas/AssetType'
        cusip:
          example: string
          type: string
        description:
          example: string
          type: string
        symbol:
          example: string
          type: string
        type:
          example: '''NOT_APPLICABLE'' or ''OPEN_END_NON_TAXABLE'' or ''OPEN_END_TAXABLE'' or ''NO_LOAD_NON_TAXABLE'' or ''NO_LOAD_TAXABLE'''
          type: string
      type: object
    Mutual_Fund:
      properties:
        52WkHigh:
          example: 0
          type: number
        52WkLow:
          example: 0
          type: number
        closePrice:
          example: 0
          type: number
        description:
          example: string
          type: string
        digits:
          example: 0
          type: number
        divAmount:
          example: 0
          type: number
        divDate:
          example: string
          type: string
        divYield:
          example: 0
          type: number
        exchange:
          example: string
          type: string
        exchangeName:
          example: string
          type: string
        nAV:
          example: 0
          type: number
        netChange:
          example: 0
          type: number
        peRatio:
          example: 0
          type: number
        securityStatus:
          example: string
          type: string
        symbol:
          example: string
          type: string
        totalVolume:
          example: 0
          type: number
        tradeTimeInLong:
          example: 0
          type: number
      type: object
    Option:
      properties:
        assetType:
          $ref: '#/components/schemas/AssetType'
        cusip:
          example: string
          type: string
        description:
          example: string
          type: string
        optionDeliverables:
          items:
            properties:
              assetType:
                $ref: '#/components/schemas/AssetType'
              currencyType:
                $ref: '#/components/schemas/CurrencyType'
              deliverableUnits:
                example: 0
                type: number
              symbol:
                example: string
                type: string
            type: object
          type: array
        optionMultiplier:
          example: 0
          type: number
        putCall:
          $ref: '#/components/schemas/PutOrCall'
        symbol:
          example: string
          type: string
        type:
          $ref: '#/components/schemas/OptionType'
        underlyingSymbol:
          example: string
          type: string
      type: object
    OptionChain:
      properties:
        callExpDateMap:
          example: object
          type: string
        daysToExpiration:
          example: 0
          type: number
        interestRate:
          example: 0
          type: number
        interval:
          example: 0
          type: number
        isDelayed:
          type: boolean
        isIndex:
          type: boolean
        putExpDateMap:
          example: object
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
        strategy:
          $ref: '#/components/schemas/Strategy'
        symbol:
          example: string
          type: string
        underlying:
          properties:
            ask:
              example: 0
              type: number
            askSize:
              example: 0
              type: number
            bid:
              example: 0
              type: number
            bidSize:
              example: 0
              type: number
            change:
              example: 0
              type: number
            close:
              example: 0
              type: number
            delayed:
              type: boolean
            description:
              example: string
              type: string
            exchangeName:
              example: string
              type: string
            fiftyTwoWeekHigh:
              example: 0
              type: number
            fiftyTwoWeekLow:
              example: 0
              type: number
            highPrice:
              example: 0
              type: number
            last:
              example: 0
              type: number
            lowPrice:
              example: 0
              type: number
            mark:
              example: 0
              type: number
            markChange:
              example: 0
              type: number
            markPercentChange:
              example: 0
              type: number
            openPrice:
              example: 0
              type: number
            percentChange:
              example: 0
              type: number
            quoteTime:
              example: 0
              type: number
            symbol:
              example: string
              type: string
            totalVolume:
              example: 0
              type: number
            tradeTime:
              example: 0
              type: number
          type: object
        underlyingPrice:
          example: 0
          type: number
        volatility:
          example: 0
          type: number
      type: object
    OptionDeliverables:
      properties:
        assetType:
          $ref: '#/components/schemas/AssetType'
        currencyType:
          $ref: '#/components/schemas/CurrencyType'
        deliverableUnits:
          example: string
          type: string
        symbol:
          example: string
          type: string
      type: object
    OptionType:
      enum:
        - VANILLA
        - BINARY
        - BARRIER
      example: '''VANILLA'' or ''BINARY'' or ''BARRIER'''
      type: string
    Order:
      properties:
        accountId:
          example: 0
          type: number
        activationPrice:
          example: 0
          type: number
        cancelTime:
          properties:
            date:
              example: string
              type: string
            shortFormat:
              type: boolean
          type: object
        cancelable:
          type: boolean
        childOrderStrategies:
          items:
            properties:
              cancelTime:
                properties:
                  date:
                    example: string
                    type: string
                  shortFormat:
                    type: boolean
                type: object
              complexOrderStrategyType:
                $ref: '#/components/schemas/ComplexOrderStrategyType'
              destinationLinkName:
                example: string
                type: string
              duration:
                $ref: '#/components/schemas/Duration'
              filledQuantity:
                example: 0
                type: number
              orderType:
                $ref: '#/components/schemas/OrderType'
              price:
                example: 0
                type: number
              priceLinkBasis:
                $ref: '#/components/schemas/PriceLinkBasis'
              priceLinkType:
                $ref: '#/components/schemas/PriceLinkType'
              quantity:
                example: 0
                type: number
              releaseTime:
                example: string
                type: string
              remainingQuantity:
                example: 0
                type: number
              requestedDestination:
                $ref: '#/components/schemas/DestinationExchange'
              session:
                $ref: '#/components/schemas/Session'
              stopPrice:
                example: 0
                type: number
              stopPriceLinkBasis:
                $ref: '#/components/schemas/PriceLinkBasis'
              stopPriceLinkType:
                $ref: '#/components/schemas/PriceLinkType'
              stopPriceOffset:
                example: 0
                type: number
              stopType:
                $ref: '#/components/schemas/StopType'
              taxLotMethod:
                $ref: '#/components/schemas/TaxLotMethod'
            type: object
          type: array
        closeTime:
          example: string
          type: string
        complexOrderStrategyType:
          $ref: '#/components/schemas/ComplexOrderStrategyType'
        destinationLinkName:
          example: string
          type: string
        duration:
          $ref: '#/components/schemas/Duration'
        editable:
          type: boolean
        enteredTime:
          example: string
          type: string
        filledQuantity:
          example: 0
          type: number
        orderActivityCollection:
          items:
            $ref: '#/components/schemas/Execution'
          type: array
        orderId:
          example: 0
          type: number
        orderLegCollection:
          items:
            properties:
              instruction:
                $ref: '#/components/schemas/Instruction'
              instrument:
                $ref: '#/components/schemas/InstrumentType'
              legId:
                example: 0
                type: number
              orderLegType:
                $ref: '#/components/schemas/OrderType'
              positionEffect:
                $ref: '#/components/schemas/PositionEffect'
              quantity:
                example: 0
                type: number
              quantityType:
                $ref: '#/components/schemas/QuantityType'
            type: object
          type: array
        orderStrategyType:
          $ref: '#/components/schemas/OrderStrategyType'
        orderType:
          $ref: '#/components/schemas/OrderType'
        price:
          example: 0
          type: number
        priceLinkBasis:
          $ref: '#/components/schemas/PriceLinkBasis'
        priceLinkType:
          $ref: '#/components/schemas/PriceLinkType'
        quantity:
          example: 0
          type: number
        releaseTime:
          example: string
          type: string
        remainingQuantity:
          example: 0
          type: number
        replacingOrderCollection:
          items:
            type: object
          type: array
        requestedDestination:
          $ref: '#/components/schemas/DestinationExchange'
        session:
          $ref: '#/components/schemas/Session'
        specialInstruction:
          $ref: '#/components/schemas/SpecialInstruction'
        status:
          $ref: '#/components/schemas/OrderStatus'
        statusDescription:
          example: string
          type: string
        stopPrice:
          example: 0
          type: number
        stopPriceLinkBasis:
          $ref: '#/components/schemas/PriceLinkBasis'
        stopPriceLinkType:
          $ref: '#/components/schemas/PriceLinkType'
        stopPriceOffset:
          example: 0
          type: number
        stopType:
          $ref: '#/components/schemas/StopType'
        tag:
          example: string
          type: string
        taxLotMethod:
          $ref: '#/components/schemas/TaxLotMethod'
      type: object
    OrderCollection:
      items:
        properties:
          accountId:
            example: 0
            type: number
          activationPrice:
            example: 0
            type: number
          cancelTime:
            properties:
              date:
                example: string
                type: string
              shortFormat:
                type: boolean
            type: object
          cancelable:
            type: boolean
          childOrderStrategies:
            items:
              type: object
            type: array
          closeTime:
            example: string
            type: string
          complexOrderStrategyType:
            $ref: '#/components/schemas/ComplexOrderStrategyType'
          destinationLinkName:
            example: string
            type: string
          duration:
            $ref: '#/components/schemas/Duration'
          editable:
            type: boolean
          enteredTime:
            example: string
            type: string
          filledQuantity:
            example: 0
            type: number
          orderActivityCollection:
            items:
              $ref: '#/components/schemas/Execution'
            type: array
          orderId:
            example: 0
            type: number
          orderLegCollection:
            items:
              properties:
                instruction:
                  $ref: '#/components/schemas/Instruction'
                instrument:
                  $ref: '#/components/schemas/InstrumentType'
                legId:
                  example: 0
                  type: number
                orderLegType:
                  $ref: '#/components/schemas/AssetType'
                positionEffect:
                  $ref: '#/components/schemas/PositionEffect'
                quantity:
                  example: 0
                  type: number
                quantityType:
                  $ref: '#/components/schemas/QuantityType'
              type: object
            type: array
          orderStrategyType:
            $ref: '#/components/schemas/OrderStrategyType'
          orderType:
            $ref: '#/components/schemas/OrderType'
          price:
            example: 0
            type: number
          priceLinkBasis:
            $ref: '#/components/schemas/PriceLinkBasis'
          priceLinkType:
            $ref: '#/components/schemas/PriceLinkType'
          quantity:
            example: 0
            type: number
          releaseTime:
            example: string
            type: string
          remainingQuantity:
            example: 0
            type: number
          replacingOrderCollection:
            items:
              type: object
            type: array
          requestedDestination:
            $ref: '#/components/schemas/DestinationExchange'
          session:
            $ref: '#/components/schemas/Session'
          specialInstruction:
            $ref: '#/components/schemas/SpecialInstruction'
          status:
            $ref: '#/components/schemas/OrderStatus'
          statusDescription:
            example: string
            type: string
          stopPrice:
            example: 0
            type: number
          stopPriceLinkBasis:
            $ref: '#/components/schemas/PriceLinkBasis'
          stopPriceLinkType:
            $ref: '#/components/schemas/PriceLinkType'
          stopPriceOffset:
            example: 0
            type: number
          stopType:
            $ref: '#/components/schemas/StopType'
          tag:
            example: string
            type: string
          taxLotMethod:
            $ref: '#/components/schemas/TaxLotMethod'
        type: object
      type: array
    OrderStatus:
      enum:
        - AWAITING_PARENT_ORDER
        - AWAITING_CONDITION
        - AWAITING_MANUAL_REVIEW
        - ACCEPTED
        - AWAITING_UR_OUT
        - PENDING_ACTIVATION
        - WORKING
        - REJECTED
        - QUEUED
        - PENDING_CANCEL
        - CANCELED
        - PENDING_REPLACE
        - REPLACED
        - FILLED
        - EXPIRED
      example: '''AWAITING_PARENT_ORDER'' or ''AWAITING_CONDITION'' or ''AWAITING_MANUAL_REVIEW'' or ''ACCEPTED'' or ''AWAITING_UR_OUT'' or ''PENDING_ACTIVATION'' or ''QUEUED'' or ''WORKING'' or ''REJECTED'' or ''PENDING_CANCEL'' or ''CANCELED'' or ''PENDING_REPLACE'' or ''REPLACED'' or ''FILLED'' or ''EXPIRED'''
      type: string
    OrderStrategyType:
      enum:
        - SINGLE
        - OCO
        - TRIGGER
      example: '''SINGLE'' or ''OCO'' or ''TRIGGER'''
      type: string
    OrderType:
      enum:
        - MARKET
        - LIMIT
        - STOP
        - STOP_LIMIT
        - TRAILING_STOP
        - MARKET_ON_CLOSE
        - EXERCISE
        - TRAILING_STOP_LIMIT
        - NET_DEBIT
        - NET_CREDIT
        - NET_ZERO
      example: '''MARKET'' or ''LIMIT'' or ''STOP'' or ''STOP_LIMIT'' or ''TRAILING_STOP'' or ''MARKET_ON_CLOSE'' or ''EXERCISE'' or ''TRAILING_STOP_LIMIT'' or ''NET_DEBIT'' or ''NET_CREDIT'' or ''NET_ZERO'''
      type: string
    PositionEffect:
      enum:
        - OPENING
        - CLOSING
        - AUTOMATIC
      example: '''OPENING'' or ''CLOSING'' or ''AUTOMATIC'''
      type: string
    Preferences:
      properties:
        authTokenTimeout:
          example: '''FIFTY_FIVE_MINUTES'' or ''TWO_HOURS'' or ''FOUR_HOURS'' or ''EIGHT_HOURS'''
          type: string
        defaultAdvancedToolLaunch:
          example: '''TA'' or ''N'' or ''Y'' or ''TOS'' or ''NONE'' or ''CC2'''
          type: string
        defaultEquityOrderDuration:
          $ref: '#/components/schemas/Duration'
        defaultEquityOrderLegInstruction:
          example: '''BUY'' or ''SELL'' or ''BUY_TO_COVER'' or ''SELL_SHORT'' or ''NONE'''
          type: string
        defaultEquityOrderMarketSession:
          $ref: '#/components/schemas/Session'
        defaultEquityOrderPriceLinkType:
          $ref: '#/components/schemas/EquityPriceLinkType'
        defaultEquityOrderType:
          $ref: '#/components/schemas/OrderType'
        defaultEquityQuantity:
          example: 0
          type: number
        directEquityRouting:
          type: boolean
        directOptionsRouting:
          type: boolean
        equityTaxLotMethod:
          $ref: '#/components/schemas/TaxLotMethod'
        expressTrading:
          type: boolean
        mutualFundTaxLotMethod:
          $ref: '#/components/schemas/TaxLotMethod'
        optionTaxLotMethod:
          $ref: '#/components/schemas/TaxLotMethod'
      type: object
    PriceLinkBasis:
      enum:
        - MANUAL
        - BASE
        - TRIGGER
        - LAST
        - BID
        - ASK
        - ASK_BID
        - MARK
        - AVERAGE
      example: '''MANUAL'' or ''BASE'' or ''TRIGGER'' or ''LAST'' or ''BID'' or ''ASK'' or ''ASK_BID'' or ''MARK'' or ''AVERAGE'''
      type: string
    PriceLinkType:
      enum:
        - VALUE
        - PERCENT
        - TICK
      example: '''VALUE'' or ''PERCENT'' or ''TICK'''
      type: string
    PutOrCall:
      enum:
        - PUT
        - CALL
        - ALL
      example: '''PUT'' or ''CALL'' or ''ALL'''
      type: string
    QuantityType:
      enum:
        - ALL_SHARES
        - DOLLARS
        - SHARES
      example: '''ALL_SHARES'' or ''DOLLARS'' or ''SHARES'''
      type: string
    SavedOrder:
      properties:
        accountId:
          example: 0
          type: number
        activationPrice:
          example: 0
          type: number
        cancelTime:
          properties:
            date:
              example: string
              type: string
            shortFormat:
              type: boolean
          type: object
        cancelable:
          type: boolean
        childOrderStrategies:
          items:
            properties:
              accountId:
                example: 0
                type: number
              activationPrice:
                example: 0
                type: number
              cancelTime:
                properties:
                  date:
                    example: string
                    type: string
                  shortFormat:
                    type: boolean
                type: object
              cancelable:
                type: boolean
              closeTime:
                example: string
                type: string
              complexOrderStrategyType:
                $ref: '#/components/schemas/ComplexOrderStrategyType'
              destinationLinkName:
                example: string
                type: string
              duration:
                $ref: '#/components/schemas/Duration'
              editable:
                type: boolean
              enteredTime:
                example: string
                type: string
              filledQuantity:
                example: 0
                type: number
              orderActivityCollection:
                items:
                  $ref: '#/components/schemas/Execution'
                type: array
              orderId:
                example: 0
                type: number
              orderLegCollection:
                items:
                  properties:
                    instruction:
                      $ref: '#/components/schemas/Instruction'
                    instrument:
                      $ref: '#/components/schemas/InstrumentType'
                    legId:
                      example: 0
                      type: number
                    orderLegType:
                      $ref: '#/components/schemas/AssetType'
                    positionEffect:
                      $ref: '#/components/schemas/PositionEffect'
                    quantity:
                      example: 0
                      type: number
                    quantityType:
                      $ref: '#/components/schemas/QuantityType'
                  type: object
                type: array
              orderStrategyType:
                $ref: '#/components/schemas/OrderStrategyType'
              orderType:
                $ref: '#/components/schemas/OrderType'
              price:
                example: 0
                type: number
              priceLinkBasis:
                $ref: '#/components/schemas/PriceLinkBasis'
              priceLinkType:
                $ref: '#/components/schemas/PriceLinkType'
              quantity:
                example: 0
                type: number
              releaseTime:
                example: string
                type: string
              remainingQuantity:
                example: 0
                type: number
              replacingOrderCollection:
                items:
                  type: object
                type: array
              requestedDestination:
                $ref: '#/components/schemas/DestinationExchange'
              session:
                $ref: '#/components/schemas/Session'
              specialInstruction:
                $ref: '#/components/schemas/SpecialInstruction'
              status:
                $ref: '#/components/schemas/OrderStatus'
              stopPrice:
                example: 0
                type: number
              stopPriceLinkBasis:
                $ref: '#/components/schemas/PriceLinkBasis'
              stopPriceLinkType:
                $ref: '#/components/schemas/PriceLinkType'
              stopPriceOffset:
                example: 0
                type: number
              stopType:
                $ref: '#/components/schemas/StopType'
              tag:
                example: string
                type: string
              taxLotMethod:
                $ref: '#/components/schemas/TaxLotMethod'
            type: object
          type: array
        closeTime:
          example: string
          type: string
        complexOrderStrategyType:
          $ref: '#/components/schemas/ComplexOrderStrategyType'
        destinationLinkName:
          example: string
          type: string
        duration:
          $ref: '#/components/schemas/Duration'
        editable:
          type: boolean
        enteredTime:
          example: string
          type: string
        filledQuantity:
          example: 0
          type: number
        orderActivityCollection:
          items:
            $ref: '#/components/schemas/Execution'
          type: array
        orderId:
          example: 0
          type: number
        orderLegCollection:
          items:
            properties:
              instruction:
                $ref: '#/components/schemas/Instruction'
              instrument:
                $ref: '#/components/schemas/InstrumentType'
              legId:
                example: 0
                type: number
              orderLegType:
                $ref: '#/components/schemas/AssetType'
              positionEffect:
                $ref: '#/components/schemas/PositionEffect'
              quantity:
                example: 0
                type: number
              quantityType:
                $ref: '#/components/schemas/QuantityType'
            type: object
          type: array
        orderStrategyType:
          $ref: '#/components/schemas/OrderStrategyType'
        orderType:
          $ref: '#/components/schemas/OrderType'
        price:
          example: 0
          type: number
        priceLinkBasis:
          $ref: '#/components/schemas/PriceLinkBasis'
        priceLinkType:
          $ref: '#/components/schemas/PriceLinkType'
        quantity:
          example: 0
          type: number
        releaseTime:
          example: string
          type: string
        remainingQuantity:
          example: 0
          type: number
        requestedDestination:
          $ref: '#/components/schemas/DestinationExchange'
        savedOrderId:
          example: 0
          type: number
        savedTime:
          example: string
          type: string
        session:
          $ref: '#/components/schemas/Session'
        specialInstruction:
          $ref: '#/components/schemas/SpecialInstruction'
        status:
          $ref: '#/components/schemas/OrderStatus'
        statusDescription:
          example: string
          type: string
        stopPrice:
          example: 0
          type: number
        stopPriceLinkBasis:
          $ref: '#/components/schemas/PriceLinkBasis'
        stopPriceLinkType:
          $ref: '#/components/schemas/PriceLinkType'
        stopPriceOffset:
          example: 0
          type: number
        stopType:
          $ref: '#/components/schemas/StopType'
        tag:
          example: string
          type: string
        taxLotMethod:
          $ref: '#/components/schemas/TaxLotMethod'
      type: object
    Session:
      enum:
        - NORMAL
        - SEAMLESS
        - AM
        - PM
      example: '''NORMAL'' or ''AM'' or ''PM'' or ''SEAMLESS'''
      type: string
    SpecialInstruction:
      enum:
        - ALL_OR_NONE
        - DO_NOT_REDUCE
        - ALL_OR_NONE_DO_NOT_REDUCE
      example: '''ALL_OR_NONE'' or ''DO_NOT_REDUCE'' or ''ALL_OR_NONE_DO_NOT_REDUCE'''
      type: string
    StopType:
      enum:
        - STANDARD
        - BID
        - ASK
        - LAST
        - MARK
      example: '''STANDARD'' or ''BID'' or ''ASK'' or ''LAST'' or ''MARK'''
      type: string
    Strategy:
      enum:
        - SINGLE
        - ANALYTICAL
        - COVERED
        - VERTICAL
        - CALENDAR
        - STRANGLE
        - STRADDLE
        - BUTTERFLY
        - CONDOR
        - DIAGONAL
        - COLLAR
        - ROLL
      example: '''SINGLE'' or ''ANALYTICAL'' or ''COVERED'' or ''VERTICAL'' or ''CALENDAR'' or ''STRANGLE'' or ''STRADDLE'' or ''BUTTERFLY'' or ''CONDOR'' or ''DIAGONAL'' or ''COLLAR'' or ''ROLL'''
      type: string
    StrikePriceMap:
      type: object
    SubscriptionKey:
      properties:
        keys:
          items:
            properties:
              key:
                example: string
                type: string
            type: object
          type: array
      type: object
    TaxLotMethod:
      enum:
        - FIFO
        - LIFO
        - HIGH_COST
        - LOW_COST
        - AVERAGE_COST
        - SPECIFIC_LOT
      example: '''FIFO'' or ''LIFO'' or ''HIGH_COST'' or ''LOW_COST'' or ''AVERAGE_COST'' or ''SPECIFIC_LOT'''
      type: string
    Transaction:
      properties:
        accruedInterest:
          example: 0
          type: number
        achStatus:
          example: '''Approved'' or ''Rejected'' or ''Cancel'' or ''Error'''
          type: string
        cashBalanceEffectFlag:
          type: boolean
        clearingReferenceNumber:
          example: string
          type: string
        dayTradeBuyingPowerEffect:
          example: 0
          type: number
        description:
          example: string
          type: string
        fees:
          example: object
          type: string
        netAmount:
          example: 0
          type: number
        orderDate:
          example: string
          type: string
        orderId:
          example: string
          type: string
        requirementReallocationAmount:
          example: 0
          type: number
        settlementDate:
          example: string
          type: string
        sma:
          example: 0
          type: number
        subAccount:
          example: string
          type: string
        transactionDate:
          example: string
          type: string
        transactionId:
          example: 0
          type: number
        transactionItem:
          properties:
            accountId:
              example: 0
              type: number
            amount:
              example: 0
              type: number
            cost:
              example: 0
              type: number
            instruction:
              $ref: '#/components/schemas/Instruction'
            instrument:
              properties:
                assetType:
                  $ref: '#/components/schemas/AssetType'
                bondInterestRate:
                  example: 0
                  type: number
                bondMaturityDate:
                  example: string
                  type: string
                cusip:
                  example: string
                  type: string
                description:
                  example: string
                  type: string
                optionExpirationDate:
                  example: string
                  type: string
                optionStrikePrice:
                  example: 0
                  type: number
                putCall:
                  $ref: '#/components/schemas/PutOrCall'
                symbol:
                  example: string
                  type: string
                underlyingSymbol:
                  example: string
                  type: string
              type: object
            parentChildIndicator:
              example: string
              type: string
            parentOrderKey:
              example: 0
              type: number
            positionEffect:
              $ref: '#/components/schemas/PositionEffect'
            price:
              example: 0
              type: number
          type: object
        transactionSubType:
          example: string
          type: string
        type:
          example: '''TRADE'' or ''RECEIVE_AND_DELIVER'' or ''DIVIDEND_OR_INTEREST'' or ''ACH_RECEIPT'' or ''ACH_DISBURSEMENT'' or ''CASH_RECEIPT'' or ''CASH_DISBURSEMENT'' or ''ELECTRONIC_FUND'' or ''WIRE_OUT'' or ''WIRE_IN'' or ''JOURNAL'' or ''MEMORANDUM'' or ''MARGIN_CALL'' or ''MONEY_MARKET'' or ''SMA_ADJUSTMENT'''
          type: string
      type: object
    TransactionType:
      enum:
        - ALL
        - TRADE
        - BUY_ONLY
        - SELL_ONLY
        - CASH_IN_OR_CASH_OUT
        - CHECKING
        - DIVIDEND
        - INTEREST
        - OTHER
        - ADVISOR_FEES
      example: '''ALL'' or ''TRADE'' or ''BUY_ONLY'' or ''SELL_ONLY'' or ''CASH_IN_OR_CASH_OUT'' or ''CHECKING'' or ''DIVIDEND'' or ''INTEREST'' or ''OTHER'' or ''ADVISOR_FEES'''
      type: string
    Underlying:
      properties:
        ask:
          example: 0
          type: number
        askSize:
          example: 0
          type: number
        bid:
          example: 0
          type: number
        bidSize:
          example: 0
          type: number
        change:
          example: 0
          type: number
        close:
          example: 0
          type: number
        delayed:
          type: boolean
        description:
          example: string
          type: string
        exchangeName:
          example: '''IND'' or ''ASE'' or ''NYS'' or ''NAS'' or ''NAP'' or ''PAC'' or ''OPR'' or ''BATS'''
          type: string
        fiftyTwoWeekHigh:
          example: 0
          type: number
        fiftyTwoWeekLow:
          example: 0
          type: number
        highPrice:
          example: 0
          type: number
        last:
          example: 0
          type: number
        lowPrice:
          example: 0
          type: number
        mark:
          example: 0
          type: number
        markChange:
          example: 0
          type: number
        markPercentChange:
          example: 0
          type: number
        openPrice:
          example: 0
          type: number
        percentChange:
          example: 0
          type: number
        quoteTime:
          example: 0
          type: number
        symbol:
          example: string
          type: string
        totalVolume:
          example: 0
          type: number
        tradeTime:
          example: 0
          type: number
      type: object
    UpdatePreferences:
      properties:
        authTokenTimeout:
          example: '''FIFTY_FIVE_MINUTES'' or ''TWO_HOURS'' or ''FOUR_HOURS'' or ''EIGHT_HOURS'''
          type: string
        defaultAdvancedToolLaunch:
          example: '''TA'' or ''N'' or ''Y'' or ''TOS'' or ''NONE'' or ''CC2'''
          type: string
        defaultEquityOrderDuration:
          $ref: '#/components/schemas/Duration'
        defaultEquityOrderLegInstruction:
          example: '''BUY'' or ''SELL'' or ''BUY_TO_COVER'' or ''SELL_SHORT'' or ''NONE'''
          type: string
        defaultEquityOrderMarketSession:
          $ref: '#/components/schemas/Session'
        defaultEquityOrderPriceLinkType:
          $ref: '#/components/schemas/EquityPriceLinkType'
        defaultEquityOrderType:
          $ref: '#/components/schemas/OrderType'
        defaultEquityQuantity:
          example: 0
          format: int32
          type: integer
        directEquityRouting:
          type: boolean
        directOptionsRouting:
          type: boolean
        equityTaxLotMethod:
          $ref: '#/components/schemas/TaxLotMethod'
        expressTrading:
          type: boolean
        mutualFundTaxLotMethod:
          $ref: '#/components/schemas/TaxLotMethod'
        optionTaxLotMethod:
          $ref: '#/components/schemas/TaxLotMethod'
      type: object
    UpdateWatchlist:
      properties:
        name:
          example: string
          type: string
        watchlistId:
          example: string
          type: string
        watchlistItems:
          items:
            properties:
              averagePrice:
                example: 0
                format: int32
                type: integer
              commission:
                example: 0
                format: int32
                type: integer
              instrument:
                properties:
                  assetType:
                    $ref: '#/components/schemas/AssetType'
                  symbol:
                    example: string
                    type: string
                type: object
              purchasedDate:
                example: DateParam
                type: string
              quantity:
                example: 0
                format: int32
                type: integer
              sequenceId:
                example: 0
                format: int32
                type: integer
            type: object
          type: array
      type: object
    UserPrincipal:
      properties:
        accessLevel:
          example: string
          type: string
        accounts:
          items:
            properties:
              accountCdDomainId:
                example: string
                type: string
              accountId:
                example: string
                type: string
              acl:
                example: string
                type: string
              authorizations:
                properties:
                  advancedMargin:
                    type: boolean
                  apex:
                    type: boolean
                  levelTwoQuotes:
                    type: boolean
                  marginTrading:
                    type: boolean
                  optionTradingLevel:
                    example: '''COVERED'' or ''FULL'' or ''LONG'' or ''SPREAD'' or ''NONE'''
                    type: string
                  scottradeAccount:
                    type: boolean
                  stockTrading:
                    type: boolean
                  streamerAccess:
                    type: boolean
                  streamingNews:
                    type: boolean
                type: object
              company:
                example: string
                type: string
              description:
                example: string
                type: string
              displayName:
                example: string
                type: string
              preferences:
                properties:
                  authTokenTimeout:
                    example: '''FIFTY_FIVE_MINUTES'' or ''TWO_HOURS'' or ''FOUR_HOURS'' or ''EIGHT_HOURS'''
                    type: string
                  defaultAdvancedToolLaunch:
                    example: '''TA'' or ''N'' or ''Y'' or ''TOS'' or ''NONE'' or ''CC2'''
                    type: string
                  defaultEquityOrderDuration:
                    $ref: '#/components/schemas/Duration'
                  defaultEquityOrderLegInstruction:
                    example: '''BUY'' or ''SELL'' or ''BUY_TO_COVER'' or ''SELL_SHORT'' or ''NONE'''
                    type: string
                  defaultEquityOrderMarketSession:
                    $ref: '#/components/schemas/Session'
                  defaultEquityOrderPriceLinkType:
                    $ref: '#/components/schemas/EquityPriceLinkType'
                  defaultEquityOrderType:
                    $ref: '#/components/schemas/OrderType'
                  defaultEquityQuantity:
                    example: 0
                    type: number
                  directEquityRouting:
                    type: boolean
                  directOptionsRouting:
                    type: boolean
                  equityTaxLotMethod:
                    $ref: '#/components/schemas/TaxLotMethod'
                  expressTrading:
                    type: boolean
                  mutualFundTaxLotMethod:
                    $ref: '#/components/schemas/TaxLotMethod'
                  optionTaxLotMethod:
                    $ref: '#/components/schemas/TaxLotMethod'
                type: object
              segment:
                example: string
                type: string
              surrogateIds:
                example: object
                type: string
            type: object
          type: array
        authToken:
          example: string
          type: string
        lastLoginTime:
          example: string
          type: string
        loginTime:
          example: string
          type: string
        primaryAccountId:
          example: string
          type: string
        professionalStatus:
          example: '''PROFESSIONAL'' or ''NON_PROFESSIONAL'' or ''UNKNOWN_STATUS'''
          type: string
        quotes:
          properties:
            isAmexDelayed:
              type: boolean
            isCmeDelayed:
              type: boolean
            isForexDelayed:
              type: boolean
            isIceDelayed:
              type: boolean
            isNasdaqDelayed:
              type: boolean
            isNyseDelayed:
              type: boolean
            isOpraDelayed:
              type: boolean
          type: object
        stalePassword:
          type: boolean
        streamerInfo:
          properties:
            accessLevel:
              example: string
              type: string
            acl:
              example: string
              type: string
            appId:
              example: string
              type: string
            streamerBinaryUrl:
              example: string
              type: string
            streamerSocketUrl:
              example: string
              type: string
            token:
              example: string
              type: string
            tokenTimestamp:
              example: string
              type: string
            userGroup:
              example: string
              type: string
          type: object
        streamerSubscriptionKeys:
          properties:
            keys:
              items:
                properties:
                  key:
                    example: string
                    type: string
                type: object
              type: array
          type: object
        tokenExpirationTime:
          example: string
          type: string
        userCdDomainId:
          example: string
          type: string
        userId:
          example: string
          type: string
      type: object
    Watchlist:
      properties:
        accountId:
          example: string
          type: string
        name:
          example: string
          type: string
        status:
          example: '''UNCHANGED'' or ''CREATED'' or ''UPDATED'' or ''DELETED'''
          type: string
        watchlistId:
          example: string
          type: string
        watchlistItems:
          items:
            properties:
              averagePrice:
                example: 0
                type: number
              commission:
                example: 0
                type: number
              instrument:
                properties:
                  assetType:
                    $ref: '#/components/schemas/AssetType'
                  description:
                    example: string
                    type: string
                  symbol:
                    example: string
                    type: string
                type: object
              purchasedDate:
                example: DateParam
                type: string
              quantity:
                example: 0
                type: number
              sequenceId:
                example: 0
                type: number
              status:
                example: '''UNCHANGED'' or ''CREATED'' or ''UPDATED'' or ''DELETED'''
                type: string
            type: object
          type: array
      type: object